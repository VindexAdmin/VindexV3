"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ripple-binary-codec";
exports.ids = ["vendor-chunks/ripple-binary-codec"];
exports.modules = {

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/binary.js":
/*!*************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/binary.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/* eslint-disable func-style */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signingBatchData = exports.transactionID = exports.sha512Half = exports.binaryToJSON = exports.signingClaimData = exports.signingData = exports.multiSigningData = exports.readJSON = exports.serializeObject = exports.makeParser = exports.BytesList = exports.BinarySerializer = exports.BinaryParser = void 0;\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\");\nconst binary_parser_1 = __webpack_require__(/*! ./serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nObject.defineProperty(exports, \"BinaryParser\", ({ enumerable: true, get: function () { return binary_parser_1.BinaryParser; } }));\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ./serdes/binary-serializer */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nObject.defineProperty(exports, \"BinarySerializer\", ({ enumerable: true, get: function () { return binary_serializer_1.BinarySerializer; } }));\nObject.defineProperty(exports, \"BytesList\", ({ enumerable: true, get: function () { return binary_serializer_1.BytesList; } }));\nconst hashes_1 = __webpack_require__(/*! ./hashes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hashes.js\");\nObject.defineProperty(exports, \"sha512Half\", ({ enumerable: true, get: function () { return hashes_1.sha512Half; } }));\nObject.defineProperty(exports, \"transactionID\", ({ enumerable: true, get: function () { return hashes_1.transactionID; } }));\nconst enums_1 = __webpack_require__(/*! ./enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\n/**\n * Construct a BinaryParser\n *\n * @param bytes hex-string or Uint8Array to construct BinaryParser from\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns BinaryParser\n */\nconst makeParser = (bytes, definitions) => new binary_parser_1.BinaryParser(bytes instanceof Uint8Array ? (0, utils_1.bytesToHex)(bytes) : bytes, definitions);\nexports.makeParser = makeParser;\n/**\n * Parse BinaryParser into JSON\n *\n * @param parser BinaryParser object\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns JSON for the bytes in the BinaryParser\n */\nconst readJSON = (parser, definitions = enums_1.DEFAULT_DEFINITIONS) => parser.readType(types_1.coreTypes.STObject).toJSON(definitions);\nexports.readJSON = readJSON;\n/**\n * Parse a hex-string into its JSON interpretation\n *\n * @param bytes hex-string to parse into JSON\n * @param definitions rippled definitions used to parse the values of transaction types and such.\n *                          Can be customized for sidechains and amendments.\n * @returns JSON\n */\nconst binaryToJSON = (bytes, definitions) => readJSON(makeParser(bytes, definitions), definitions);\nexports.binaryToJSON = binaryToJSON;\n/**\n * Function to serialize JSON object representing a transaction\n *\n * @param object JSON object to serialize\n * @param opts options for serializing, including optional prefix, suffix, signingFieldOnly, and definitions\n * @returns A Uint8Array containing the serialized object\n */\nfunction serializeObject(object, opts = {}) {\n    const { prefix, suffix, signingFieldsOnly = false, definitions } = opts;\n    const bytesList = new binary_serializer_1.BytesList();\n    if (prefix) {\n        bytesList.put(prefix);\n    }\n    const filter = signingFieldsOnly\n        ? (f) => f.isSigningField\n        : undefined;\n    types_1.coreTypes.STObject\n        .from(object, filter, definitions)\n        .toBytesSink(bytesList);\n    if (suffix) {\n        bytesList.put(suffix);\n    }\n    return bytesList.toBytes();\n}\nexports.serializeObject = serializeObject;\n/**\n * Serialize an object for signing\n *\n * @param transaction Transaction to serialize\n * @param prefix Prefix bytes to put before the serialized object\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns A Uint8Array with the serialized object\n */\nfunction signingData(transaction, prefix = hash_prefixes_1.HashPrefix.transactionSig, opts = {}) {\n    return serializeObject(transaction, {\n        prefix,\n        signingFieldsOnly: true,\n        definitions: opts.definitions,\n    });\n}\nexports.signingData = signingData;\n/**\n * Serialize a signingClaim\n *\n * @param claim A claim object to serialize\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns the serialized object with appropriate prefix\n */\nfunction signingClaimData(claim) {\n    const num = BigInt(String(claim.amount));\n    const prefix = hash_prefixes_1.HashPrefix.paymentChannelClaim;\n    const channel = types_1.coreTypes.Hash256.from(claim.channel).toBytes();\n    const amount = types_1.coreTypes.UInt64.from(num).toBytes();\n    const bytesList = new binary_serializer_1.BytesList();\n    bytesList.put(prefix);\n    bytesList.put(channel);\n    bytesList.put(amount);\n    return bytesList.toBytes();\n}\nexports.signingClaimData = signingClaimData;\n/**\n * Serialize a transaction object for multiSigning\n *\n * @param transaction transaction to serialize\n * @param signingAccount Account to sign the transaction with\n * @param opts.definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns serialized transaction with appropriate prefix and suffix\n */\nfunction multiSigningData(transaction, signingAccount, opts = {\n    definitions: enums_1.DEFAULT_DEFINITIONS,\n}) {\n    const prefix = hash_prefixes_1.HashPrefix.transactionMultiSig;\n    const suffix = types_1.coreTypes.AccountID.from(signingAccount).toBytes();\n    return serializeObject(transaction, {\n        prefix,\n        suffix,\n        signingFieldsOnly: true,\n        definitions: opts.definitions,\n    });\n}\nexports.multiSigningData = multiSigningData;\n/**\n * Serialize a signingClaim\n *\n * @param batch A Batch object to serialize.\n * @returns the serialized object with appropriate prefix\n */\nfunction signingBatchData(batch) {\n    if (batch.flags == null) {\n        throw Error(\"No field `flags'\");\n    }\n    if (batch.txIDs == null) {\n        throw Error('No field `txIDs`');\n    }\n    const prefix = hash_prefixes_1.HashPrefix.batch;\n    const flags = types_1.coreTypes.UInt32.from(batch.flags).toBytes();\n    const txIDsLength = types_1.coreTypes.UInt32.from(batch.txIDs.length).toBytes();\n    const bytesList = new binary_serializer_1.BytesList();\n    bytesList.put(prefix);\n    bytesList.put(flags);\n    bytesList.put(txIDsLength);\n    batch.txIDs.forEach((txID) => {\n        bytesList.put(types_1.coreTypes.Hash256.from(txID).toBytes());\n    });\n    return bytesList.toBytes();\n}\nexports.signingBatchData = signingBatchData;\n//# sourceMappingURL=binary.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/binary.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/coretypes.js":
/*!****************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/coretypes.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.types = exports.ShaMap = exports.HashPrefix = exports.quality = exports.TransactionResult = exports.Type = exports.LedgerEntryType = exports.TransactionType = exports.Field = exports.DEFAULT_DEFINITIONS = exports.ledgerHashes = exports.binary = exports.hashes = void 0;\nconst enums_1 = __webpack_require__(/*! ./enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nObject.defineProperty(exports, \"DEFAULT_DEFINITIONS\", ({ enumerable: true, get: function () { return enums_1.DEFAULT_DEFINITIONS; } }));\nObject.defineProperty(exports, \"Field\", ({ enumerable: true, get: function () { return enums_1.Field; } }));\nObject.defineProperty(exports, \"TransactionType\", ({ enumerable: true, get: function () { return enums_1.TransactionType; } }));\nObject.defineProperty(exports, \"LedgerEntryType\", ({ enumerable: true, get: function () { return enums_1.LedgerEntryType; } }));\nObject.defineProperty(exports, \"Type\", ({ enumerable: true, get: function () { return enums_1.Type; } }));\nObject.defineProperty(exports, \"TransactionResult\", ({ enumerable: true, get: function () { return enums_1.TransactionResult; } }));\nconst types = __importStar(__webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\"));\nexports.types = types;\nconst binary = __importStar(__webpack_require__(/*! ./binary */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/binary.js\"));\nexports.binary = binary;\nconst shamap_1 = __webpack_require__(/*! ./shamap */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/shamap.js\");\nObject.defineProperty(exports, \"ShaMap\", ({ enumerable: true, get: function () { return shamap_1.ShaMap; } }));\nconst ledgerHashes = __importStar(__webpack_require__(/*! ./ledger-hashes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/ledger-hashes.js\"));\nexports.ledgerHashes = ledgerHashes;\nconst hashes = __importStar(__webpack_require__(/*! ./hashes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hashes.js\"));\nexports.hashes = hashes;\nconst quality_1 = __webpack_require__(/*! ./quality */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/quality.js\");\nObject.defineProperty(exports, \"quality\", ({ enumerable: true, get: function () { return quality_1.quality; } }));\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nObject.defineProperty(exports, \"HashPrefix\", ({ enumerable: true, get: function () { return hash_prefixes_1.HashPrefix; } }));\n//# sourceMappingURL=coretypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9jb3JldHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsR0FBRyxjQUFjLEdBQUcsa0JBQWtCLEdBQUcsZUFBZSxHQUFHLHlCQUF5QixHQUFHLFlBQVksR0FBRyx1QkFBdUIsR0FBRyx1QkFBdUIsR0FBRyxhQUFhLEdBQUcsMkJBQTJCLEdBQUcsb0JBQW9CLEdBQUcsY0FBYyxHQUFHLGNBQWM7QUFDM1EsZ0JBQWdCLG1CQUFPLENBQUMsaUZBQVM7QUFDakMsdURBQXNELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3JJLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RyxtREFBa0QsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDN0gsbURBQWtELEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQzdILHdDQUF1QyxFQUFFLHFDQUFxQyx3QkFBd0IsRUFBQztBQUN2RyxxREFBb0QsRUFBRSxxQ0FBcUMscUNBQXFDLEVBQUM7QUFDakksMkJBQTJCLG1CQUFPLENBQUMsaUZBQVM7QUFDNUMsYUFBYTtBQUNiLDRCQUE0QixtQkFBTyxDQUFDLDZFQUFVO0FBQzlDLGNBQWM7QUFDZCxpQkFBaUIsbUJBQU8sQ0FBQyw2RUFBVTtBQUNuQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDNUcsa0NBQWtDLG1CQUFPLENBQUMsMkZBQWlCO0FBQzNELG9CQUFvQjtBQUNwQiw0QkFBNEIsbUJBQU8sQ0FBQyw2RUFBVTtBQUM5QyxjQUFjO0FBQ2Qsa0JBQWtCLG1CQUFPLENBQUMsK0VBQVc7QUFDckMsMkNBQTBDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQy9HLHdCQUF3QixtQkFBTyxDQUFDLDJGQUFpQjtBQUNqRCw4Q0FBNkMsRUFBRSxxQ0FBcUMsc0NBQXNDLEVBQUM7QUFDM0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9jb3JldHlwZXMuanM/NGEyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50eXBlcyA9IGV4cG9ydHMuU2hhTWFwID0gZXhwb3J0cy5IYXNoUHJlZml4ID0gZXhwb3J0cy5xdWFsaXR5ID0gZXhwb3J0cy5UcmFuc2FjdGlvblJlc3VsdCA9IGV4cG9ydHMuVHlwZSA9IGV4cG9ydHMuTGVkZ2VyRW50cnlUeXBlID0gZXhwb3J0cy5UcmFuc2FjdGlvblR5cGUgPSBleHBvcnRzLkZpZWxkID0gZXhwb3J0cy5ERUZBVUxUX0RFRklOSVRJT05TID0gZXhwb3J0cy5sZWRnZXJIYXNoZXMgPSBleHBvcnRzLmJpbmFyeSA9IGV4cG9ydHMuaGFzaGVzID0gdm9pZCAwO1xuY29uc3QgZW51bXNfMSA9IHJlcXVpcmUoXCIuL2VudW1zXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiREVGQVVMVF9ERUZJTklUSU9OU1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZW51bXNfMS5ERUZBVUxUX0RFRklOSVRJT05TOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmllbGRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVudW1zXzEuRmllbGQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUcmFuc2FjdGlvblR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVudW1zXzEuVHJhbnNhY3Rpb25UeXBlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTGVkZ2VyRW50cnlUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbnVtc18xLkxlZGdlckVudHJ5VHlwZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlR5cGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVudW1zXzEuVHlwZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRyYW5zYWN0aW9uUmVzdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlbnVtc18xLlRyYW5zYWN0aW9uUmVzdWx0OyB9IH0pO1xuY29uc3QgdHlwZXMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIikpO1xuZXhwb3J0cy50eXBlcyA9IHR5cGVzO1xuY29uc3QgYmluYXJ5ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2JpbmFyeVwiKSk7XG5leHBvcnRzLmJpbmFyeSA9IGJpbmFyeTtcbmNvbnN0IHNoYW1hcF8xID0gcmVxdWlyZShcIi4vc2hhbWFwXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2hhTWFwXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaGFtYXBfMS5TaGFNYXA7IH0gfSk7XG5jb25zdCBsZWRnZXJIYXNoZXMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vbGVkZ2VyLWhhc2hlc1wiKSk7XG5leHBvcnRzLmxlZGdlckhhc2hlcyA9IGxlZGdlckhhc2hlcztcbmNvbnN0IGhhc2hlcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9oYXNoZXNcIikpO1xuZXhwb3J0cy5oYXNoZXMgPSBoYXNoZXM7XG5jb25zdCBxdWFsaXR5XzEgPSByZXF1aXJlKFwiLi9xdWFsaXR5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicXVhbGl0eVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcXVhbGl0eV8xLnF1YWxpdHk7IH0gfSk7XG5jb25zdCBoYXNoX3ByZWZpeGVzXzEgPSByZXF1aXJlKFwiLi9oYXNoLXByZWZpeGVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSGFzaFByZWZpeFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGFzaF9wcmVmaXhlc18xLkhhc2hQcmVmaXg7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb3JldHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/coretypes.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/bytes.js":
/*!******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/bytes.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BytesLookup = exports.Bytes = void 0;\n/*\n * @brief: Bytes, name, and ordinal representing one type, ledger_type, transaction type, or result\n */\nclass Bytes {\n    constructor(name, ordinal, ordinalWidth) {\n        this.name = name;\n        this.ordinal = ordinal;\n        this.ordinalWidth = ordinalWidth;\n        this.bytes = new Uint8Array(ordinalWidth);\n        for (let i = 0; i < ordinalWidth; i++) {\n            this.bytes[ordinalWidth - i - 1] = (ordinal >>> (i * 8)) & 0xff;\n        }\n    }\n    toJSON() {\n        return this.name;\n    }\n    toBytesSink(sink) {\n        sink.put(this.bytes);\n    }\n    toBytes() {\n        return this.bytes;\n    }\n}\nexports.Bytes = Bytes;\n/*\n * @brief: Collection of Bytes objects, mapping bidirectionally\n */\nclass BytesLookup {\n    constructor(types, ordinalWidth) {\n        this.ordinalWidth = ordinalWidth;\n        Object.entries(types).forEach(([k, v]) => {\n            this.add(k, v);\n        });\n    }\n    /**\n     * Add a new name value pair to the BytesLookup.\n     *\n     * @param name - A human readable name for the field.\n     * @param value - The numeric value for the field.\n     * @throws if the name or value already exist in the lookup because it's unclear how to decode.\n     */\n    add(name, value) {\n        if (this[name]) {\n            throw new SyntaxError(`Attempted to add a value with a duplicate name \"${name}\". This is not allowed because it is unclear how to decode.`);\n        }\n        if (this[value.toString()]) {\n            throw new SyntaxError(`Attempted to add a duplicate value under a different name (Given name: \"${name}\" and previous name: \"${this[value.toString()]}. This is not allowed because it is unclear how to decode.\\nGiven value: ${value.toString()}`);\n        }\n        this[name] = new Bytes(name, value, this.ordinalWidth);\n        this[value.toString()] = this[name];\n    }\n    from(value) {\n        return value instanceof Bytes ? value : this[value];\n    }\n    fromParser(parser) {\n        return this.from(parser.readUIntN(this.ordinalWidth).toString());\n    }\n}\nexports.BytesLookup = BytesLookup;\n//# sourceMappingURL=bytes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy9ieXRlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxhQUFhO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrQkFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFGQUFxRixLQUFLO0FBQzFGO0FBQ0E7QUFDQSw2R0FBNkcsS0FBSyx3QkFBd0IsdUJBQXVCLDJFQUEyRSxpQkFBaUI7QUFDN1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2J5dGVzLmpzP2E2MzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkJ5dGVzTG9va3VwID0gZXhwb3J0cy5CeXRlcyA9IHZvaWQgMDtcbi8qXG4gKiBAYnJpZWY6IEJ5dGVzLCBuYW1lLCBhbmQgb3JkaW5hbCByZXByZXNlbnRpbmcgb25lIHR5cGUsIGxlZGdlcl90eXBlLCB0cmFuc2FjdGlvbiB0eXBlLCBvciByZXN1bHRcbiAqL1xuY2xhc3MgQnl0ZXMge1xuICAgIGNvbnN0cnVjdG9yKG5hbWUsIG9yZGluYWwsIG9yZGluYWxXaWR0aCkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLm9yZGluYWwgPSBvcmRpbmFsO1xuICAgICAgICB0aGlzLm9yZGluYWxXaWR0aCA9IG9yZGluYWxXaWR0aDtcbiAgICAgICAgdGhpcy5ieXRlcyA9IG5ldyBVaW50OEFycmF5KG9yZGluYWxXaWR0aCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3JkaW5hbFdpZHRoOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMuYnl0ZXNbb3JkaW5hbFdpZHRoIC0gaSAtIDFdID0gKG9yZGluYWwgPj4+IChpICogOCkpICYgMHhmZjtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5hbWU7XG4gICAgfVxuICAgIHRvQnl0ZXNTaW5rKHNpbmspIHtcbiAgICAgICAgc2luay5wdXQodGhpcy5ieXRlcyk7XG4gICAgfVxuICAgIHRvQnl0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ5dGVzO1xuICAgIH1cbn1cbmV4cG9ydHMuQnl0ZXMgPSBCeXRlcztcbi8qXG4gKiBAYnJpZWY6IENvbGxlY3Rpb24gb2YgQnl0ZXMgb2JqZWN0cywgbWFwcGluZyBiaWRpcmVjdGlvbmFsbHlcbiAqL1xuY2xhc3MgQnl0ZXNMb29rdXAge1xuICAgIGNvbnN0cnVjdG9yKHR5cGVzLCBvcmRpbmFsV2lkdGgpIHtcbiAgICAgICAgdGhpcy5vcmRpbmFsV2lkdGggPSBvcmRpbmFsV2lkdGg7XG4gICAgICAgIE9iamVjdC5lbnRyaWVzKHR5cGVzKS5mb3JFYWNoKChbaywgdl0pID0+IHtcbiAgICAgICAgICAgIHRoaXMuYWRkKGssIHYpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkIGEgbmV3IG5hbWUgdmFsdWUgcGFpciB0byB0aGUgQnl0ZXNMb29rdXAuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmFtZSAtIEEgaHVtYW4gcmVhZGFibGUgbmFtZSBmb3IgdGhlIGZpZWxkLlxuICAgICAqIEBwYXJhbSB2YWx1ZSAtIFRoZSBudW1lcmljIHZhbHVlIGZvciB0aGUgZmllbGQuXG4gICAgICogQHRocm93cyBpZiB0aGUgbmFtZSBvciB2YWx1ZSBhbHJlYWR5IGV4aXN0IGluIHRoZSBsb29rdXAgYmVjYXVzZSBpdCdzIHVuY2xlYXIgaG93IHRvIGRlY29kZS5cbiAgICAgKi9cbiAgICBhZGQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgaWYgKHRoaXNbbmFtZV0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihgQXR0ZW1wdGVkIHRvIGFkZCBhIHZhbHVlIHdpdGggYSBkdXBsaWNhdGUgbmFtZSBcIiR7bmFtZX1cIi4gVGhpcyBpcyBub3QgYWxsb3dlZCBiZWNhdXNlIGl0IGlzIHVuY2xlYXIgaG93IHRvIGRlY29kZS5gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpc1t2YWx1ZS50b1N0cmluZygpXSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKGBBdHRlbXB0ZWQgdG8gYWRkIGEgZHVwbGljYXRlIHZhbHVlIHVuZGVyIGEgZGlmZmVyZW50IG5hbWUgKEdpdmVuIG5hbWU6IFwiJHtuYW1lfVwiIGFuZCBwcmV2aW91cyBuYW1lOiBcIiR7dGhpc1t2YWx1ZS50b1N0cmluZygpXX0uIFRoaXMgaXMgbm90IGFsbG93ZWQgYmVjYXVzZSBpdCBpcyB1bmNsZWFyIGhvdyB0byBkZWNvZGUuXFxuR2l2ZW4gdmFsdWU6ICR7dmFsdWUudG9TdHJpbmcoKX1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzW25hbWVdID0gbmV3IEJ5dGVzKG5hbWUsIHZhbHVlLCB0aGlzLm9yZGluYWxXaWR0aCk7XG4gICAgICAgIHRoaXNbdmFsdWUudG9TdHJpbmcoKV0gPSB0aGlzW25hbWVdO1xuICAgIH1cbiAgICBmcm9tKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIEJ5dGVzID8gdmFsdWUgOiB0aGlzW3ZhbHVlXTtcbiAgICB9XG4gICAgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZnJvbShwYXJzZXIucmVhZFVJbnROKHRoaXMub3JkaW5hbFdpZHRoKS50b1N0cmluZygpKTtcbiAgICB9XG59XG5leHBvcnRzLkJ5dGVzTG9va3VwID0gQnl0ZXNMb29rdXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ieXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/enums/bytes.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/constants.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DELEGATABLE_PERMISSIONS_WIDTH = exports.TRANSACTION_RESULT_WIDTH = exports.TRANSACTION_TYPE_WIDTH = exports.LEDGER_ENTRY_WIDTH = exports.TYPE_WIDTH = void 0;\nexports.TYPE_WIDTH = 2; // UInt16\nexports.LEDGER_ENTRY_WIDTH = 2; // UInt16\nexports.TRANSACTION_TYPE_WIDTH = 2; // UInt16\nexports.TRANSACTION_RESULT_WIDTH = 1; // UInt8\nexports.DELEGATABLE_PERMISSIONS_WIDTH = 4; // UInt32\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLEdBQUcsZ0NBQWdDLEdBQUcsOEJBQThCLEdBQUcsMEJBQTBCLEdBQUcsa0JBQWtCO0FBQzNKLGtCQUFrQixNQUFNO0FBQ3hCLDBCQUEwQixNQUFNO0FBQ2hDLDhCQUE4QixNQUFNO0FBQ3BDLGdDQUFnQyxNQUFNO0FBQ3RDLHFDQUFxQyxNQUFNO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvZW51bXMvY29uc3RhbnRzLmpzPzE3NTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRFTEVHQVRBQkxFX1BFUk1JU1NJT05TX1dJRFRIID0gZXhwb3J0cy5UUkFOU0FDVElPTl9SRVNVTFRfV0lEVEggPSBleHBvcnRzLlRSQU5TQUNUSU9OX1RZUEVfV0lEVEggPSBleHBvcnRzLkxFREdFUl9FTlRSWV9XSURUSCA9IGV4cG9ydHMuVFlQRV9XSURUSCA9IHZvaWQgMDtcbmV4cG9ydHMuVFlQRV9XSURUSCA9IDI7IC8vIFVJbnQxNlxuZXhwb3J0cy5MRURHRVJfRU5UUllfV0lEVEggPSAyOyAvLyBVSW50MTZcbmV4cG9ydHMuVFJBTlNBQ1RJT05fVFlQRV9XSURUSCA9IDI7IC8vIFVJbnQxNlxuZXhwb3J0cy5UUkFOU0FDVElPTl9SRVNVTFRfV0lEVEggPSAxOyAvLyBVSW50OFxuZXhwb3J0cy5ERUxFR0FUQUJMRV9QRVJNSVNTSU9OU19XSURUSCA9IDQ7IC8vIFVJbnQzMlxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/enums/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/field.js":
/*!******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/field.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FieldLookup = void 0;\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/bytes.js\");\nconst serialized_type_1 = __webpack_require__(/*! ../types/serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/constants.js\");\n/*\n * @brief: Serialize a field based on type_code and Field.nth\n */\nfunction fieldHeader(type, nth) {\n    const header = [];\n    if (type < 16) {\n        if (nth < 16) {\n            header.push((type << 4) | nth);\n        }\n        else {\n            header.push(type << 4, nth);\n        }\n    }\n    else if (nth < 16) {\n        header.push(nth, type);\n    }\n    else {\n        header.push(0, type, nth);\n    }\n    return Uint8Array.from(header);\n}\nfunction buildField([name, info], typeOrdinal) {\n    const field = fieldHeader(typeOrdinal, info.nth);\n    return {\n        name: name,\n        nth: info.nth,\n        isVariableLengthEncoded: info.isVLEncoded,\n        isSerialized: info.isSerialized,\n        isSigningField: info.isSigningField,\n        ordinal: (typeOrdinal << 16) | info.nth,\n        type: new bytes_1.Bytes(info.type, typeOrdinal, constants_1.TYPE_WIDTH),\n        header: field,\n        associatedType: serialized_type_1.SerializedType, // For later assignment in ./types/index.js or Definitions.updateAll(...)\n    };\n}\n/*\n * @brief: The collection of all fields as defined in definitions.json\n */\nclass FieldLookup {\n    constructor(fields, types) {\n        fields.forEach(([name, field_info]) => {\n            const typeOrdinal = types[field_info.type];\n            this[name] = buildField([name, field_info], typeOrdinal);\n            this[this[name].ordinal.toString()] = this[name];\n        });\n    }\n    fromString(value) {\n        return this[value];\n    }\n}\nexports.FieldLookup = FieldLookup;\n//# sourceMappingURL=field.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy9maWVsZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsaUZBQVM7QUFDakMsMEJBQTBCLG1CQUFPLENBQUMsNEdBQTBCO0FBQzVELG9CQUFvQixtQkFBTyxDQUFDLHlGQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2ZpZWxkLmpzP2YxMTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZpZWxkTG9va3VwID0gdm9pZCAwO1xuY29uc3QgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi4vdHlwZXMvc2VyaWFsaXplZC10eXBlXCIpO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vKlxuICogQGJyaWVmOiBTZXJpYWxpemUgYSBmaWVsZCBiYXNlZCBvbiB0eXBlX2NvZGUgYW5kIEZpZWxkLm50aFxuICovXG5mdW5jdGlvbiBmaWVsZEhlYWRlcih0eXBlLCBudGgpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBbXTtcbiAgICBpZiAodHlwZSA8IDE2KSB7XG4gICAgICAgIGlmIChudGggPCAxNikge1xuICAgICAgICAgICAgaGVhZGVyLnB1c2goKHR5cGUgPDwgNCkgfCBudGgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaGVhZGVyLnB1c2godHlwZSA8PCA0LCBudGgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKG50aCA8IDE2KSB7XG4gICAgICAgIGhlYWRlci5wdXNoKG50aCwgdHlwZSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBoZWFkZXIucHVzaCgwLCB0eXBlLCBudGgpO1xuICAgIH1cbiAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKGhlYWRlcik7XG59XG5mdW5jdGlvbiBidWlsZEZpZWxkKFtuYW1lLCBpbmZvXSwgdHlwZU9yZGluYWwpIHtcbiAgICBjb25zdCBmaWVsZCA9IGZpZWxkSGVhZGVyKHR5cGVPcmRpbmFsLCBpbmZvLm50aCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgbnRoOiBpbmZvLm50aCxcbiAgICAgICAgaXNWYXJpYWJsZUxlbmd0aEVuY29kZWQ6IGluZm8uaXNWTEVuY29kZWQsXG4gICAgICAgIGlzU2VyaWFsaXplZDogaW5mby5pc1NlcmlhbGl6ZWQsXG4gICAgICAgIGlzU2lnbmluZ0ZpZWxkOiBpbmZvLmlzU2lnbmluZ0ZpZWxkLFxuICAgICAgICBvcmRpbmFsOiAodHlwZU9yZGluYWwgPDwgMTYpIHwgaW5mby5udGgsXG4gICAgICAgIHR5cGU6IG5ldyBieXRlc18xLkJ5dGVzKGluZm8udHlwZSwgdHlwZU9yZGluYWwsIGNvbnN0YW50c18xLlRZUEVfV0lEVEgpLFxuICAgICAgICBoZWFkZXI6IGZpZWxkLFxuICAgICAgICBhc3NvY2lhdGVkVHlwZTogc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUsIC8vIEZvciBsYXRlciBhc3NpZ25tZW50IGluIC4vdHlwZXMvaW5kZXguanMgb3IgRGVmaW5pdGlvbnMudXBkYXRlQWxsKC4uLilcbiAgICB9O1xufVxuLypcbiAqIEBicmllZjogVGhlIGNvbGxlY3Rpb24gb2YgYWxsIGZpZWxkcyBhcyBkZWZpbmVkIGluIGRlZmluaXRpb25zLmpzb25cbiAqL1xuY2xhc3MgRmllbGRMb29rdXAge1xuICAgIGNvbnN0cnVjdG9yKGZpZWxkcywgdHlwZXMpIHtcbiAgICAgICAgZmllbGRzLmZvckVhY2goKFtuYW1lLCBmaWVsZF9pbmZvXSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdHlwZU9yZGluYWwgPSB0eXBlc1tmaWVsZF9pbmZvLnR5cGVdO1xuICAgICAgICAgICAgdGhpc1tuYW1lXSA9IGJ1aWxkRmllbGQoW25hbWUsIGZpZWxkX2luZm9dLCB0eXBlT3JkaW5hbCk7XG4gICAgICAgICAgICB0aGlzW3RoaXNbbmFtZV0ub3JkaW5hbC50b1N0cmluZygpXSA9IHRoaXNbbmFtZV07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmcm9tU3RyaW5nKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzW3ZhbHVlXTtcbiAgICB9XG59XG5leHBvcnRzLkZpZWxkTG9va3VwID0gRmllbGRMb29rdXA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWVsZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/enums/field.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TRANSACTION_TYPES = exports.TransactionType = exports.TransactionResult = exports.LedgerEntryType = exports.Type = exports.Field = exports.DEFAULT_DEFINITIONS = exports.XrplDefinitionsBase = exports.Bytes = void 0;\nconst definitions_json_1 = __importDefault(__webpack_require__(/*! ./definitions.json */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/definitions.json\"));\nconst xrpl_definitions_base_1 = __webpack_require__(/*! ./xrpl-definitions-base */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js\");\nObject.defineProperty(exports, \"XrplDefinitionsBase\", ({ enumerable: true, get: function () { return xrpl_definitions_base_1.XrplDefinitionsBase; } }));\nObject.defineProperty(exports, \"Bytes\", ({ enumerable: true, get: function () { return xrpl_definitions_base_1.Bytes; } }));\n/**\n * By default, coreTypes from the `types` folder is where known type definitions are initialized to avoid import cycles.\n */\nconst DEFAULT_DEFINITIONS = new xrpl_definitions_base_1.XrplDefinitionsBase(definitions_json_1.default, {});\nexports.DEFAULT_DEFINITIONS = DEFAULT_DEFINITIONS;\nconst Type = DEFAULT_DEFINITIONS.type;\nexports.Type = Type;\nconst LedgerEntryType = DEFAULT_DEFINITIONS.ledgerEntryType;\nexports.LedgerEntryType = LedgerEntryType;\nconst TransactionType = DEFAULT_DEFINITIONS.transactionType;\nexports.TransactionType = TransactionType;\nconst TransactionResult = DEFAULT_DEFINITIONS.transactionResult;\nexports.TransactionResult = TransactionResult;\nconst Field = DEFAULT_DEFINITIONS.field;\nexports.Field = Field;\n/*\n * @brief: All valid transaction types\n */\nconst TRANSACTION_TYPES = DEFAULT_DEFINITIONS.transactionNames;\nexports.TRANSACTION_TYPES = TRANSACTION_TYPES;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLFlBQVksR0FBRyxhQUFhLEdBQUcsMkJBQTJCLEdBQUcsMkJBQTJCLEdBQUcsYUFBYTtBQUNwTiwyQ0FBMkMsbUJBQU8sQ0FBQyxvR0FBb0I7QUFDdkUsZ0NBQWdDLG1CQUFPLENBQUMsaUhBQXlCO0FBQ2pFLHVEQUFzRCxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUNySix5Q0FBd0MsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDekg7QUFDQTtBQUNBO0FBQ0EsMEdBQTBHO0FBQzFHLDJCQUEyQjtBQUMzQjtBQUNBLFlBQVk7QUFDWjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL2luZGV4LmpzP2U0NzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRSQU5TQUNUSU9OX1RZUEVTID0gZXhwb3J0cy5UcmFuc2FjdGlvblR5cGUgPSBleHBvcnRzLlRyYW5zYWN0aW9uUmVzdWx0ID0gZXhwb3J0cy5MZWRnZXJFbnRyeVR5cGUgPSBleHBvcnRzLlR5cGUgPSBleHBvcnRzLkZpZWxkID0gZXhwb3J0cy5ERUZBVUxUX0RFRklOSVRJT05TID0gZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnNCYXNlID0gZXhwb3J0cy5CeXRlcyA9IHZvaWQgMDtcbmNvbnN0IGRlZmluaXRpb25zX2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9kZWZpbml0aW9ucy5qc29uXCIpKTtcbmNvbnN0IHhycGxfZGVmaW5pdGlvbnNfYmFzZV8xID0gcmVxdWlyZShcIi4veHJwbC1kZWZpbml0aW9ucy1iYXNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiWHJwbERlZmluaXRpb25zQmFzZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4geHJwbF9kZWZpbml0aW9uc19iYXNlXzEuWHJwbERlZmluaXRpb25zQmFzZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJ5dGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB4cnBsX2RlZmluaXRpb25zX2Jhc2VfMS5CeXRlczsgfSB9KTtcbi8qKlxuICogQnkgZGVmYXVsdCwgY29yZVR5cGVzIGZyb20gdGhlIGB0eXBlc2AgZm9sZGVyIGlzIHdoZXJlIGtub3duIHR5cGUgZGVmaW5pdGlvbnMgYXJlIGluaXRpYWxpemVkIHRvIGF2b2lkIGltcG9ydCBjeWNsZXMuXG4gKi9cbmNvbnN0IERFRkFVTFRfREVGSU5JVElPTlMgPSBuZXcgeHJwbF9kZWZpbml0aW9uc19iYXNlXzEuWHJwbERlZmluaXRpb25zQmFzZShkZWZpbml0aW9uc19qc29uXzEuZGVmYXVsdCwge30pO1xuZXhwb3J0cy5ERUZBVUxUX0RFRklOSVRJT05TID0gREVGQVVMVF9ERUZJTklUSU9OUztcbmNvbnN0IFR5cGUgPSBERUZBVUxUX0RFRklOSVRJT05TLnR5cGU7XG5leHBvcnRzLlR5cGUgPSBUeXBlO1xuY29uc3QgTGVkZ2VyRW50cnlUeXBlID0gREVGQVVMVF9ERUZJTklUSU9OUy5sZWRnZXJFbnRyeVR5cGU7XG5leHBvcnRzLkxlZGdlckVudHJ5VHlwZSA9IExlZGdlckVudHJ5VHlwZTtcbmNvbnN0IFRyYW5zYWN0aW9uVHlwZSA9IERFRkFVTFRfREVGSU5JVElPTlMudHJhbnNhY3Rpb25UeXBlO1xuZXhwb3J0cy5UcmFuc2FjdGlvblR5cGUgPSBUcmFuc2FjdGlvblR5cGU7XG5jb25zdCBUcmFuc2FjdGlvblJlc3VsdCA9IERFRkFVTFRfREVGSU5JVElPTlMudHJhbnNhY3Rpb25SZXN1bHQ7XG5leHBvcnRzLlRyYW5zYWN0aW9uUmVzdWx0ID0gVHJhbnNhY3Rpb25SZXN1bHQ7XG5jb25zdCBGaWVsZCA9IERFRkFVTFRfREVGSU5JVElPTlMuZmllbGQ7XG5leHBvcnRzLkZpZWxkID0gRmllbGQ7XG4vKlxuICogQGJyaWVmOiBBbGwgdmFsaWQgdHJhbnNhY3Rpb24gdHlwZXNcbiAqL1xuY29uc3QgVFJBTlNBQ1RJT05fVFlQRVMgPSBERUZBVUxUX0RFRklOSVRJT05TLnRyYW5zYWN0aW9uTmFtZXM7XG5leHBvcnRzLlRSQU5TQUNUSU9OX1RZUEVTID0gVFJBTlNBQ1RJT05fVFlQRVM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BytesLookup = exports.Bytes = exports.FieldLookup = exports.XrplDefinitionsBase = void 0;\nconst bytes_1 = __webpack_require__(/*! ./bytes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/bytes.js\");\nObject.defineProperty(exports, \"Bytes\", ({ enumerable: true, get: function () { return bytes_1.Bytes; } }));\nObject.defineProperty(exports, \"BytesLookup\", ({ enumerable: true, get: function () { return bytes_1.BytesLookup; } }));\nconst field_1 = __webpack_require__(/*! ./field */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/field.js\");\nObject.defineProperty(exports, \"FieldLookup\", ({ enumerable: true, get: function () { return field_1.FieldLookup; } }));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/constants.js\");\n/**\n * Stores the various types and fields for rippled to be used to encode/decode information later on.\n * XrplDefinitions should be instantiated instead of this class.\n */\nclass XrplDefinitionsBase {\n    /**\n     * Present rippled types in a typed and updatable format.\n     * For an example of the input format see `definitions.json`.\n     * To generate a new definitions file from rippled source code, use the tool at\n     * `packages/ripple-binary-codec/tools/generateDefinitions.js`.\n     *\n     * See the definitions.test.js file for examples of how to create your own updated definitions.json.\n     *\n     * @param enums - A json encoding of the core types, transaction types, transaction results, transaction names, and fields.\n     * @param types - A list of type objects with the same name as the fields defined.\n     *              You can use the coreTypes object if you are not adding new types.\n     */\n    constructor(enums, types) {\n        this.type = new bytes_1.BytesLookup(enums.TYPES, constants_1.TYPE_WIDTH);\n        this.ledgerEntryType = new bytes_1.BytesLookup(enums.LEDGER_ENTRY_TYPES, constants_1.LEDGER_ENTRY_WIDTH);\n        this.transactionType = new bytes_1.BytesLookup(enums.TRANSACTION_TYPES, constants_1.TRANSACTION_TYPE_WIDTH);\n        this.transactionResult = new bytes_1.BytesLookup(enums.TRANSACTION_RESULTS, constants_1.TRANSACTION_RESULT_WIDTH);\n        this.field = new field_1.FieldLookup(enums.FIELDS, enums.TYPES);\n        this.transactionNames = Object.entries(enums.TRANSACTION_TYPES)\n            .filter(([_key, value]) => value >= 0)\n            .map(([key, _value]) => key);\n        this.dataTypes = {}; // Filled in via associateTypes\n        this.associateTypes(types);\n        this.granularPermissions = {\n            TrustlineAuthorize: 65537,\n            TrustlineFreeze: 65538,\n            TrustlineUnfreeze: 65539,\n            AccountDomainSet: 65540,\n            AccountEmailHashSet: 65541,\n            AccountMessageKeySet: 65542,\n            AccountTransferRateSet: 65543,\n            AccountTickSizeSet: 65544,\n            PaymentMint: 65545,\n            PaymentBurn: 65546,\n            MPTokenIssuanceLock: 65547,\n            MPTokenIssuanceUnlock: 65548,\n        };\n        const incrementedTransactionTypes = Object.fromEntries(Object.entries(enums.TRANSACTION_TYPES).map(([key, value]) => [\n            key,\n            value + 1,\n        ]));\n        const combinedPermissions = Object.assign(Object.assign({}, this.granularPermissions), incrementedTransactionTypes);\n        this.delegatablePermissions = new bytes_1.BytesLookup(combinedPermissions, constants_1.DELEGATABLE_PERMISSIONS_WIDTH);\n    }\n    /**\n     * Associates each Field to a corresponding class that TypeScript can recognize.\n     *\n     * @param types a list of type objects with the same name as the fields defined.\n     *              Defaults to xrpl.js's core type definitions.\n     */\n    associateTypes(types) {\n        // Overwrite any existing type definitions with the given types\n        this.dataTypes = Object.assign({}, this.dataTypes, types);\n        Object.values(this.field).forEach((field) => {\n            field.associatedType = this.dataTypes[field.type.name];\n        });\n        this.field['TransactionType'].associatedType = this.transactionType;\n        this.field['TransactionResult'].associatedType = this.transactionResult;\n        this.field['LedgerEntryType'].associatedType = this.ledgerEntryType;\n        if (this.field['PermissionValue']) {\n            this.field['PermissionValue'].associatedType = this.delegatablePermissions;\n        }\n    }\n    getAssociatedTypes() {\n        return this.dataTypes;\n    }\n}\nexports.XrplDefinitionsBase = XrplDefinitionsBase;\n//# sourceMappingURL=xrpl-definitions-base.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy94cnBsLWRlZmluaXRpb25zLWJhc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsYUFBYSxHQUFHLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN2RixnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBUztBQUNqQyx5Q0FBd0MsRUFBRSxxQ0FBcUMseUJBQXlCLEVBQUM7QUFDekcsK0NBQThDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ3JILGdCQUFnQixtQkFBTyxDQUFDLGlGQUFTO0FBQ2pDLCtDQUE4QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNySCxvQkFBb0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2VudW1zL3hycGwtZGVmaW5pdGlvbnMtYmFzZS5qcz82ZjE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CeXRlc0xvb2t1cCA9IGV4cG9ydHMuQnl0ZXMgPSBleHBvcnRzLkZpZWxkTG9va3VwID0gZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnNCYXNlID0gdm9pZCAwO1xuY29uc3QgYnl0ZXNfMSA9IHJlcXVpcmUoXCIuL2J5dGVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQnl0ZXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJ5dGVzXzEuQnl0ZXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCeXRlc0xvb2t1cFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnl0ZXNfMS5CeXRlc0xvb2t1cDsgfSB9KTtcbmNvbnN0IGZpZWxkXzEgPSByZXF1aXJlKFwiLi9maWVsZFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZpZWxkTG9va3VwXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmaWVsZF8xLkZpZWxkTG9va3VwOyB9IH0pO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG4vKipcbiAqIFN0b3JlcyB0aGUgdmFyaW91cyB0eXBlcyBhbmQgZmllbGRzIGZvciByaXBwbGVkIHRvIGJlIHVzZWQgdG8gZW5jb2RlL2RlY29kZSBpbmZvcm1hdGlvbiBsYXRlciBvbi5cbiAqIFhycGxEZWZpbml0aW9ucyBzaG91bGQgYmUgaW5zdGFudGlhdGVkIGluc3RlYWQgb2YgdGhpcyBjbGFzcy5cbiAqL1xuY2xhc3MgWHJwbERlZmluaXRpb25zQmFzZSB7XG4gICAgLyoqXG4gICAgICogUHJlc2VudCByaXBwbGVkIHR5cGVzIGluIGEgdHlwZWQgYW5kIHVwZGF0YWJsZSBmb3JtYXQuXG4gICAgICogRm9yIGFuIGV4YW1wbGUgb2YgdGhlIGlucHV0IGZvcm1hdCBzZWUgYGRlZmluaXRpb25zLmpzb25gLlxuICAgICAqIFRvIGdlbmVyYXRlIGEgbmV3IGRlZmluaXRpb25zIGZpbGUgZnJvbSByaXBwbGVkIHNvdXJjZSBjb2RlLCB1c2UgdGhlIHRvb2wgYXRcbiAgICAgKiBgcGFja2FnZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy90b29scy9nZW5lcmF0ZURlZmluaXRpb25zLmpzYC5cbiAgICAgKlxuICAgICAqIFNlZSB0aGUgZGVmaW5pdGlvbnMudGVzdC5qcyBmaWxlIGZvciBleGFtcGxlcyBvZiBob3cgdG8gY3JlYXRlIHlvdXIgb3duIHVwZGF0ZWQgZGVmaW5pdGlvbnMuanNvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBlbnVtcyAtIEEganNvbiBlbmNvZGluZyBvZiB0aGUgY29yZSB0eXBlcywgdHJhbnNhY3Rpb24gdHlwZXMsIHRyYW5zYWN0aW9uIHJlc3VsdHMsIHRyYW5zYWN0aW9uIG5hbWVzLCBhbmQgZmllbGRzLlxuICAgICAqIEBwYXJhbSB0eXBlcyAtIEEgbGlzdCBvZiB0eXBlIG9iamVjdHMgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIHRoZSBmaWVsZHMgZGVmaW5lZC5cbiAgICAgKiAgICAgICAgICAgICAgWW91IGNhbiB1c2UgdGhlIGNvcmVUeXBlcyBvYmplY3QgaWYgeW91IGFyZSBub3QgYWRkaW5nIG5ldyB0eXBlcy5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihlbnVtcywgdHlwZXMpIHtcbiAgICAgICAgdGhpcy50eXBlID0gbmV3IGJ5dGVzXzEuQnl0ZXNMb29rdXAoZW51bXMuVFlQRVMsIGNvbnN0YW50c18xLlRZUEVfV0lEVEgpO1xuICAgICAgICB0aGlzLmxlZGdlckVudHJ5VHlwZSA9IG5ldyBieXRlc18xLkJ5dGVzTG9va3VwKGVudW1zLkxFREdFUl9FTlRSWV9UWVBFUywgY29uc3RhbnRzXzEuTEVER0VSX0VOVFJZX1dJRFRIKTtcbiAgICAgICAgdGhpcy50cmFuc2FjdGlvblR5cGUgPSBuZXcgYnl0ZXNfMS5CeXRlc0xvb2t1cChlbnVtcy5UUkFOU0FDVElPTl9UWVBFUywgY29uc3RhbnRzXzEuVFJBTlNBQ1RJT05fVFlQRV9XSURUSCk7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25SZXN1bHQgPSBuZXcgYnl0ZXNfMS5CeXRlc0xvb2t1cChlbnVtcy5UUkFOU0FDVElPTl9SRVNVTFRTLCBjb25zdGFudHNfMS5UUkFOU0FDVElPTl9SRVNVTFRfV0lEVEgpO1xuICAgICAgICB0aGlzLmZpZWxkID0gbmV3IGZpZWxkXzEuRmllbGRMb29rdXAoZW51bXMuRklFTERTLCBlbnVtcy5UWVBFUyk7XG4gICAgICAgIHRoaXMudHJhbnNhY3Rpb25OYW1lcyA9IE9iamVjdC5lbnRyaWVzKGVudW1zLlRSQU5TQUNUSU9OX1RZUEVTKVxuICAgICAgICAgICAgLmZpbHRlcigoW19rZXksIHZhbHVlXSkgPT4gdmFsdWUgPj0gMClcbiAgICAgICAgICAgIC5tYXAoKFtrZXksIF92YWx1ZV0pID0+IGtleSk7XG4gICAgICAgIHRoaXMuZGF0YVR5cGVzID0ge307IC8vIEZpbGxlZCBpbiB2aWEgYXNzb2NpYXRlVHlwZXNcbiAgICAgICAgdGhpcy5hc3NvY2lhdGVUeXBlcyh0eXBlcyk7XG4gICAgICAgIHRoaXMuZ3JhbnVsYXJQZXJtaXNzaW9ucyA9IHtcbiAgICAgICAgICAgIFRydXN0bGluZUF1dGhvcml6ZTogNjU1MzcsXG4gICAgICAgICAgICBUcnVzdGxpbmVGcmVlemU6IDY1NTM4LFxuICAgICAgICAgICAgVHJ1c3RsaW5lVW5mcmVlemU6IDY1NTM5LFxuICAgICAgICAgICAgQWNjb3VudERvbWFpblNldDogNjU1NDAsXG4gICAgICAgICAgICBBY2NvdW50RW1haWxIYXNoU2V0OiA2NTU0MSxcbiAgICAgICAgICAgIEFjY291bnRNZXNzYWdlS2V5U2V0OiA2NTU0MixcbiAgICAgICAgICAgIEFjY291bnRUcmFuc2ZlclJhdGVTZXQ6IDY1NTQzLFxuICAgICAgICAgICAgQWNjb3VudFRpY2tTaXplU2V0OiA2NTU0NCxcbiAgICAgICAgICAgIFBheW1lbnRNaW50OiA2NTU0NSxcbiAgICAgICAgICAgIFBheW1lbnRCdXJuOiA2NTU0NixcbiAgICAgICAgICAgIE1QVG9rZW5Jc3N1YW5jZUxvY2s6IDY1NTQ3LFxuICAgICAgICAgICAgTVBUb2tlbklzc3VhbmNlVW5sb2NrOiA2NTU0OCxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgaW5jcmVtZW50ZWRUcmFuc2FjdGlvblR5cGVzID0gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGVudW1zLlRSQU5TQUNUSU9OX1RZUEVTKS5tYXAoKFtrZXksIHZhbHVlXSkgPT4gW1xuICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgdmFsdWUgKyAxLFxuICAgICAgICBdKSk7XG4gICAgICAgIGNvbnN0IGNvbWJpbmVkUGVybWlzc2lvbnMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuZ3JhbnVsYXJQZXJtaXNzaW9ucyksIGluY3JlbWVudGVkVHJhbnNhY3Rpb25UeXBlcyk7XG4gICAgICAgIHRoaXMuZGVsZWdhdGFibGVQZXJtaXNzaW9ucyA9IG5ldyBieXRlc18xLkJ5dGVzTG9va3VwKGNvbWJpbmVkUGVybWlzc2lvbnMsIGNvbnN0YW50c18xLkRFTEVHQVRBQkxFX1BFUk1JU1NJT05TX1dJRFRIKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXNzb2NpYXRlcyBlYWNoIEZpZWxkIHRvIGEgY29ycmVzcG9uZGluZyBjbGFzcyB0aGF0IFR5cGVTY3JpcHQgY2FuIHJlY29nbml6ZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0eXBlcyBhIGxpc3Qgb2YgdHlwZSBvYmplY3RzIHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZmllbGRzIGRlZmluZWQuXG4gICAgICogICAgICAgICAgICAgIERlZmF1bHRzIHRvIHhycGwuanMncyBjb3JlIHR5cGUgZGVmaW5pdGlvbnMuXG4gICAgICovXG4gICAgYXNzb2NpYXRlVHlwZXModHlwZXMpIHtcbiAgICAgICAgLy8gT3ZlcndyaXRlIGFueSBleGlzdGluZyB0eXBlIGRlZmluaXRpb25zIHdpdGggdGhlIGdpdmVuIHR5cGVzXG4gICAgICAgIHRoaXMuZGF0YVR5cGVzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5kYXRhVHlwZXMsIHR5cGVzKTtcbiAgICAgICAgT2JqZWN0LnZhbHVlcyh0aGlzLmZpZWxkKS5mb3JFYWNoKChmaWVsZCkgPT4ge1xuICAgICAgICAgICAgZmllbGQuYXNzb2NpYXRlZFR5cGUgPSB0aGlzLmRhdGFUeXBlc1tmaWVsZC50eXBlLm5hbWVdO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5maWVsZFsnVHJhbnNhY3Rpb25UeXBlJ10uYXNzb2NpYXRlZFR5cGUgPSB0aGlzLnRyYW5zYWN0aW9uVHlwZTtcbiAgICAgICAgdGhpcy5maWVsZFsnVHJhbnNhY3Rpb25SZXN1bHQnXS5hc3NvY2lhdGVkVHlwZSA9IHRoaXMudHJhbnNhY3Rpb25SZXN1bHQ7XG4gICAgICAgIHRoaXMuZmllbGRbJ0xlZGdlckVudHJ5VHlwZSddLmFzc29jaWF0ZWRUeXBlID0gdGhpcy5sZWRnZXJFbnRyeVR5cGU7XG4gICAgICAgIGlmICh0aGlzLmZpZWxkWydQZXJtaXNzaW9uVmFsdWUnXSkge1xuICAgICAgICAgICAgdGhpcy5maWVsZFsnUGVybWlzc2lvblZhbHVlJ10uYXNzb2NpYXRlZFR5cGUgPSB0aGlzLmRlbGVnYXRhYmxlUGVybWlzc2lvbnM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0QXNzb2NpYXRlZFR5cGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhVHlwZXM7XG4gICAgfVxufVxuZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnNCYXNlID0gWHJwbERlZmluaXRpb25zQmFzZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXhycGwtZGVmaW5pdGlvbnMtYmFzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XrplDefinitions = void 0;\nconst xrpl_definitions_base_1 = __webpack_require__(/*! ./xrpl-definitions-base */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions-base.js\");\nconst types_1 = __webpack_require__(/*! ../types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\");\n/**\n * Stores the various types and fields for rippled to be used to encode/decode information later on.\n * Should be used instead of XrplDefinitionsBase since this defines default `types` for serializing/deserializing\n * ledger data.\n */\nclass XrplDefinitions extends xrpl_definitions_base_1.XrplDefinitionsBase {\n    /**\n     * Present rippled types in a typed and updatable format.\n     * For an example of the input format see `definitions.json`\n     * To generate a new definitions file from rippled source code, use the tool at\n     * `packages/ripple-binary-codec/tools/generateDefinitions.js`.\n     *\n     * See the definitions.test.js file for examples of how to create your own updated definitions.json.\n     *\n     * @param enums - A json encoding of the core types, transaction types, transaction results, transaction names, and fields.\n     * @param additionalTypes - A list of SerializedType objects with the same name as the fields defined.\n     *              These types will be included in addition to the coreTypes used on mainnet.\n     */\n    constructor(enums, additionalTypes) {\n        const types = Object.assign({}, types_1.coreTypes, additionalTypes);\n        super(enums, types);\n    }\n}\nexports.XrplDefinitions = XrplDefinitions;\n//# sourceMappingURL=xrpl-definitions.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9lbnVtcy94cnBsLWRlZmluaXRpb25zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixnQ0FBZ0MsbUJBQU8sQ0FBQyxpSEFBeUI7QUFDakUsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvZW51bXMveHJwbC1kZWZpbml0aW9ucy5qcz9mYjJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5YcnBsRGVmaW5pdGlvbnMgPSB2b2lkIDA7XG5jb25zdCB4cnBsX2RlZmluaXRpb25zX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL3hycGwtZGVmaW5pdGlvbnMtYmFzZVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi4vdHlwZXNcIik7XG4vKipcbiAqIFN0b3JlcyB0aGUgdmFyaW91cyB0eXBlcyBhbmQgZmllbGRzIGZvciByaXBwbGVkIHRvIGJlIHVzZWQgdG8gZW5jb2RlL2RlY29kZSBpbmZvcm1hdGlvbiBsYXRlciBvbi5cbiAqIFNob3VsZCBiZSB1c2VkIGluc3RlYWQgb2YgWHJwbERlZmluaXRpb25zQmFzZSBzaW5jZSB0aGlzIGRlZmluZXMgZGVmYXVsdCBgdHlwZXNgIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nXG4gKiBsZWRnZXIgZGF0YS5cbiAqL1xuY2xhc3MgWHJwbERlZmluaXRpb25zIGV4dGVuZHMgeHJwbF9kZWZpbml0aW9uc19iYXNlXzEuWHJwbERlZmluaXRpb25zQmFzZSB7XG4gICAgLyoqXG4gICAgICogUHJlc2VudCByaXBwbGVkIHR5cGVzIGluIGEgdHlwZWQgYW5kIHVwZGF0YWJsZSBmb3JtYXQuXG4gICAgICogRm9yIGFuIGV4YW1wbGUgb2YgdGhlIGlucHV0IGZvcm1hdCBzZWUgYGRlZmluaXRpb25zLmpzb25gXG4gICAgICogVG8gZ2VuZXJhdGUgYSBuZXcgZGVmaW5pdGlvbnMgZmlsZSBmcm9tIHJpcHBsZWQgc291cmNlIGNvZGUsIHVzZSB0aGUgdG9vbCBhdFxuICAgICAqIGBwYWNrYWdlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL3Rvb2xzL2dlbmVyYXRlRGVmaW5pdGlvbnMuanNgLlxuICAgICAqXG4gICAgICogU2VlIHRoZSBkZWZpbml0aW9ucy50ZXN0LmpzIGZpbGUgZm9yIGV4YW1wbGVzIG9mIGhvdyB0byBjcmVhdGUgeW91ciBvd24gdXBkYXRlZCBkZWZpbml0aW9ucy5qc29uLlxuICAgICAqXG4gICAgICogQHBhcmFtIGVudW1zIC0gQSBqc29uIGVuY29kaW5nIG9mIHRoZSBjb3JlIHR5cGVzLCB0cmFuc2FjdGlvbiB0eXBlcywgdHJhbnNhY3Rpb24gcmVzdWx0cywgdHJhbnNhY3Rpb24gbmFtZXMsIGFuZCBmaWVsZHMuXG4gICAgICogQHBhcmFtIGFkZGl0aW9uYWxUeXBlcyAtIEEgbGlzdCBvZiBTZXJpYWxpemVkVHlwZSBvYmplY3RzIHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZmllbGRzIGRlZmluZWQuXG4gICAgICogICAgICAgICAgICAgIFRoZXNlIHR5cGVzIHdpbGwgYmUgaW5jbHVkZWQgaW4gYWRkaXRpb24gdG8gdGhlIGNvcmVUeXBlcyB1c2VkIG9uIG1haW5uZXQuXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZW51bXMsIGFkZGl0aW9uYWxUeXBlcykge1xuICAgICAgICBjb25zdCB0eXBlcyA9IE9iamVjdC5hc3NpZ24oe30sIHR5cGVzXzEuY29yZVR5cGVzLCBhZGRpdGlvbmFsVHlwZXMpO1xuICAgICAgICBzdXBlcihlbnVtcywgdHlwZXMpO1xuICAgIH1cbn1cbmV4cG9ydHMuWHJwbERlZmluaXRpb25zID0gWHJwbERlZmluaXRpb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eHJwbC1kZWZpbml0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/hash-prefixes.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HashPrefix = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\n/**\n * Write a 32 bit integer to a Uint8Array\n *\n * @param uint32 32 bit integer to write to Uint8Array\n * @returns a Uint8Array with the bytes representation of uint32\n */\nfunction bytes(uint32) {\n    const result = new Uint8Array(4);\n    (0, utils_1.writeUInt32BE)(result, uint32, 0);\n    return result;\n}\n/**\n * Maps HashPrefix names to their byte representation\n */\nconst HashPrefix = {\n    transactionID: bytes(0x54584e00),\n    // transaction plus metadata\n    transaction: bytes(0x534e4400),\n    // account state\n    accountStateEntry: bytes(0x4d4c4e00),\n    // inner node in tree\n    innerNode: bytes(0x4d494e00),\n    // ledger master data for signing\n    ledgerHeader: bytes(0x4c575200),\n    // inner transaction to sign\n    transactionSig: bytes(0x53545800),\n    // inner transaction to sign\n    transactionMultiSig: bytes(0x534d5400),\n    // validation for signing\n    validation: bytes(0x56414c00),\n    // proposal for signing\n    proposal: bytes(0x50525000),\n    // payment channel claim\n    paymentChannelClaim: bytes(0x434c4d00),\n    // batch\n    batch: bytes(0x42434800),\n};\nexports.HashPrefix = HashPrefix;\n//# sourceMappingURL=hash-prefixes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9oYXNoLXByZWZpeGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixnQkFBZ0IsbUJBQU8sQ0FBQywyRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2hhc2gtcHJlZml4ZXMuanM/Mzc1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFzaFByZWZpeCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbi8qKlxuICogV3JpdGUgYSAzMiBiaXQgaW50ZWdlciB0byBhIFVpbnQ4QXJyYXlcbiAqXG4gKiBAcGFyYW0gdWludDMyIDMyIGJpdCBpbnRlZ2VyIHRvIHdyaXRlIHRvIFVpbnQ4QXJyYXlcbiAqIEByZXR1cm5zIGEgVWludDhBcnJheSB3aXRoIHRoZSBieXRlcyByZXByZXNlbnRhdGlvbiBvZiB1aW50MzJcbiAqL1xuZnVuY3Rpb24gYnl0ZXModWludDMyKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgKDAsIHV0aWxzXzEud3JpdGVVSW50MzJCRSkocmVzdWx0LCB1aW50MzIsIDApO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIE1hcHMgSGFzaFByZWZpeCBuYW1lcyB0byB0aGVpciBieXRlIHJlcHJlc2VudGF0aW9uXG4gKi9cbmNvbnN0IEhhc2hQcmVmaXggPSB7XG4gICAgdHJhbnNhY3Rpb25JRDogYnl0ZXMoMHg1NDU4NGUwMCksXG4gICAgLy8gdHJhbnNhY3Rpb24gcGx1cyBtZXRhZGF0YVxuICAgIHRyYW5zYWN0aW9uOiBieXRlcygweDUzNGU0NDAwKSxcbiAgICAvLyBhY2NvdW50IHN0YXRlXG4gICAgYWNjb3VudFN0YXRlRW50cnk6IGJ5dGVzKDB4NGQ0YzRlMDApLFxuICAgIC8vIGlubmVyIG5vZGUgaW4gdHJlZVxuICAgIGlubmVyTm9kZTogYnl0ZXMoMHg0ZDQ5NGUwMCksXG4gICAgLy8gbGVkZ2VyIG1hc3RlciBkYXRhIGZvciBzaWduaW5nXG4gICAgbGVkZ2VySGVhZGVyOiBieXRlcygweDRjNTc1MjAwKSxcbiAgICAvLyBpbm5lciB0cmFuc2FjdGlvbiB0byBzaWduXG4gICAgdHJhbnNhY3Rpb25TaWc6IGJ5dGVzKDB4NTM1NDU4MDApLFxuICAgIC8vIGlubmVyIHRyYW5zYWN0aW9uIHRvIHNpZ25cbiAgICB0cmFuc2FjdGlvbk11bHRpU2lnOiBieXRlcygweDUzNGQ1NDAwKSxcbiAgICAvLyB2YWxpZGF0aW9uIGZvciBzaWduaW5nXG4gICAgdmFsaWRhdGlvbjogYnl0ZXMoMHg1NjQxNGMwMCksXG4gICAgLy8gcHJvcG9zYWwgZm9yIHNpZ25pbmdcbiAgICBwcm9wb3NhbDogYnl0ZXMoMHg1MDUyNTAwMCksXG4gICAgLy8gcGF5bWVudCBjaGFubmVsIGNsYWltXG4gICAgcGF5bWVudENoYW5uZWxDbGFpbTogYnl0ZXMoMHg0MzRjNGQwMCksXG4gICAgLy8gYmF0Y2hcbiAgICBiYXRjaDogYnl0ZXMoMHg0MjQzNDgwMCksXG59O1xuZXhwb3J0cy5IYXNoUHJlZml4ID0gSGFzaFByZWZpeDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2gtcHJlZml4ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/hashes.js":
/*!*************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/hashes.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.transactionID = exports.sha512Half = exports.Sha512Half = void 0;\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ./serdes/binary-serializer */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst sha512_1 = __webpack_require__(/*! @xrplf/isomorphic/sha512 */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/sha512/index.js\");\n/**\n * Class for hashing with SHA512\n * @extends BytesList So SerializedTypes can write bytes to a Sha512Half\n */\nclass Sha512Half extends binary_serializer_1.BytesList {\n    constructor() {\n        super(...arguments);\n        this.hash = sha512_1.sha512.create();\n    }\n    /**\n     * Construct a new Sha512Hash and write bytes this.hash\n     *\n     * @param bytes bytes to write to this.hash\n     * @returns the new Sha512Hash object\n     */\n    static put(bytes) {\n        return new Sha512Half().put(bytes);\n    }\n    /**\n     * Write bytes to an existing Sha512Hash\n     *\n     * @param bytes bytes to write to object\n     * @returns the Sha512 object\n     */\n    put(bytes) {\n        this.hash.update(bytes);\n        return this;\n    }\n    /**\n     * Compute SHA512 hash and slice in half\n     *\n     * @returns half of a SHA512 hash\n     */\n    finish256() {\n        return Uint8Array.from(this.hash.digest().slice(0, 32));\n    }\n    /**\n     * Constructs a Hash256 from the Sha512Half object\n     *\n     * @returns a Hash256 object\n     */\n    finish() {\n        return new types_1.Hash256(this.finish256());\n    }\n}\nexports.Sha512Half = Sha512Half;\n/**\n * compute SHA512 hash of a list of bytes\n *\n * @param args zero or more arguments to hash\n * @returns the sha512half hash of the arguments.\n */\nfunction sha512Half(...args) {\n    const hash = new Sha512Half();\n    args.forEach((a) => hash.put(a));\n    return hash.finish256();\n}\nexports.sha512Half = sha512Half;\n/**\n * Construct a transactionID from a Serialized Transaction\n *\n * @param serialized bytes to hash\n * @returns a Hash256 object\n */\nfunction transactionID(serialized) {\n    return new types_1.Hash256(sha512Half(hash_prefixes_1.HashPrefix.transactionID, serialized));\n}\nexports.transactionID = transactionID;\n//# sourceMappingURL=hashes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9oYXNoZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsa0JBQWtCLEdBQUcsa0JBQWtCO0FBQy9ELHdCQUF3QixtQkFBTyxDQUFDLDJGQUFpQjtBQUNqRCxnQkFBZ0IsbUJBQU8sQ0FBQyxpRkFBUztBQUNqQyw0QkFBNEIsbUJBQU8sQ0FBQyxpSEFBNEI7QUFDaEUsaUJBQWlCLG1CQUFPLENBQUMsaUdBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L2hhc2hlcy5qcz8xZTA0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50cmFuc2FjdGlvbklEID0gZXhwb3J0cy5zaGE1MTJIYWxmID0gZXhwb3J0cy5TaGE1MTJIYWxmID0gdm9pZCAwO1xuY29uc3QgaGFzaF9wcmVmaXhlc18xID0gcmVxdWlyZShcIi4vaGFzaC1wcmVmaXhlc1wiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmNvbnN0IGJpbmFyeV9zZXJpYWxpemVyXzEgPSByZXF1aXJlKFwiLi9zZXJkZXMvYmluYXJ5LXNlcmlhbGl6ZXJcIik7XG5jb25zdCBzaGE1MTJfMSA9IHJlcXVpcmUoXCJAeHJwbGYvaXNvbW9ycGhpYy9zaGE1MTJcIik7XG4vKipcbiAqIENsYXNzIGZvciBoYXNoaW5nIHdpdGggU0hBNTEyXG4gKiBAZXh0ZW5kcyBCeXRlc0xpc3QgU28gU2VyaWFsaXplZFR5cGVzIGNhbiB3cml0ZSBieXRlcyB0byBhIFNoYTUxMkhhbGZcbiAqL1xuY2xhc3MgU2hhNTEySGFsZiBleHRlbmRzIGJpbmFyeV9zZXJpYWxpemVyXzEuQnl0ZXNMaXN0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5oYXNoID0gc2hhNTEyXzEuc2hhNTEyLmNyZWF0ZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBuZXcgU2hhNTEySGFzaCBhbmQgd3JpdGUgYnl0ZXMgdGhpcy5oYXNoXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYnl0ZXMgYnl0ZXMgdG8gd3JpdGUgdG8gdGhpcy5oYXNoXG4gICAgICogQHJldHVybnMgdGhlIG5ldyBTaGE1MTJIYXNoIG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBwdXQoYnl0ZXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTaGE1MTJIYWxmKCkucHV0KGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYnl0ZXMgdG8gYW4gZXhpc3RpbmcgU2hhNTEySGFzaFxuICAgICAqXG4gICAgICogQHBhcmFtIGJ5dGVzIGJ5dGVzIHRvIHdyaXRlIHRvIG9iamVjdFxuICAgICAqIEByZXR1cm5zIHRoZSBTaGE1MTIgb2JqZWN0XG4gICAgICovXG4gICAgcHV0KGJ5dGVzKSB7XG4gICAgICAgIHRoaXMuaGFzaC51cGRhdGUoYnl0ZXMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcHV0ZSBTSEE1MTIgaGFzaCBhbmQgc2xpY2UgaW4gaGFsZlxuICAgICAqXG4gICAgICogQHJldHVybnMgaGFsZiBvZiBhIFNIQTUxMiBoYXNoXG4gICAgICovXG4gICAgZmluaXNoMjU2KCkge1xuICAgICAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKHRoaXMuaGFzaC5kaWdlc3QoKS5zbGljZSgwLCAzMikpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3RzIGEgSGFzaDI1NiBmcm9tIHRoZSBTaGE1MTJIYWxmIG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgYSBIYXNoMjU2IG9iamVjdFxuICAgICAqL1xuICAgIGZpbmlzaCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyB0eXBlc18xLkhhc2gyNTYodGhpcy5maW5pc2gyNTYoKSk7XG4gICAgfVxufVxuZXhwb3J0cy5TaGE1MTJIYWxmID0gU2hhNTEySGFsZjtcbi8qKlxuICogY29tcHV0ZSBTSEE1MTIgaGFzaCBvZiBhIGxpc3Qgb2YgYnl0ZXNcbiAqXG4gKiBAcGFyYW0gYXJncyB6ZXJvIG9yIG1vcmUgYXJndW1lbnRzIHRvIGhhc2hcbiAqIEByZXR1cm5zIHRoZSBzaGE1MTJoYWxmIGhhc2ggb2YgdGhlIGFyZ3VtZW50cy5cbiAqL1xuZnVuY3Rpb24gc2hhNTEySGFsZiguLi5hcmdzKSB7XG4gICAgY29uc3QgaGFzaCA9IG5ldyBTaGE1MTJIYWxmKCk7XG4gICAgYXJncy5mb3JFYWNoKChhKSA9PiBoYXNoLnB1dChhKSk7XG4gICAgcmV0dXJuIGhhc2guZmluaXNoMjU2KCk7XG59XG5leHBvcnRzLnNoYTUxMkhhbGYgPSBzaGE1MTJIYWxmO1xuLyoqXG4gKiBDb25zdHJ1Y3QgYSB0cmFuc2FjdGlvbklEIGZyb20gYSBTZXJpYWxpemVkIFRyYW5zYWN0aW9uXG4gKlxuICogQHBhcmFtIHNlcmlhbGl6ZWQgYnl0ZXMgdG8gaGFzaFxuICogQHJldHVybnMgYSBIYXNoMjU2IG9iamVjdFxuICovXG5mdW5jdGlvbiB0cmFuc2FjdGlvbklEKHNlcmlhbGl6ZWQpIHtcbiAgICByZXR1cm4gbmV3IHR5cGVzXzEuSGFzaDI1NihzaGE1MTJIYWxmKGhhc2hfcHJlZml4ZXNfMS5IYXNoUHJlZml4LnRyYW5zYWN0aW9uSUQsIHNlcmlhbGl6ZWQpKTtcbn1cbmV4cG9ydHMudHJhbnNhY3Rpb25JRCA9IHRyYW5zYWN0aW9uSUQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/hashes.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/index.js":
/*!************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.coreTypes = exports.DEFAULT_DEFINITIONS = exports.XrplDefinitionsBase = exports.XrplDefinitions = exports.TRANSACTION_TYPES = exports.decodeLedgerData = exports.decodeQuality = exports.encodeQuality = exports.encodeForSigningBatch = exports.encodeForMultisigning = exports.encodeForSigningClaim = exports.encodeForSigning = exports.encode = exports.decode = void 0;\nconst coretypes_1 = __webpack_require__(/*! ./coretypes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/coretypes.js\");\nconst ledger_hashes_1 = __webpack_require__(/*! ./ledger-hashes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/ledger-hashes.js\");\nObject.defineProperty(exports, \"decodeLedgerData\", ({ enumerable: true, get: function () { return ledger_hashes_1.decodeLedgerData; } }));\nconst enums_1 = __webpack_require__(/*! ./enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nObject.defineProperty(exports, \"XrplDefinitionsBase\", ({ enumerable: true, get: function () { return enums_1.XrplDefinitionsBase; } }));\nObject.defineProperty(exports, \"TRANSACTION_TYPES\", ({ enumerable: true, get: function () { return enums_1.TRANSACTION_TYPES; } }));\nObject.defineProperty(exports, \"DEFAULT_DEFINITIONS\", ({ enumerable: true, get: function () { return enums_1.DEFAULT_DEFINITIONS; } }));\nconst xrpl_definitions_1 = __webpack_require__(/*! ./enums/xrpl-definitions */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/xrpl-definitions.js\");\nObject.defineProperty(exports, \"XrplDefinitions\", ({ enumerable: true, get: function () { return xrpl_definitions_1.XrplDefinitions; } }));\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\");\nObject.defineProperty(exports, \"coreTypes\", ({ enumerable: true, get: function () { return types_1.coreTypes; } }));\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst { signingData, signingClaimData, multiSigningData, signingBatchData, binaryToJSON, serializeObject, } = coretypes_1.binary;\n/**\n * Decode a transaction\n *\n * @param binary hex-string of the encoded transaction\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns the JSON representation of the transaction\n */\nfunction decode(binary, definitions) {\n    if (typeof binary !== 'string') {\n        throw new Error('binary must be a hex string');\n    }\n    return binaryToJSON(binary, definitions);\n}\nexports.decode = decode;\n/**\n * Encode a transaction\n *\n * @param json The JSON representation of a transaction\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n *\n * @returns A hex-string of the encoded transaction\n */\nfunction encode(json, definitions) {\n    if (typeof json !== 'object') {\n        throw new Error();\n    }\n    return (0, utils_1.bytesToHex)(serializeObject(json, { definitions }));\n}\nexports.encode = encode;\n/**\n * Encode a transaction and prepare for signing\n *\n * @param json JSON object representing the transaction\n * @param signer string representing the account to sign the transaction with\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction\n */\nfunction encodeForSigning(json, definitions) {\n    if (typeof json !== 'object') {\n        throw new Error();\n    }\n    return (0, utils_1.bytesToHex)(signingData(json, coretypes_1.HashPrefix.transactionSig, {\n        definitions,\n    }));\n}\nexports.encodeForSigning = encodeForSigning;\n/**\n * Encode a payment channel claim for signing.\n *\n * @param json JSON object representing the claim.\n * @returns a hex string of the encoded claim.\n */\nfunction encodeForSigningClaim(json) {\n    if (typeof json !== 'object') {\n        throw new Error();\n    }\n    return (0, utils_1.bytesToHex)(signingClaimData(json));\n}\nexports.encodeForSigningClaim = encodeForSigningClaim;\n/**\n * Encode a transaction and prepare for multi-signing.\n *\n * @param json JSON object representing the transaction.\n * @param signer string representing the account to sign the transaction with.\n * @param definitions Custom rippled types to use instead of the default. Used for sidechains and amendments.\n * @returns a hex string of the encoded transaction.\n */\nfunction encodeForMultisigning(json, signer, definitions) {\n    if (typeof json !== 'object') {\n        throw new Error();\n    }\n    if (json['SigningPubKey'] !== '') {\n        throw new Error();\n    }\n    const definitionsOpt = definitions ? { definitions } : undefined;\n    return (0, utils_1.bytesToHex)(multiSigningData(json, signer, definitionsOpt));\n}\nexports.encodeForMultisigning = encodeForMultisigning;\n/**\n * Encode a Batch transaction for signing.\n *\n * @param json JSON object representing the transaction.\n * @returns a hex string of the encoded transaction.\n */\nfunction encodeForSigningBatch(json) {\n    if (typeof json !== 'object') {\n        throw new Error('Need an object to encode a Batch transaction');\n    }\n    return (0, utils_1.bytesToHex)(signingBatchData(json));\n}\nexports.encodeForSigningBatch = encodeForSigningBatch;\n/**\n * Encode a quality value\n *\n * @param value string representation of a number\n * @returns a hex-string representing the quality\n */\nfunction encodeQuality(value) {\n    if (typeof value !== 'string') {\n        throw new Error();\n    }\n    return (0, utils_1.bytesToHex)(coretypes_1.quality.encode(value));\n}\nexports.encodeQuality = encodeQuality;\n/**\n * Decode a quality value\n *\n * @param value hex-string of a quality\n * @returns a string representing the quality\n */\nfunction decodeQuality(value) {\n    if (typeof value !== 'string') {\n        throw new Error();\n    }\n    return coretypes_1.quality.decode(value).toString();\n}\nexports.decodeQuality = decodeQuality;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/ledger-hashes.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/ledger-hashes.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeLedgerData = exports.ledgerHash = exports.transactionTreeHash = exports.accountStateHash = void 0;\nconst shamap_1 = __webpack_require__(/*! ./shamap */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/shamap.js\");\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst hashes_1 = __webpack_require__(/*! ./hashes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hashes.js\");\nconst binary_1 = __webpack_require__(/*! ./binary */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/binary.js\");\nconst hash_256_1 = __webpack_require__(/*! ./types/hash-256 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nconst st_object_1 = __webpack_require__(/*! ./types/st-object */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-object.js\");\nconst uint_64_1 = __webpack_require__(/*! ./types/uint-64 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-64.js\");\nconst uint_32_1 = __webpack_require__(/*! ./types/uint-32 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-32.js\");\nconst uint_8_1 = __webpack_require__(/*! ./types/uint-8 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-8.js\");\nconst binary_parser_1 = __webpack_require__(/*! ./serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\n/**\n * Computes the hash of a list of objects\n *\n * @param itemizer Converts an item into a format that can be added to SHAMap\n * @param itemsJson Array of items to add to a SHAMap\n * @returns the hash of the SHAMap\n */\nfunction computeHash(itemizer, itemsJson) {\n    const map = new shamap_1.ShaMap();\n    itemsJson.forEach((item) => map.addItem(...itemizer(item)));\n    return map.hash();\n}\n/**\n * Convert a transaction into an index and an item\n *\n * @param json transaction with metadata\n * @returns a tuple of index and item to be added to SHAMap\n */\nfunction transactionItemizer(json) {\n    if (!json.hash) {\n        throw new Error();\n    }\n    const index = hash_256_1.Hash256.from(json.hash);\n    const item = {\n        hashPrefix() {\n            return hash_prefixes_1.HashPrefix.transaction;\n        },\n        toBytesSink(sink) {\n            const serializer = new binary_1.BinarySerializer(sink);\n            serializer.writeLengthEncoded(st_object_1.STObject.from(json));\n            serializer.writeLengthEncoded(st_object_1.STObject.from(json.metaData));\n        },\n    };\n    return [index, item, undefined];\n}\n/**\n * Convert an entry to a pair Hash256 and ShaMapNode\n *\n * @param json JSON describing a ledger entry item\n * @returns a tuple of index and item to be added to SHAMap\n */\nfunction entryItemizer(json) {\n    const index = hash_256_1.Hash256.from(json.index);\n    const bytes = (0, binary_1.serializeObject)(json);\n    const item = {\n        hashPrefix() {\n            return hash_prefixes_1.HashPrefix.accountStateEntry;\n        },\n        toBytesSink(sink) {\n            sink.put(bytes);\n        },\n    };\n    return [index, item, undefined];\n}\n/**\n * Function computing the hash of a transaction tree\n *\n * @param param An array of transaction objects to hash\n * @returns A Hash256 object\n */\nfunction transactionTreeHash(param) {\n    const itemizer = transactionItemizer;\n    return computeHash(itemizer, param);\n}\nexports.transactionTreeHash = transactionTreeHash;\n/**\n * Function computing the hash of accountState\n *\n * @param param A list of accountStates hash\n * @returns A Hash256 object\n */\nfunction accountStateHash(param) {\n    const itemizer = entryItemizer;\n    return computeHash(itemizer, param);\n}\nexports.accountStateHash = accountStateHash;\n/**\n * Serialize and hash a ledger header\n *\n * @param header a ledger header\n * @returns the hash of header\n */\nfunction ledgerHash(header) {\n    const hash = new hashes_1.Sha512Half();\n    hash.put(hash_prefixes_1.HashPrefix.ledgerHeader);\n    if (header.parent_close_time === undefined ||\n        header.close_flags === undefined) {\n        throw new Error();\n    }\n    uint_32_1.UInt32.from(header.ledger_index).toBytesSink(hash);\n    uint_64_1.UInt64.from(BigInt(String(header.total_coins))).toBytesSink(hash);\n    hash_256_1.Hash256.from(header.parent_hash).toBytesSink(hash);\n    hash_256_1.Hash256.from(header.transaction_hash).toBytesSink(hash);\n    hash_256_1.Hash256.from(header.account_hash).toBytesSink(hash);\n    uint_32_1.UInt32.from(header.parent_close_time).toBytesSink(hash);\n    uint_32_1.UInt32.from(header.close_time).toBytesSink(hash);\n    uint_8_1.UInt8.from(header.close_time_resolution).toBytesSink(hash);\n    uint_8_1.UInt8.from(header.close_flags).toBytesSink(hash);\n    return hash.finish();\n}\nexports.ledgerHash = ledgerHash;\n/**\n * Decodes a serialized ledger header\n *\n * @param binary A serialized ledger header\n * @param definitions Type definitions to parse the ledger objects.\n *      Used if there are non-default ledger objects to decode.\n * @returns A JSON object describing a ledger header\n */\nfunction decodeLedgerData(binary, definitions) {\n    if (typeof binary !== 'string') {\n        throw new Error('binary must be a hex string');\n    }\n    const parser = new binary_parser_1.BinaryParser(binary, definitions);\n    return {\n        ledger_index: parser.readUInt32(),\n        total_coins: parser.readType(uint_64_1.UInt64).valueOf().toString(),\n        parent_hash: parser.readType(hash_256_1.Hash256).toHex(),\n        transaction_hash: parser.readType(hash_256_1.Hash256).toHex(),\n        account_hash: parser.readType(hash_256_1.Hash256).toHex(),\n        parent_close_time: parser.readUInt32(),\n        close_time: parser.readUInt32(),\n        close_time_resolution: parser.readUInt8(),\n        close_flags: parser.readUInt8(),\n    };\n}\nexports.decodeLedgerData = decodeLedgerData;\n//# sourceMappingURL=ledger-hashes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9sZWRnZXItaGFzaGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLGtCQUFrQixHQUFHLDJCQUEyQixHQUFHLHdCQUF3QjtBQUN0RyxpQkFBaUIsbUJBQU8sQ0FBQyw2RUFBVTtBQUNuQyx3QkFBd0IsbUJBQU8sQ0FBQywyRkFBaUI7QUFDakQsaUJBQWlCLG1CQUFPLENBQUMsNkVBQVU7QUFDbkMsaUJBQWlCLG1CQUFPLENBQUMsNkVBQVU7QUFDbkMsbUJBQW1CLG1CQUFPLENBQUMsNkZBQWtCO0FBQzdDLG9CQUFvQixtQkFBTyxDQUFDLCtGQUFtQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQywyRkFBaUI7QUFDM0Msa0JBQWtCLG1CQUFPLENBQUMsMkZBQWlCO0FBQzNDLGlCQUFpQixtQkFBTyxDQUFDLHlGQUFnQjtBQUN6Qyx3QkFBd0IsbUJBQU8sQ0FBQyx5R0FBd0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9sZWRnZXItaGFzaGVzLmpzPzNiZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZUxlZGdlckRhdGEgPSBleHBvcnRzLmxlZGdlckhhc2ggPSBleHBvcnRzLnRyYW5zYWN0aW9uVHJlZUhhc2ggPSBleHBvcnRzLmFjY291bnRTdGF0ZUhhc2ggPSB2b2lkIDA7XG5jb25zdCBzaGFtYXBfMSA9IHJlcXVpcmUoXCIuL3NoYW1hcFwiKTtcbmNvbnN0IGhhc2hfcHJlZml4ZXNfMSA9IHJlcXVpcmUoXCIuL2hhc2gtcHJlZml4ZXNcIik7XG5jb25zdCBoYXNoZXNfMSA9IHJlcXVpcmUoXCIuL2hhc2hlc1wiKTtcbmNvbnN0IGJpbmFyeV8xID0gcmVxdWlyZShcIi4vYmluYXJ5XCIpO1xuY29uc3QgaGFzaF8yNTZfMSA9IHJlcXVpcmUoXCIuL3R5cGVzL2hhc2gtMjU2XCIpO1xuY29uc3Qgc3Rfb2JqZWN0XzEgPSByZXF1aXJlKFwiLi90eXBlcy9zdC1vYmplY3RcIik7XG5jb25zdCB1aW50XzY0XzEgPSByZXF1aXJlKFwiLi90eXBlcy91aW50LTY0XCIpO1xuY29uc3QgdWludF8zMl8xID0gcmVxdWlyZShcIi4vdHlwZXMvdWludC0zMlwiKTtcbmNvbnN0IHVpbnRfOF8xID0gcmVxdWlyZShcIi4vdHlwZXMvdWludC04XCIpO1xuY29uc3QgYmluYXJ5X3BhcnNlcl8xID0gcmVxdWlyZShcIi4vc2VyZGVzL2JpbmFyeS1wYXJzZXJcIik7XG4vKipcbiAqIENvbXB1dGVzIHRoZSBoYXNoIG9mIGEgbGlzdCBvZiBvYmplY3RzXG4gKlxuICogQHBhcmFtIGl0ZW1pemVyIENvbnZlcnRzIGFuIGl0ZW0gaW50byBhIGZvcm1hdCB0aGF0IGNhbiBiZSBhZGRlZCB0byBTSEFNYXBcbiAqIEBwYXJhbSBpdGVtc0pzb24gQXJyYXkgb2YgaXRlbXMgdG8gYWRkIHRvIGEgU0hBTWFwXG4gKiBAcmV0dXJucyB0aGUgaGFzaCBvZiB0aGUgU0hBTWFwXG4gKi9cbmZ1bmN0aW9uIGNvbXB1dGVIYXNoKGl0ZW1pemVyLCBpdGVtc0pzb24pIHtcbiAgICBjb25zdCBtYXAgPSBuZXcgc2hhbWFwXzEuU2hhTWFwKCk7XG4gICAgaXRlbXNKc29uLmZvckVhY2goKGl0ZW0pID0+IG1hcC5hZGRJdGVtKC4uLml0ZW1pemVyKGl0ZW0pKSk7XG4gICAgcmV0dXJuIG1hcC5oYXNoKCk7XG59XG4vKipcbiAqIENvbnZlcnQgYSB0cmFuc2FjdGlvbiBpbnRvIGFuIGluZGV4IGFuZCBhbiBpdGVtXG4gKlxuICogQHBhcmFtIGpzb24gdHJhbnNhY3Rpb24gd2l0aCBtZXRhZGF0YVxuICogQHJldHVybnMgYSB0dXBsZSBvZiBpbmRleCBhbmQgaXRlbSB0byBiZSBhZGRlZCB0byBTSEFNYXBcbiAqL1xuZnVuY3Rpb24gdHJhbnNhY3Rpb25JdGVtaXplcihqc29uKSB7XG4gICAgaWYgKCFqc29uLmhhc2gpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgfVxuICAgIGNvbnN0IGluZGV4ID0gaGFzaF8yNTZfMS5IYXNoMjU2LmZyb20oanNvbi5oYXNoKTtcbiAgICBjb25zdCBpdGVtID0ge1xuICAgICAgICBoYXNoUHJlZml4KCkge1xuICAgICAgICAgICAgcmV0dXJuIGhhc2hfcHJlZml4ZXNfMS5IYXNoUHJlZml4LnRyYW5zYWN0aW9uO1xuICAgICAgICB9LFxuICAgICAgICB0b0J5dGVzU2luayhzaW5rKSB7XG4gICAgICAgICAgICBjb25zdCBzZXJpYWxpemVyID0gbmV3IGJpbmFyeV8xLkJpbmFyeVNlcmlhbGl6ZXIoc2luayk7XG4gICAgICAgICAgICBzZXJpYWxpemVyLndyaXRlTGVuZ3RoRW5jb2RlZChzdF9vYmplY3RfMS5TVE9iamVjdC5mcm9tKGpzb24pKTtcbiAgICAgICAgICAgIHNlcmlhbGl6ZXIud3JpdGVMZW5ndGhFbmNvZGVkKHN0X29iamVjdF8xLlNUT2JqZWN0LmZyb20oanNvbi5tZXRhRGF0YSkpO1xuICAgICAgICB9LFxuICAgIH07XG4gICAgcmV0dXJuIFtpbmRleCwgaXRlbSwgdW5kZWZpbmVkXTtcbn1cbi8qKlxuICogQ29udmVydCBhbiBlbnRyeSB0byBhIHBhaXIgSGFzaDI1NiBhbmQgU2hhTWFwTm9kZVxuICpcbiAqIEBwYXJhbSBqc29uIEpTT04gZGVzY3JpYmluZyBhIGxlZGdlciBlbnRyeSBpdGVtXG4gKiBAcmV0dXJucyBhIHR1cGxlIG9mIGluZGV4IGFuZCBpdGVtIHRvIGJlIGFkZGVkIHRvIFNIQU1hcFxuICovXG5mdW5jdGlvbiBlbnRyeUl0ZW1pemVyKGpzb24pIHtcbiAgICBjb25zdCBpbmRleCA9IGhhc2hfMjU2XzEuSGFzaDI1Ni5mcm9tKGpzb24uaW5kZXgpO1xuICAgIGNvbnN0IGJ5dGVzID0gKDAsIGJpbmFyeV8xLnNlcmlhbGl6ZU9iamVjdCkoanNvbik7XG4gICAgY29uc3QgaXRlbSA9IHtcbiAgICAgICAgaGFzaFByZWZpeCgpIHtcbiAgICAgICAgICAgIHJldHVybiBoYXNoX3ByZWZpeGVzXzEuSGFzaFByZWZpeC5hY2NvdW50U3RhdGVFbnRyeTtcbiAgICAgICAgfSxcbiAgICAgICAgdG9CeXRlc1Npbmsoc2luaykge1xuICAgICAgICAgICAgc2luay5wdXQoYnl0ZXMpO1xuICAgICAgICB9LFxuICAgIH07XG4gICAgcmV0dXJuIFtpbmRleCwgaXRlbSwgdW5kZWZpbmVkXTtcbn1cbi8qKlxuICogRnVuY3Rpb24gY29tcHV0aW5nIHRoZSBoYXNoIG9mIGEgdHJhbnNhY3Rpb24gdHJlZVxuICpcbiAqIEBwYXJhbSBwYXJhbSBBbiBhcnJheSBvZiB0cmFuc2FjdGlvbiBvYmplY3RzIHRvIGhhc2hcbiAqIEByZXR1cm5zIEEgSGFzaDI1NiBvYmplY3RcbiAqL1xuZnVuY3Rpb24gdHJhbnNhY3Rpb25UcmVlSGFzaChwYXJhbSkge1xuICAgIGNvbnN0IGl0ZW1pemVyID0gdHJhbnNhY3Rpb25JdGVtaXplcjtcbiAgICByZXR1cm4gY29tcHV0ZUhhc2goaXRlbWl6ZXIsIHBhcmFtKTtcbn1cbmV4cG9ydHMudHJhbnNhY3Rpb25UcmVlSGFzaCA9IHRyYW5zYWN0aW9uVHJlZUhhc2g7XG4vKipcbiAqIEZ1bmN0aW9uIGNvbXB1dGluZyB0aGUgaGFzaCBvZiBhY2NvdW50U3RhdGVcbiAqXG4gKiBAcGFyYW0gcGFyYW0gQSBsaXN0IG9mIGFjY291bnRTdGF0ZXMgaGFzaFxuICogQHJldHVybnMgQSBIYXNoMjU2IG9iamVjdFxuICovXG5mdW5jdGlvbiBhY2NvdW50U3RhdGVIYXNoKHBhcmFtKSB7XG4gICAgY29uc3QgaXRlbWl6ZXIgPSBlbnRyeUl0ZW1pemVyO1xuICAgIHJldHVybiBjb21wdXRlSGFzaChpdGVtaXplciwgcGFyYW0pO1xufVxuZXhwb3J0cy5hY2NvdW50U3RhdGVIYXNoID0gYWNjb3VudFN0YXRlSGFzaDtcbi8qKlxuICogU2VyaWFsaXplIGFuZCBoYXNoIGEgbGVkZ2VyIGhlYWRlclxuICpcbiAqIEBwYXJhbSBoZWFkZXIgYSBsZWRnZXIgaGVhZGVyXG4gKiBAcmV0dXJucyB0aGUgaGFzaCBvZiBoZWFkZXJcbiAqL1xuZnVuY3Rpb24gbGVkZ2VySGFzaChoZWFkZXIpIHtcbiAgICBjb25zdCBoYXNoID0gbmV3IGhhc2hlc18xLlNoYTUxMkhhbGYoKTtcbiAgICBoYXNoLnB1dChoYXNoX3ByZWZpeGVzXzEuSGFzaFByZWZpeC5sZWRnZXJIZWFkZXIpO1xuICAgIGlmIChoZWFkZXIucGFyZW50X2Nsb3NlX3RpbWUgPT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBoZWFkZXIuY2xvc2VfZmxhZ3MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICB9XG4gICAgdWludF8zMl8xLlVJbnQzMi5mcm9tKGhlYWRlci5sZWRnZXJfaW5kZXgpLnRvQnl0ZXNTaW5rKGhhc2gpO1xuICAgIHVpbnRfNjRfMS5VSW50NjQuZnJvbShCaWdJbnQoU3RyaW5nKGhlYWRlci50b3RhbF9jb2lucykpKS50b0J5dGVzU2luayhoYXNoKTtcbiAgICBoYXNoXzI1Nl8xLkhhc2gyNTYuZnJvbShoZWFkZXIucGFyZW50X2hhc2gpLnRvQnl0ZXNTaW5rKGhhc2gpO1xuICAgIGhhc2hfMjU2XzEuSGFzaDI1Ni5mcm9tKGhlYWRlci50cmFuc2FjdGlvbl9oYXNoKS50b0J5dGVzU2luayhoYXNoKTtcbiAgICBoYXNoXzI1Nl8xLkhhc2gyNTYuZnJvbShoZWFkZXIuYWNjb3VudF9oYXNoKS50b0J5dGVzU2luayhoYXNoKTtcbiAgICB1aW50XzMyXzEuVUludDMyLmZyb20oaGVhZGVyLnBhcmVudF9jbG9zZV90aW1lKS50b0J5dGVzU2luayhoYXNoKTtcbiAgICB1aW50XzMyXzEuVUludDMyLmZyb20oaGVhZGVyLmNsb3NlX3RpbWUpLnRvQnl0ZXNTaW5rKGhhc2gpO1xuICAgIHVpbnRfOF8xLlVJbnQ4LmZyb20oaGVhZGVyLmNsb3NlX3RpbWVfcmVzb2x1dGlvbikudG9CeXRlc1NpbmsoaGFzaCk7XG4gICAgdWludF84XzEuVUludDguZnJvbShoZWFkZXIuY2xvc2VfZmxhZ3MpLnRvQnl0ZXNTaW5rKGhhc2gpO1xuICAgIHJldHVybiBoYXNoLmZpbmlzaCgpO1xufVxuZXhwb3J0cy5sZWRnZXJIYXNoID0gbGVkZ2VySGFzaDtcbi8qKlxuICogRGVjb2RlcyBhIHNlcmlhbGl6ZWQgbGVkZ2VyIGhlYWRlclxuICpcbiAqIEBwYXJhbSBiaW5hcnkgQSBzZXJpYWxpemVkIGxlZGdlciBoZWFkZXJcbiAqIEBwYXJhbSBkZWZpbml0aW9ucyBUeXBlIGRlZmluaXRpb25zIHRvIHBhcnNlIHRoZSBsZWRnZXIgb2JqZWN0cy5cbiAqICAgICAgVXNlZCBpZiB0aGVyZSBhcmUgbm9uLWRlZmF1bHQgbGVkZ2VyIG9iamVjdHMgdG8gZGVjb2RlLlxuICogQHJldHVybnMgQSBKU09OIG9iamVjdCBkZXNjcmliaW5nIGEgbGVkZ2VyIGhlYWRlclxuICovXG5mdW5jdGlvbiBkZWNvZGVMZWRnZXJEYXRhKGJpbmFyeSwgZGVmaW5pdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIGJpbmFyeSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdiaW5hcnkgbXVzdCBiZSBhIGhleCBzdHJpbmcnKTtcbiAgICB9XG4gICAgY29uc3QgcGFyc2VyID0gbmV3IGJpbmFyeV9wYXJzZXJfMS5CaW5hcnlQYXJzZXIoYmluYXJ5LCBkZWZpbml0aW9ucyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbGVkZ2VyX2luZGV4OiBwYXJzZXIucmVhZFVJbnQzMigpLFxuICAgICAgICB0b3RhbF9jb2luczogcGFyc2VyLnJlYWRUeXBlKHVpbnRfNjRfMS5VSW50NjQpLnZhbHVlT2YoKS50b1N0cmluZygpLFxuICAgICAgICBwYXJlbnRfaGFzaDogcGFyc2VyLnJlYWRUeXBlKGhhc2hfMjU2XzEuSGFzaDI1NikudG9IZXgoKSxcbiAgICAgICAgdHJhbnNhY3Rpb25faGFzaDogcGFyc2VyLnJlYWRUeXBlKGhhc2hfMjU2XzEuSGFzaDI1NikudG9IZXgoKSxcbiAgICAgICAgYWNjb3VudF9oYXNoOiBwYXJzZXIucmVhZFR5cGUoaGFzaF8yNTZfMS5IYXNoMjU2KS50b0hleCgpLFxuICAgICAgICBwYXJlbnRfY2xvc2VfdGltZTogcGFyc2VyLnJlYWRVSW50MzIoKSxcbiAgICAgICAgY2xvc2VfdGltZTogcGFyc2VyLnJlYWRVSW50MzIoKSxcbiAgICAgICAgY2xvc2VfdGltZV9yZXNvbHV0aW9uOiBwYXJzZXIucmVhZFVJbnQ4KCksXG4gICAgICAgIGNsb3NlX2ZsYWdzOiBwYXJzZXIucmVhZFVJbnQ4KCksXG4gICAgfTtcbn1cbmV4cG9ydHMuZGVjb2RlTGVkZ2VyRGF0YSA9IGRlY29kZUxlZGdlckRhdGE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sZWRnZXItaGFzaGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/ledger-hashes.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/quality.js":
/*!**************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/quality.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.quality = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\");\nconst bignumber_js_1 = __importDefault(__webpack_require__(/*! bignumber.js */ \"(ssr)/../../node_modules/bignumber.js/bignumber.js\"));\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * class for encoding and decoding quality\n */\nclass quality {\n    /**\n     * Encode quality amount\n     *\n     * @param arg string representation of an amount\n     * @returns Serialized quality\n     */\n    static encode(quality) {\n        const decimal = (0, bignumber_js_1.default)(quality);\n        const exponent = ((decimal === null || decimal === void 0 ? void 0 : decimal.e) || 0) - 15;\n        const qualityString = decimal.times(`1e${-exponent}`).abs().toString();\n        const bytes = types_1.coreTypes.UInt64.from(BigInt(qualityString)).toBytes();\n        bytes[0] = exponent + 100;\n        return bytes;\n    }\n    /**\n     * Decode quality amount\n     *\n     * @param arg hex-string denoting serialized quality\n     * @returns deserialized quality\n     */\n    static decode(quality) {\n        const bytes = (0, utils_1.hexToBytes)(quality).slice(-8);\n        const exponent = bytes[0] - 100;\n        const mantissa = new bignumber_js_1.default(`0x${(0, utils_1.bytesToHex)(bytes.slice(1))}`);\n        return mantissa.times(`1e${exponent}`);\n    }\n}\nexports.quality = quality;\n//# sourceMappingURL=quality.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9xdWFsaXR5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGdCQUFnQixtQkFBTyxDQUFDLGlGQUFTO0FBQ2pDLHVDQUF1QyxtQkFBTyxDQUFDLHdFQUFjO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLCtGQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxVQUFVO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELHdDQUF3QztBQUNqRyxtQ0FBbUMsU0FBUztBQUM1QztBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvcXVhbGl0eS5qcz85M2IxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5xdWFsaXR5ID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuY29uc3QgYmlnbnVtYmVyX2pzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImJpZ251bWJlci5qc1wiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkB4cnBsZi9pc29tb3JwaGljL3V0aWxzXCIpO1xuLyoqXG4gKiBjbGFzcyBmb3IgZW5jb2RpbmcgYW5kIGRlY29kaW5nIHF1YWxpdHlcbiAqL1xuY2xhc3MgcXVhbGl0eSB7XG4gICAgLyoqXG4gICAgICogRW5jb2RlIHF1YWxpdHkgYW1vdW50XG4gICAgICpcbiAgICAgKiBAcGFyYW0gYXJnIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiBhbiBhbW91bnRcbiAgICAgKiBAcmV0dXJucyBTZXJpYWxpemVkIHF1YWxpdHlcbiAgICAgKi9cbiAgICBzdGF0aWMgZW5jb2RlKHF1YWxpdHkpIHtcbiAgICAgICAgY29uc3QgZGVjaW1hbCA9ICgwLCBiaWdudW1iZXJfanNfMS5kZWZhdWx0KShxdWFsaXR5KTtcbiAgICAgICAgY29uc3QgZXhwb25lbnQgPSAoKGRlY2ltYWwgPT09IG51bGwgfHwgZGVjaW1hbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGVjaW1hbC5lKSB8fCAwKSAtIDE1O1xuICAgICAgICBjb25zdCBxdWFsaXR5U3RyaW5nID0gZGVjaW1hbC50aW1lcyhgMWUkey1leHBvbmVudH1gKS5hYnMoKS50b1N0cmluZygpO1xuICAgICAgICBjb25zdCBieXRlcyA9IHR5cGVzXzEuY29yZVR5cGVzLlVJbnQ2NC5mcm9tKEJpZ0ludChxdWFsaXR5U3RyaW5nKSkudG9CeXRlcygpO1xuICAgICAgICBieXRlc1swXSA9IGV4cG9uZW50ICsgMTAwO1xuICAgICAgICByZXR1cm4gYnl0ZXM7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlY29kZSBxdWFsaXR5IGFtb3VudFxuICAgICAqXG4gICAgICogQHBhcmFtIGFyZyBoZXgtc3RyaW5nIGRlbm90aW5nIHNlcmlhbGl6ZWQgcXVhbGl0eVxuICAgICAqIEByZXR1cm5zIGRlc2VyaWFsaXplZCBxdWFsaXR5XG4gICAgICovXG4gICAgc3RhdGljIGRlY29kZShxdWFsaXR5KSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gKDAsIHV0aWxzXzEuaGV4VG9CeXRlcykocXVhbGl0eSkuc2xpY2UoLTgpO1xuICAgICAgICBjb25zdCBleHBvbmVudCA9IGJ5dGVzWzBdIC0gMTAwO1xuICAgICAgICBjb25zdCBtYW50aXNzYSA9IG5ldyBiaWdudW1iZXJfanNfMS5kZWZhdWx0KGAweCR7KDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkoYnl0ZXMuc2xpY2UoMSkpfWApO1xuICAgICAgICByZXR1cm4gbWFudGlzc2EudGltZXMoYDFlJHtleHBvbmVudH1gKTtcbiAgICB9XG59XG5leHBvcnRzLnF1YWxpdHkgPSBxdWFsaXR5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVhbGl0eS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/quality.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinaryParser = void 0;\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * BinaryParser is used to compute fields and values from a HexString\n */\nclass BinaryParser {\n    /**\n     * Initialize bytes to a hex string\n     *\n     * @param hexBytes a hex string\n     * @param definitions Rippled definitions used to parse the values of transaction types and such.\n     *                          Can be customized for sidechains and amendments.\n     */\n    constructor(hexBytes, definitions = enums_1.DEFAULT_DEFINITIONS) {\n        this.bytes = (0, utils_1.hexToBytes)(hexBytes);\n        this.definitions = definitions;\n    }\n    /**\n     * Peek the first byte of the BinaryParser\n     *\n     * @returns The first byte of the BinaryParser\n     */\n    peek() {\n        if (this.bytes.byteLength === 0) {\n            throw new Error();\n        }\n        return this.bytes[0];\n    }\n    /**\n     * Consume the first n bytes of the BinaryParser\n     *\n     * @param n the number of bytes to skip\n     */\n    skip(n) {\n        if (n > this.bytes.byteLength) {\n            throw new Error();\n        }\n        this.bytes = this.bytes.slice(n);\n    }\n    /**\n     * read the first n bytes from the BinaryParser\n     *\n     * @param n The number of bytes to read\n     * @return The bytes\n     */\n    read(n) {\n        if (n > this.bytes.byteLength) {\n            throw new Error();\n        }\n        const slice = this.bytes.slice(0, n);\n        this.skip(n);\n        return slice;\n    }\n    /**\n     * Read an integer of given size\n     *\n     * @param n The number of bytes to read\n     * @return The number represented by those bytes\n     */\n    readUIntN(n) {\n        if (0 >= n || n > 4) {\n            throw new Error('invalid n');\n        }\n        return this.read(n).reduce((a, b) => (a << 8) | b) >>> 0;\n    }\n    readUInt8() {\n        return this.readUIntN(1);\n    }\n    readUInt16() {\n        return this.readUIntN(2);\n    }\n    readUInt32() {\n        return this.readUIntN(4);\n    }\n    size() {\n        return this.bytes.byteLength;\n    }\n    end(customEnd) {\n        const length = this.bytes.byteLength;\n        return length === 0 || (customEnd !== undefined && length <= customEnd);\n    }\n    /**\n     * Reads variable length encoded bytes\n     *\n     * @return The variable length bytes\n     */\n    readVariableLength() {\n        return this.read(this.readVariableLengthLength());\n    }\n    /**\n     * Reads the length of the variable length encoded bytes\n     *\n     * @return The length of the variable length encoded bytes\n     */\n    readVariableLengthLength() {\n        const b1 = this.readUInt8();\n        if (b1 <= 192) {\n            return b1;\n        }\n        else if (b1 <= 240) {\n            const b2 = this.readUInt8();\n            return 193 + (b1 - 193) * 256 + b2;\n        }\n        else if (b1 <= 254) {\n            const b2 = this.readUInt8();\n            const b3 = this.readUInt8();\n            return 12481 + (b1 - 241) * 65536 + b2 * 256 + b3;\n        }\n        throw new Error('Invalid variable length indicator');\n    }\n    /**\n     * Reads the field ordinal from the BinaryParser\n     *\n     * @return Field ordinal\n     */\n    readFieldOrdinal() {\n        let type = this.readUInt8();\n        let nth = type & 15;\n        type >>= 4;\n        if (type === 0) {\n            type = this.readUInt8();\n            if (type === 0 || type < 16) {\n                throw new Error(`Cannot read FieldOrdinal, type_code ${type} out of range`);\n            }\n        }\n        if (nth === 0) {\n            nth = this.readUInt8();\n            if (nth === 0 || nth < 16) {\n                throw new Error(`Cannot read FieldOrdinal, field_code ${nth} out of range`);\n            }\n        }\n        return (type << 16) | nth;\n    }\n    /**\n     * Read the field from the BinaryParser\n     *\n     * @return The field represented by the bytes at the head of the BinaryParser\n     */\n    readField() {\n        return this.definitions.field.fromString(this.readFieldOrdinal().toString());\n    }\n    /**\n     * Read a given type from the BinaryParser\n     *\n     * @param type The type that you want to read from the BinaryParser\n     * @return The instance of that type read from the BinaryParser\n     */\n    readType(type) {\n        return type.fromParser(this);\n    }\n    /**\n     * Get the type associated with a given field\n     *\n     * @param field The field that you wan to get the type of\n     * @return The type associated with the given field\n     */\n    typeForField(field) {\n        return field.associatedType;\n    }\n    /**\n     * Read value of the type specified by field from the BinaryParser\n     *\n     * @param field The field that you want to get the associated value for\n     * @return The value associated with the given field\n     */\n    readFieldValue(field) {\n        const type = this.typeForField(field);\n        if (!type) {\n            throw new Error(`unsupported: (${field.name}, ${field.type.name})`);\n        }\n        const sizeHint = field.isVariableLengthEncoded\n            ? this.readVariableLengthLength()\n            : undefined;\n        const value = type.fromParser(this, sizeHint);\n        if (value === undefined) {\n            throw new Error(`fromParser for (${field.name}, ${field.type.name}) -> undefined `);\n        }\n        return value;\n    }\n    /**\n     * Get the next field and value from the BinaryParser\n     *\n     * @return The field and value\n     */\n    readFieldAndValue() {\n        const field = this.readField();\n        return [field, this.readFieldValue(field)];\n    }\n}\nexports.BinaryParser = BinaryParser;\n//# sourceMappingURL=binary-parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BinarySerializer = exports.BytesList = void 0;\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * Bytes list is a collection of Uint8Array objects\n */\nclass BytesList {\n    constructor() {\n        this.bytesArray = [];\n    }\n    /**\n     * Get the total number of bytes in the BytesList\n     *\n     * @return the number of bytes\n     */\n    getLength() {\n        return (0, utils_1.concat)(this.bytesArray).byteLength;\n    }\n    /**\n     * Put bytes in the BytesList\n     *\n     * @param bytesArg A Uint8Array\n     * @return this BytesList\n     */\n    put(bytesArg) {\n        const bytes = Uint8Array.from(bytesArg); // Temporary, to catch instances of Uint8Array being passed in\n        this.bytesArray.push(bytes);\n        return this;\n    }\n    /**\n     * Write this BytesList to the back of another bytes list\n     *\n     *  @param list The BytesList to write to\n     */\n    toBytesSink(list) {\n        list.put(this.toBytes());\n    }\n    toBytes() {\n        return (0, utils_1.concat)(this.bytesArray);\n    }\n    toHex() {\n        return (0, utils_1.bytesToHex)(this.toBytes());\n    }\n}\nexports.BytesList = BytesList;\n/**\n * BinarySerializer is used to write fields and values to Uint8Arrays\n */\nclass BinarySerializer {\n    constructor(sink) {\n        this.sink = new BytesList();\n        this.sink = sink;\n    }\n    /**\n     * Write a value to this BinarySerializer\n     *\n     * @param value a SerializedType value\n     */\n    write(value) {\n        value.toBytesSink(this.sink);\n    }\n    /**\n     * Write bytes to this BinarySerializer\n     *\n     * @param bytes the bytes to write\n     */\n    put(bytes) {\n        this.sink.put(bytes);\n    }\n    /**\n     * Write a value of a given type to this BinarySerializer\n     *\n     * @param type the type to write\n     * @param value a value of that type\n     */\n    writeType(type, value) {\n        this.write(type.from(value));\n    }\n    /**\n     * Write BytesList to this BinarySerializer\n     *\n     * @param bl BytesList to write to BinarySerializer\n     */\n    writeBytesList(bl) {\n        bl.toBytesSink(this.sink);\n    }\n    /**\n     * Calculate the header of Variable Length encoded bytes\n     *\n     * @param length the length of the bytes\n     */\n    encodeVariableLength(length) {\n        const lenBytes = new Uint8Array(3);\n        if (length <= 192) {\n            lenBytes[0] = length;\n            return lenBytes.slice(0, 1);\n        }\n        else if (length <= 12480) {\n            length -= 193;\n            lenBytes[0] = 193 + (length >>> 8);\n            lenBytes[1] = length & 0xff;\n            return lenBytes.slice(0, 2);\n        }\n        else if (length <= 918744) {\n            length -= 12481;\n            lenBytes[0] = 241 + (length >>> 16);\n            lenBytes[1] = (length >> 8) & 0xff;\n            lenBytes[2] = length & 0xff;\n            return lenBytes.slice(0, 3);\n        }\n        throw new Error('Overflow error');\n    }\n    /**\n     * Write field and value to BinarySerializer\n     *\n     * @param field field to write to BinarySerializer\n     * @param value value to write to BinarySerializer\n     */\n    writeFieldAndValue(field, value, isUnlModifyWorkaround = false) {\n        const associatedValue = field.associatedType.from(value);\n        if (associatedValue.toBytesSink === undefined || field.name === undefined) {\n            throw new Error();\n        }\n        this.sink.put(field.header);\n        if (field.isVariableLengthEncoded) {\n            this.writeLengthEncoded(associatedValue, isUnlModifyWorkaround);\n        }\n        else {\n            associatedValue.toBytesSink(this.sink);\n        }\n    }\n    /**\n     * Write a variable length encoded value to the BinarySerializer\n     *\n     * @param value length encoded value to write to BytesList\n     */\n    writeLengthEncoded(value, isUnlModifyWorkaround = false) {\n        const bytes = new BytesList();\n        if (!isUnlModifyWorkaround) {\n            // this part doesn't happen for the Account field in a UNLModify transaction\n            value.toBytesSink(bytes);\n        }\n        this.put(this.encodeVariableLength(bytes.getLength()));\n        this.writeBytesList(bytes);\n    }\n}\nexports.BinarySerializer = BinarySerializer;\n//# sourceMappingURL=binary-serializer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC9zZXJkZXMvYmluYXJ5LXNlcmlhbGl6ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsaUJBQWlCO0FBQzVDLGdCQUFnQixtQkFBTyxDQUFDLCtGQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3NlcmRlcy9iaW5hcnktc2VyaWFsaXplci5qcz80MzBlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CaW5hcnlTZXJpYWxpemVyID0gZXhwb3J0cy5CeXRlc0xpc3QgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkB4cnBsZi9pc29tb3JwaGljL3V0aWxzXCIpO1xuLyoqXG4gKiBCeXRlcyBsaXN0IGlzIGEgY29sbGVjdGlvbiBvZiBVaW50OEFycmF5IG9iamVjdHNcbiAqL1xuY2xhc3MgQnl0ZXNMaXN0IHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ieXRlc0FycmF5ID0gW107XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgdG90YWwgbnVtYmVyIG9mIGJ5dGVzIGluIHRoZSBCeXRlc0xpc3RcbiAgICAgKlxuICAgICAqIEByZXR1cm4gdGhlIG51bWJlciBvZiBieXRlc1xuICAgICAqL1xuICAgIGdldExlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmNvbmNhdCkodGhpcy5ieXRlc0FycmF5KS5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQdXQgYnl0ZXMgaW4gdGhlIEJ5dGVzTGlzdFxuICAgICAqXG4gICAgICogQHBhcmFtIGJ5dGVzQXJnIEEgVWludDhBcnJheVxuICAgICAqIEByZXR1cm4gdGhpcyBCeXRlc0xpc3RcbiAgICAgKi9cbiAgICBwdXQoYnl0ZXNBcmcpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBVaW50OEFycmF5LmZyb20oYnl0ZXNBcmcpOyAvLyBUZW1wb3JhcnksIHRvIGNhdGNoIGluc3RhbmNlcyBvZiBVaW50OEFycmF5IGJlaW5nIHBhc3NlZCBpblxuICAgICAgICB0aGlzLmJ5dGVzQXJyYXkucHVzaChieXRlcyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSB0aGlzIEJ5dGVzTGlzdCB0byB0aGUgYmFjayBvZiBhbm90aGVyIGJ5dGVzIGxpc3RcbiAgICAgKlxuICAgICAqICBAcGFyYW0gbGlzdCBUaGUgQnl0ZXNMaXN0IHRvIHdyaXRlIHRvXG4gICAgICovXG4gICAgdG9CeXRlc1NpbmsobGlzdCkge1xuICAgICAgICBsaXN0LnB1dCh0aGlzLnRvQnl0ZXMoKSk7XG4gICAgfVxuICAgIHRvQnl0ZXMoKSB7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfMS5jb25jYXQpKHRoaXMuYnl0ZXNBcnJheSk7XG4gICAgfVxuICAgIHRvSGV4KCkge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkodGhpcy50b0J5dGVzKCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuQnl0ZXNMaXN0ID0gQnl0ZXNMaXN0O1xuLyoqXG4gKiBCaW5hcnlTZXJpYWxpemVyIGlzIHVzZWQgdG8gd3JpdGUgZmllbGRzIGFuZCB2YWx1ZXMgdG8gVWludDhBcnJheXNcbiAqL1xuY2xhc3MgQmluYXJ5U2VyaWFsaXplciB7XG4gICAgY29uc3RydWN0b3Ioc2luaykge1xuICAgICAgICB0aGlzLnNpbmsgPSBuZXcgQnl0ZXNMaXN0KCk7XG4gICAgICAgIHRoaXMuc2luayA9IHNpbms7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgdmFsdWUgdG8gdGhpcyBCaW5hcnlTZXJpYWxpemVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgYSBTZXJpYWxpemVkVHlwZSB2YWx1ZVxuICAgICAqL1xuICAgIHdyaXRlKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlLnRvQnl0ZXNTaW5rKHRoaXMuc2luayk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGJ5dGVzIHRvIHRoaXMgQmluYXJ5U2VyaWFsaXplclxuICAgICAqXG4gICAgICogQHBhcmFtIGJ5dGVzIHRoZSBieXRlcyB0byB3cml0ZVxuICAgICAqL1xuICAgIHB1dChieXRlcykge1xuICAgICAgICB0aGlzLnNpbmsucHV0KGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSB2YWx1ZSBvZiBhIGdpdmVuIHR5cGUgdG8gdGhpcyBCaW5hcnlTZXJpYWxpemVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdHlwZSB0aGUgdHlwZSB0byB3cml0ZVxuICAgICAqIEBwYXJhbSB2YWx1ZSBhIHZhbHVlIG9mIHRoYXQgdHlwZVxuICAgICAqL1xuICAgIHdyaXRlVHlwZSh0eXBlLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLndyaXRlKHR5cGUuZnJvbSh2YWx1ZSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBCeXRlc0xpc3QgdG8gdGhpcyBCaW5hcnlTZXJpYWxpemVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gYmwgQnl0ZXNMaXN0IHRvIHdyaXRlIHRvIEJpbmFyeVNlcmlhbGl6ZXJcbiAgICAgKi9cbiAgICB3cml0ZUJ5dGVzTGlzdChibCkge1xuICAgICAgICBibC50b0J5dGVzU2luayh0aGlzLnNpbmspO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxjdWxhdGUgdGhlIGhlYWRlciBvZiBWYXJpYWJsZSBMZW5ndGggZW5jb2RlZCBieXRlc1xuICAgICAqXG4gICAgICogQHBhcmFtIGxlbmd0aCB0aGUgbGVuZ3RoIG9mIHRoZSBieXRlc1xuICAgICAqL1xuICAgIGVuY29kZVZhcmlhYmxlTGVuZ3RoKGxlbmd0aCkge1xuICAgICAgICBjb25zdCBsZW5CeXRlcyA9IG5ldyBVaW50OEFycmF5KDMpO1xuICAgICAgICBpZiAobGVuZ3RoIDw9IDE5Mikge1xuICAgICAgICAgICAgbGVuQnl0ZXNbMF0gPSBsZW5ndGg7XG4gICAgICAgICAgICByZXR1cm4gbGVuQnl0ZXMuc2xpY2UoMCwgMSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobGVuZ3RoIDw9IDEyNDgwKSB7XG4gICAgICAgICAgICBsZW5ndGggLT0gMTkzO1xuICAgICAgICAgICAgbGVuQnl0ZXNbMF0gPSAxOTMgKyAobGVuZ3RoID4+PiA4KTtcbiAgICAgICAgICAgIGxlbkJ5dGVzWzFdID0gbGVuZ3RoICYgMHhmZjtcbiAgICAgICAgICAgIHJldHVybiBsZW5CeXRlcy5zbGljZSgwLCAyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChsZW5ndGggPD0gOTE4NzQ0KSB7XG4gICAgICAgICAgICBsZW5ndGggLT0gMTI0ODE7XG4gICAgICAgICAgICBsZW5CeXRlc1swXSA9IDI0MSArIChsZW5ndGggPj4+IDE2KTtcbiAgICAgICAgICAgIGxlbkJ5dGVzWzFdID0gKGxlbmd0aCA+PiA4KSAmIDB4ZmY7XG4gICAgICAgICAgICBsZW5CeXRlc1syXSA9IGxlbmd0aCAmIDB4ZmY7XG4gICAgICAgICAgICByZXR1cm4gbGVuQnl0ZXMuc2xpY2UoMCwgMyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPdmVyZmxvdyBlcnJvcicpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBmaWVsZCBhbmQgdmFsdWUgdG8gQmluYXJ5U2VyaWFsaXplclxuICAgICAqXG4gICAgICogQHBhcmFtIGZpZWxkIGZpZWxkIHRvIHdyaXRlIHRvIEJpbmFyeVNlcmlhbGl6ZXJcbiAgICAgKiBAcGFyYW0gdmFsdWUgdmFsdWUgdG8gd3JpdGUgdG8gQmluYXJ5U2VyaWFsaXplclxuICAgICAqL1xuICAgIHdyaXRlRmllbGRBbmRWYWx1ZShmaWVsZCwgdmFsdWUsIGlzVW5sTW9kaWZ5V29ya2Fyb3VuZCA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IGFzc29jaWF0ZWRWYWx1ZSA9IGZpZWxkLmFzc29jaWF0ZWRUeXBlLmZyb20odmFsdWUpO1xuICAgICAgICBpZiAoYXNzb2NpYXRlZFZhbHVlLnRvQnl0ZXNTaW5rID09PSB1bmRlZmluZWQgfHwgZmllbGQubmFtZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNpbmsucHV0KGZpZWxkLmhlYWRlcik7XG4gICAgICAgIGlmIChmaWVsZC5pc1ZhcmlhYmxlTGVuZ3RoRW5jb2RlZCkge1xuICAgICAgICAgICAgdGhpcy53cml0ZUxlbmd0aEVuY29kZWQoYXNzb2NpYXRlZFZhbHVlLCBpc1VubE1vZGlmeVdvcmthcm91bmQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYXNzb2NpYXRlZFZhbHVlLnRvQnl0ZXNTaW5rKHRoaXMuc2luayk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSB2YXJpYWJsZSBsZW5ndGggZW5jb2RlZCB2YWx1ZSB0byB0aGUgQmluYXJ5U2VyaWFsaXplclxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIGxlbmd0aCBlbmNvZGVkIHZhbHVlIHRvIHdyaXRlIHRvIEJ5dGVzTGlzdFxuICAgICAqL1xuICAgIHdyaXRlTGVuZ3RoRW5jb2RlZCh2YWx1ZSwgaXNVbmxNb2RpZnlXb3JrYXJvdW5kID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgQnl0ZXNMaXN0KCk7XG4gICAgICAgIGlmICghaXNVbmxNb2RpZnlXb3JrYXJvdW5kKSB7XG4gICAgICAgICAgICAvLyB0aGlzIHBhcnQgZG9lc24ndCBoYXBwZW4gZm9yIHRoZSBBY2NvdW50IGZpZWxkIGluIGEgVU5MTW9kaWZ5IHRyYW5zYWN0aW9uXG4gICAgICAgICAgICB2YWx1ZS50b0J5dGVzU2luayhieXRlcyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wdXQodGhpcy5lbmNvZGVWYXJpYWJsZUxlbmd0aChieXRlcy5nZXRMZW5ndGgoKSkpO1xuICAgICAgICB0aGlzLndyaXRlQnl0ZXNMaXN0KGJ5dGVzKTtcbiAgICB9XG59XG5leHBvcnRzLkJpbmFyeVNlcmlhbGl6ZXIgPSBCaW5hcnlTZXJpYWxpemVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmluYXJ5LXNlcmlhbGl6ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/shamap.js":
/*!*************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/shamap.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ShaMapLeaf = exports.ShaMapNode = exports.ShaMap = void 0;\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\");\nconst hash_prefixes_1 = __webpack_require__(/*! ./hash-prefixes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hash-prefixes.js\");\nconst hashes_1 = __webpack_require__(/*! ./hashes */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/hashes.js\");\n/**\n * Abstract class describing a SHAMapNode\n */\nclass ShaMapNode {\n}\nexports.ShaMapNode = ShaMapNode;\n/**\n * Class describing a Leaf of SHAMap\n */\nclass ShaMapLeaf extends ShaMapNode {\n    constructor(index, item) {\n        super();\n        this.index = index;\n        this.item = item;\n    }\n    /**\n     * @returns true as ShaMapLeaf is a leaf node\n     */\n    isLeaf() {\n        return true;\n    }\n    /**\n     * @returns false as ShaMapLeaf is not an inner node\n     */\n    isInner() {\n        return false;\n    }\n    /**\n     * Get the prefix of the this.item\n     *\n     * @returns The hash prefix, unless this.item is undefined, then it returns an empty Uint8Array\n     */\n    hashPrefix() {\n        return this.item === undefined ? new Uint8Array(0) : this.item.hashPrefix();\n    }\n    /**\n     * Hash the bytes representation of this\n     *\n     * @returns hash of this.item concatenated with this.index\n     */\n    hash() {\n        const hash = hashes_1.Sha512Half.put(this.hashPrefix());\n        this.toBytesSink(hash);\n        return hash.finish();\n    }\n    /**\n     * Write the bytes representation of this to a BytesList\n     * @param list BytesList to write bytes to\n     */\n    toBytesSink(list) {\n        if (this.item !== undefined) {\n            this.item.toBytesSink(list);\n        }\n        this.index.toBytesSink(list);\n    }\n}\nexports.ShaMapLeaf = ShaMapLeaf;\n/**\n * Class defining an Inner Node of a SHAMap\n */\nclass ShaMapInner extends ShaMapNode {\n    constructor(depth = 0) {\n        super();\n        this.depth = depth;\n        this.slotBits = 0;\n        this.branches = Array(16);\n    }\n    /**\n     * @returns true as ShaMapInner is an inner node\n     */\n    isInner() {\n        return true;\n    }\n    /**\n     * @returns false as ShaMapInner is not a leaf node\n     */\n    isLeaf() {\n        return false;\n    }\n    /**\n     * Get the hash prefix for this node\n     *\n     * @returns hash prefix describing an inner node\n     */\n    hashPrefix() {\n        return hash_prefixes_1.HashPrefix.innerNode;\n    }\n    /**\n     * Set a branch of this node to be another node\n     *\n     * @param slot Slot to add branch to this.branches\n     * @param branch Branch to add\n     */\n    setBranch(slot, branch) {\n        this.slotBits = this.slotBits | (1 << slot);\n        this.branches[slot] = branch;\n    }\n    /**\n     * @returns true if node is empty\n     */\n    empty() {\n        return this.slotBits === 0;\n    }\n    /**\n     * Compute the hash of this node\n     *\n     * @returns The hash of this node\n     */\n    hash() {\n        if (this.empty()) {\n            return types_1.coreTypes.Hash256.ZERO_256;\n        }\n        const hash = hashes_1.Sha512Half.put(this.hashPrefix());\n        this.toBytesSink(hash);\n        return hash.finish();\n    }\n    /**\n     * Writes the bytes representation of this node to a BytesList\n     *\n     * @param list BytesList to write bytes to\n     */\n    toBytesSink(list) {\n        for (let i = 0; i < this.branches.length; i++) {\n            const branch = this.branches[i];\n            const hash = branch\n                ? branch.hash()\n                : types_1.coreTypes.Hash256.ZERO_256;\n            hash.toBytesSink(list);\n        }\n    }\n    /**\n     * Add item to the SHAMap\n     *\n     * @param index Hash of the index of the item being inserted\n     * @param item Item to insert in the map\n     * @param leaf Leaf node to insert when branch doesn't exist\n     */\n    addItem(index, item, leaf) {\n        if (index === undefined) {\n            throw new Error();\n        }\n        if (index !== undefined) {\n            const nibble = index.nibblet(this.depth);\n            const existing = this.branches[nibble];\n            if (existing === undefined) {\n                this.setBranch(nibble, leaf || new ShaMapLeaf(index, item));\n            }\n            else if (existing instanceof ShaMapLeaf) {\n                const newInner = new ShaMapInner(this.depth + 1);\n                newInner.addItem(existing.index, undefined, existing);\n                newInner.addItem(index, item, leaf);\n                this.setBranch(nibble, newInner);\n            }\n            else if (existing instanceof ShaMapInner) {\n                existing.addItem(index, item, leaf);\n            }\n            else {\n                throw new Error('invalid ShaMap.addItem call');\n            }\n        }\n    }\n}\nclass ShaMap extends ShaMapInner {\n}\nexports.ShaMap = ShaMap;\n//# sourceMappingURL=shamap.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/shamap.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/account-id.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountID = void 0;\nconst ripple_address_codec_1 = __webpack_require__(/*! ripple-address-codec */ \"(ssr)/../../node_modules/ripple-address-codec/dist/index.js\");\nconst hash_160_1 = __webpack_require__(/*! ./hash-160 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-160.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst HEX_REGEX = /^[A-F0-9]{40}$/;\n/**\n * Class defining how to encode and decode an AccountID\n */\nclass AccountID extends hash_160_1.Hash160 {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : AccountID.defaultAccountID.bytes);\n    }\n    /**\n     * Defines how to construct an AccountID\n     *\n     * @param value either an existing AccountID, a hex-string, or a base58 r-Address\n     * @returns an AccountID object\n     */\n    static from(value) {\n        if (value instanceof AccountID) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            if (value === '') {\n                return new AccountID();\n            }\n            return HEX_REGEX.test(value)\n                ? new AccountID((0, utils_1.hexToBytes)(value))\n                : this.fromBase58(value);\n        }\n        throw new Error('Cannot construct AccountID from value given');\n    }\n    /**\n     * Defines how to build an AccountID from a base58 r-Address\n     *\n     * @param value a base58 r-Address\n     * @returns an AccountID object\n     */\n    static fromBase58(value) {\n        if ((0, ripple_address_codec_1.isValidXAddress)(value)) {\n            const classic = (0, ripple_address_codec_1.xAddressToClassicAddress)(value);\n            if (classic.tag !== false)\n                throw new Error('Only allowed to have tag on Account or Destination');\n            value = classic.classicAddress;\n        }\n        return new AccountID(Uint8Array.from((0, ripple_address_codec_1.decodeAccountID)(value)));\n    }\n    /**\n     * Overload of toJSON\n     *\n     * @returns the base58 string for this AccountID\n     */\n    toJSON() {\n        return this.toBase58();\n    }\n    /**\n     * Defines how to encode AccountID into a base58 address\n     *\n     * @returns the base58 string defined by this.bytes\n     */\n    toBase58() {\n        return (0, ripple_address_codec_1.encodeAccountID)(this.bytes);\n    }\n}\nexports.AccountID = AccountID;\nAccountID.defaultAccountID = new AccountID(new Uint8Array(20));\n//# sourceMappingURL=account-id.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9hY2NvdW50LWlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQiwrQkFBK0IsbUJBQU8sQ0FBQyx5RkFBc0I7QUFDN0QsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkMsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQXlCO0FBQ2pELDZCQUE2QixHQUFHO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2FjY291bnQtaWQuanM/ZmEzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWNjb3VudElEID0gdm9pZCAwO1xuY29uc3QgcmlwcGxlX2FkZHJlc3NfY29kZWNfMSA9IHJlcXVpcmUoXCJyaXBwbGUtYWRkcmVzcy1jb2RlY1wiKTtcbmNvbnN0IGhhc2hfMTYwXzEgPSByZXF1aXJlKFwiLi9oYXNoLTE2MFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG5jb25zdCBIRVhfUkVHRVggPSAvXltBLUYwLTldezQwfSQvO1xuLyoqXG4gKiBDbGFzcyBkZWZpbmluZyBob3cgdG8gZW5jb2RlIGFuZCBkZWNvZGUgYW4gQWNjb3VudElEXG4gKi9cbmNsYXNzIEFjY291bnRJRCBleHRlbmRzIGhhc2hfMTYwXzEuSGFzaDE2MCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogQWNjb3VudElELmRlZmF1bHRBY2NvdW50SUQuYnl0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGhvdyB0byBjb25zdHJ1Y3QgYW4gQWNjb3VudElEXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgZWl0aGVyIGFuIGV4aXN0aW5nIEFjY291bnRJRCwgYSBoZXgtc3RyaW5nLCBvciBhIGJhc2U1OCByLUFkZHJlc3NcbiAgICAgKiBAcmV0dXJucyBhbiBBY2NvdW50SUQgb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjb3VudElEKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gJycpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEFjY291bnRJRCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIEhFWF9SRUdFWC50ZXN0KHZhbHVlKVxuICAgICAgICAgICAgICAgID8gbmV3IEFjY291bnRJRCgoMCwgdXRpbHNfMS5oZXhUb0J5dGVzKSh2YWx1ZSkpXG4gICAgICAgICAgICAgICAgOiB0aGlzLmZyb21CYXNlNTgodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBBY2NvdW50SUQgZnJvbSB2YWx1ZSBnaXZlbicpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWZpbmVzIGhvdyB0byBidWlsZCBhbiBBY2NvdW50SUQgZnJvbSBhIGJhc2U1OCByLUFkZHJlc3NcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBhIGJhc2U1OCByLUFkZHJlc3NcbiAgICAgKiBAcmV0dXJucyBhbiBBY2NvdW50SUQgb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb21CYXNlNTgodmFsdWUpIHtcbiAgICAgICAgaWYgKCgwLCByaXBwbGVfYWRkcmVzc19jb2RlY18xLmlzVmFsaWRYQWRkcmVzcykodmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCBjbGFzc2ljID0gKDAsIHJpcHBsZV9hZGRyZXNzX2NvZGVjXzEueEFkZHJlc3NUb0NsYXNzaWNBZGRyZXNzKSh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoY2xhc3NpYy50YWcgIT09IGZhbHNlKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignT25seSBhbGxvd2VkIHRvIGhhdmUgdGFnIG9uIEFjY291bnQgb3IgRGVzdGluYXRpb24nKTtcbiAgICAgICAgICAgIHZhbHVlID0gY2xhc3NpYy5jbGFzc2ljQWRkcmVzcztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEFjY291bnRJRChVaW50OEFycmF5LmZyb20oKDAsIHJpcHBsZV9hZGRyZXNzX2NvZGVjXzEuZGVjb2RlQWNjb3VudElEKSh2YWx1ZSkpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcmxvYWQgb2YgdG9KU09OXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgYmFzZTU4IHN0cmluZyBmb3IgdGhpcyBBY2NvdW50SURcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvQmFzZTU4KCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlZmluZXMgaG93IHRvIGVuY29kZSBBY2NvdW50SUQgaW50byBhIGJhc2U1OCBhZGRyZXNzXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgYmFzZTU4IHN0cmluZyBkZWZpbmVkIGJ5IHRoaXMuYnl0ZXNcbiAgICAgKi9cbiAgICB0b0Jhc2U1OCgpIHtcbiAgICAgICAgcmV0dXJuICgwLCByaXBwbGVfYWRkcmVzc19jb2RlY18xLmVuY29kZUFjY291bnRJRCkodGhpcy5ieXRlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5BY2NvdW50SUQgPSBBY2NvdW50SUQ7XG5BY2NvdW50SUQuZGVmYXVsdEFjY291bnRJRCA9IG5ldyBBY2NvdW50SUQobmV3IFVpbnQ4QXJyYXkoMjApKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFjY291bnQtaWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/amount.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/amount.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Amount = void 0;\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/currency.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst bignumber_js_1 = __importDefault(__webpack_require__(/*! bignumber.js */ \"(ssr)/../../node_modules/bignumber.js/bignumber.js\"));\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\nconst hash_192_1 = __webpack_require__(/*! ./hash-192 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-192.js\");\n/**\n * Constants for validating amounts\n */\nconst MIN_IOU_EXPONENT = -96;\nconst MAX_IOU_EXPONENT = 80;\nconst MAX_IOU_PRECISION = 16;\nconst MAX_DROPS = new bignumber_js_1.default('1e17');\nconst MIN_XRP = new bignumber_js_1.default('1e-6');\nconst mask = BigInt(0x00000000ffffffff);\nconst mptMask = BigInt(0x8000000000000000);\n/**\n * BigNumber configuration for Amount IOUs\n */\nbignumber_js_1.default.config({\n    EXPONENTIAL_AT: [\n        MIN_IOU_EXPONENT - MAX_IOU_PRECISION,\n        MAX_IOU_EXPONENT + MAX_IOU_PRECISION,\n    ],\n});\n/**\n * Type guard for AmountObjectIOU\n */\nfunction isAmountObjectIOU(arg) {\n    const keys = Object.keys(arg).sort();\n    return (keys.length === 3 &&\n        keys[0] === 'currency' &&\n        keys[1] === 'issuer' &&\n        keys[2] === 'value');\n}\n/**\n * Type guard for AmountObjectMPT\n */\nfunction isAmountObjectMPT(arg) {\n    const keys = Object.keys(arg).sort();\n    return (keys.length === 2 && keys[0] === 'mpt_issuance_id' && keys[1] === 'value');\n}\n/**\n * Class for serializing/Deserializing Amounts\n */\nclass Amount extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : Amount.defaultAmount.bytes);\n    }\n    /**\n     * Construct an amount from an IOU, MPT or string amount\n     *\n     * @param value An Amount, object representing an IOU, or a string\n     *     representing an integer amount\n     * @returns An Amount object\n     */\n    static from(value) {\n        if (value instanceof Amount) {\n            return value;\n        }\n        let amount = new Uint8Array(8);\n        if (typeof value === 'string') {\n            Amount.assertXrpIsValid(value);\n            const number = BigInt(value);\n            const intBuf = [new Uint8Array(4), new Uint8Array(4)];\n            (0, utils_2.writeUInt32BE)(intBuf[0], Number(number >> BigInt(32)), 0);\n            (0, utils_2.writeUInt32BE)(intBuf[1], Number(number & BigInt(mask)), 0);\n            amount = (0, utils_1.concat)(intBuf);\n            amount[0] |= 0x40;\n            return new Amount(amount);\n        }\n        if (isAmountObjectIOU(value)) {\n            const number = new bignumber_js_1.default(value.value);\n            Amount.assertIouIsValid(number);\n            if (number.isZero()) {\n                amount[0] |= 0x80;\n            }\n            else {\n                const integerNumberString = number\n                    .times(`1e${-((number.e || 0) - 15)}`)\n                    .abs()\n                    .toString();\n                const num = BigInt(integerNumberString);\n                const intBuf = [new Uint8Array(4), new Uint8Array(4)];\n                (0, utils_2.writeUInt32BE)(intBuf[0], Number(num >> BigInt(32)), 0);\n                (0, utils_2.writeUInt32BE)(intBuf[1], Number(num & BigInt(mask)), 0);\n                amount = (0, utils_1.concat)(intBuf);\n                amount[0] |= 0x80;\n                if (number.gt(new bignumber_js_1.default(0))) {\n                    amount[0] |= 0x40;\n                }\n                const exponent = (number.e || 0) - 15;\n                const exponentByte = 97 + exponent;\n                amount[0] |= exponentByte >>> 2;\n                amount[1] |= (exponentByte & 0x03) << 6;\n            }\n            const currency = currency_1.Currency.from(value.currency).toBytes();\n            const issuer = account_id_1.AccountID.from(value.issuer).toBytes();\n            return new Amount((0, utils_1.concat)([amount, currency, issuer]));\n        }\n        if (isAmountObjectMPT(value)) {\n            Amount.assertMptIsValid(value.value);\n            let leadingByte = new Uint8Array(1);\n            leadingByte[0] |= 0x60;\n            const num = BigInt(value.value);\n            const intBuf = [new Uint8Array(4), new Uint8Array(4)];\n            (0, utils_2.writeUInt32BE)(intBuf[0], Number(num >> BigInt(32)), 0);\n            (0, utils_2.writeUInt32BE)(intBuf[1], Number(num & BigInt(mask)), 0);\n            amount = (0, utils_1.concat)(intBuf);\n            const mptIssuanceID = hash_192_1.Hash192.from(value.mpt_issuance_id).toBytes();\n            return new Amount((0, utils_1.concat)([leadingByte, amount, mptIssuanceID]));\n        }\n        throw new Error('Invalid type to construct an Amount');\n    }\n    /**\n     * Read an amount from a BinaryParser\n     *\n     * @param parser BinaryParser to read the Amount from\n     * @returns An Amount object\n     */\n    static fromParser(parser) {\n        const isIOU = parser.peek() & 0x80;\n        if (isIOU)\n            return new Amount(parser.read(48));\n        // the amount can be either MPT or XRP at this point\n        const isMPT = parser.peek() & 0x20;\n        const numBytes = isMPT ? 33 : 8;\n        return new Amount(parser.read(numBytes));\n    }\n    /**\n     * Get the JSON representation of this Amount\n     *\n     * @returns the JSON interpretation of this.bytes\n     */\n    toJSON() {\n        if (this.isNative()) {\n            const bytes = this.bytes;\n            const isPositive = bytes[0] & 0x40;\n            const sign = isPositive ? '' : '-';\n            bytes[0] &= 0x3f;\n            const msb = BigInt((0, utils_2.readUInt32BE)(bytes.slice(0, 4), 0));\n            const lsb = BigInt((0, utils_2.readUInt32BE)(bytes.slice(4), 0));\n            const num = (msb << BigInt(32)) | lsb;\n            return `${sign}${num.toString()}`;\n        }\n        if (this.isIOU()) {\n            const parser = new binary_parser_1.BinaryParser(this.toString());\n            const mantissa = parser.read(8);\n            const currency = currency_1.Currency.fromParser(parser);\n            const issuer = account_id_1.AccountID.fromParser(parser);\n            const b1 = mantissa[0];\n            const b2 = mantissa[1];\n            const isPositive = b1 & 0x40;\n            const sign = isPositive ? '' : '-';\n            const exponent = ((b1 & 0x3f) << 2) + ((b2 & 0xff) >> 6) - 97;\n            mantissa[0] = 0;\n            mantissa[1] &= 0x3f;\n            const value = new bignumber_js_1.default(`${sign}0x${(0, utils_1.bytesToHex)(mantissa)}`).times(`1e${exponent}`);\n            Amount.assertIouIsValid(value);\n            return {\n                value: value.toString(),\n                currency: currency.toJSON(),\n                issuer: issuer.toJSON(),\n            };\n        }\n        if (this.isMPT()) {\n            const parser = new binary_parser_1.BinaryParser(this.toString());\n            const leadingByte = parser.read(1);\n            const amount = parser.read(8);\n            const mptID = hash_192_1.Hash192.fromParser(parser);\n            const isPositive = leadingByte[0] & 0x40;\n            const sign = isPositive ? '' : '-';\n            const msb = BigInt((0, utils_2.readUInt32BE)(amount.slice(0, 4), 0));\n            const lsb = BigInt((0, utils_2.readUInt32BE)(amount.slice(4), 0));\n            const num = (msb << BigInt(32)) | lsb;\n            return {\n                value: `${sign}${num.toString()}`,\n                mpt_issuance_id: mptID.toString(),\n            };\n        }\n        throw new Error('Invalid amount to construct JSON');\n    }\n    /**\n     * Validate XRP amount\n     *\n     * @param amount String representing XRP amount\n     * @returns void, but will throw if invalid amount\n     */\n    static assertXrpIsValid(amount) {\n        if (amount.indexOf('.') !== -1) {\n            throw new Error(`${amount.toString()} is an illegal amount`);\n        }\n        const decimal = new bignumber_js_1.default(amount);\n        if (!decimal.isZero()) {\n            if (decimal.lt(MIN_XRP) || decimal.gt(MAX_DROPS)) {\n                throw new Error(`${amount.toString()} is an illegal amount`);\n            }\n        }\n    }\n    /**\n     * Validate IOU.value amount\n     *\n     * @param decimal BigNumber object representing IOU.value\n     * @returns void, but will throw if invalid amount\n     */\n    static assertIouIsValid(decimal) {\n        if (!decimal.isZero()) {\n            const p = decimal.precision();\n            const e = (decimal.e || 0) - 15;\n            if (p > MAX_IOU_PRECISION ||\n                e > MAX_IOU_EXPONENT ||\n                e < MIN_IOU_EXPONENT) {\n                throw new Error('Decimal precision out of range');\n            }\n            this.verifyNoDecimal(decimal);\n        }\n    }\n    /**\n     * Validate MPT.value amount\n     *\n     * @param decimal BigNumber object representing MPT.value\n     * @returns void, but will throw if invalid amount\n     */\n    static assertMptIsValid(amount) {\n        if (amount.indexOf('.') !== -1) {\n            throw new Error(`${amount.toString()} is an illegal amount`);\n        }\n        const decimal = new bignumber_js_1.default(amount);\n        if (!decimal.isZero()) {\n            if (decimal < (0, bignumber_js_1.default)(0)) {\n                throw new Error(`${amount.toString()} is an illegal amount`);\n            }\n            if (Number(BigInt(amount) & BigInt(mptMask)) != 0) {\n                throw new Error(`${amount.toString()} is an illegal amount`);\n            }\n        }\n    }\n    /**\n     * Ensure that the value after being multiplied by the exponent does not\n     * contain a decimal.\n     *\n     * @param decimal a Decimal object\n     * @returns a string of the object without a decimal\n     */\n    static verifyNoDecimal(decimal) {\n        const integerNumberString = decimal\n            .times(`1e${-((decimal.e || 0) - 15)}`)\n            .abs()\n            .toString();\n        if (integerNumberString.indexOf('.') !== -1) {\n            throw new Error('Decimal place found in integerNumberString');\n        }\n    }\n    /**\n     * Test if this amount is in units of Native Currency(XRP)\n     *\n     * @returns true if Native (XRP)\n     */\n    isNative() {\n        return (this.bytes[0] & 0x80) === 0 && (this.bytes[0] & 0x20) === 0;\n    }\n    /**\n     * Test if this amount is in units of MPT\n     *\n     * @returns true if MPT\n     */\n    isMPT() {\n        return (this.bytes[0] & 0x80) === 0 && (this.bytes[0] & 0x20) !== 0;\n    }\n    /**\n     * Test if this amount is in units of IOU\n     *\n     * @returns true if IOU\n     */\n    isIOU() {\n        return (this.bytes[0] & 0x80) !== 0;\n    }\n}\nexports.Amount = Amount;\nAmount.defaultAmount = new Amount((0, utils_1.hexToBytes)('4000000000000000'));\n//# sourceMappingURL=amount.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/amount.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/blob.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/blob.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Blob = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * Variable length encoded type\n */\nclass Blob extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes);\n    }\n    /**\n     * Defines how to read a Blob from a BinaryParser\n     *\n     * @param parser The binary parser to read the Blob from\n     * @param hint The length of the blob, computed by readVariableLengthLength() and passed in\n     * @returns A Blob object\n     */\n    static fromParser(parser, hint) {\n        return new Blob(parser.read(hint));\n    }\n    /**\n     * Create a Blob object from a hex-string\n     *\n     * @param value existing Blob object or a hex-string\n     * @returns A Blob object\n     */\n    static from(value) {\n        if (value instanceof Blob) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            if (!/^[A-F0-9]*$/iu.test(value)) {\n                throw new Error('Cannot construct Blob from a non-hex string');\n            }\n            return new Blob((0, utils_1.hexToBytes)(value));\n        }\n        throw new Error('Cannot construct Blob from value given');\n    }\n}\nexports.Blob = Blob;\n//# sourceMappingURL=blob.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9ibG9iLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWiwwQkFBMEIsbUJBQU8sQ0FBQyxxR0FBbUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQXlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2Jsb2IuanM/ZDY5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQmxvYiA9IHZvaWQgMDtcbmNvbnN0IHNlcmlhbGl6ZWRfdHlwZV8xID0gcmVxdWlyZShcIi4vc2VyaWFsaXplZC10eXBlXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAeHJwbGYvaXNvbW9ycGhpYy91dGlsc1wiKTtcbi8qKlxuICogVmFyaWFibGUgbGVuZ3RoIGVuY29kZWQgdHlwZVxuICovXG5jbGFzcyBCbG9iIGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVmaW5lcyBob3cgdG8gcmVhZCBhIEJsb2IgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBUaGUgYmluYXJ5IHBhcnNlciB0byByZWFkIHRoZSBCbG9iIGZyb21cbiAgICAgKiBAcGFyYW0gaGludCBUaGUgbGVuZ3RoIG9mIHRoZSBibG9iLCBjb21wdXRlZCBieSByZWFkVmFyaWFibGVMZW5ndGhMZW5ndGgoKSBhbmQgcGFzc2VkIGluXG4gICAgICogQHJldHVybnMgQSBCbG9iIG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlciwgaGludCkge1xuICAgICAgICByZXR1cm4gbmV3IEJsb2IocGFyc2VyLnJlYWQoaGludCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBCbG9iIG9iamVjdCBmcm9tIGEgaGV4LXN0cmluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIGV4aXN0aW5nIEJsb2Igb2JqZWN0IG9yIGEgaGV4LXN0cmluZ1xuICAgICAqIEByZXR1cm5zIEEgQmxvYiBvYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBCbG9iKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGlmICghL15bQS1GMC05XSokL2l1LnRlc3QodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29uc3RydWN0IEJsb2IgZnJvbSBhIG5vbi1oZXggc3RyaW5nJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbmV3IEJsb2IoKDAsIHV0aWxzXzEuaGV4VG9CeXRlcykodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgQmxvYiBmcm9tIHZhbHVlIGdpdmVuJyk7XG4gICAgfVxufVxuZXhwb3J0cy5CbG9iID0gQmxvYjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJsb2IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/blob.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/currency.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/currency.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Currency = void 0;\nconst hash_160_1 = __webpack_require__(/*! ./hash-160 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-160.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst XRP_HEX_REGEX = /^0{40}$/;\nconst ISO_REGEX = /^[A-Z0-9a-z?!@#$%^&*(){}[\\]|]{3}$/;\nconst HEX_REGEX = /^[A-F0-9]{40}$/;\n// eslint-disable-next-line no-control-regex\nconst STANDARD_FORMAT_HEX_REGEX = /^0{24}[\\x00-\\x7F]{6}0{10}$/;\n/**\n * Convert an ISO code to a currency bytes representation\n */\nfunction isoToBytes(iso) {\n    const bytes = new Uint8Array(20);\n    if (iso !== 'XRP') {\n        const isoBytes = iso.split('').map((c) => c.charCodeAt(0));\n        bytes.set(isoBytes, 12);\n    }\n    return bytes;\n}\n/**\n * Tests if ISO is a valid iso code\n */\nfunction isIsoCode(iso) {\n    return ISO_REGEX.test(iso);\n}\nfunction isoCodeFromHex(code) {\n    const iso = (0, utils_1.hexToString)((0, utils_1.bytesToHex)(code));\n    if (iso === 'XRP') {\n        return null;\n    }\n    if (isIsoCode(iso)) {\n        return iso;\n    }\n    return null;\n}\n/**\n * Tests if hex is a valid hex-string\n */\nfunction isHex(hex) {\n    return HEX_REGEX.test(hex);\n}\n/**\n * Tests if a string is a valid representation of a currency\n */\nfunction isStringRepresentation(input) {\n    return input.length === 3 || isHex(input);\n}\n/**\n * Tests if a Uint8Array is a valid representation of a currency\n */\nfunction isBytesArray(bytes) {\n    return bytes.byteLength === 20;\n}\n/**\n * Ensures that a value is a valid representation of a currency\n */\nfunction isValidRepresentation(input) {\n    return input instanceof Uint8Array\n        ? isBytesArray(input)\n        : isStringRepresentation(input);\n}\n/**\n * Generate bytes from a string or UInt8Array representation of a currency\n */\nfunction bytesFromRepresentation(input) {\n    if (!isValidRepresentation(input)) {\n        throw new Error(`Unsupported Currency representation: ${input}`);\n    }\n    return input.length === 3 ? isoToBytes(input) : (0, utils_1.hexToBytes)(input);\n}\n/**\n * Class defining how to encode and decode Currencies\n */\nclass Currency extends hash_160_1.Hash160 {\n    constructor(byteBuf) {\n        super(byteBuf !== null && byteBuf !== void 0 ? byteBuf : Currency.XRP.bytes);\n        const hex = (0, utils_1.bytesToHex)(this.bytes);\n        if (XRP_HEX_REGEX.test(hex)) {\n            this._iso = 'XRP';\n        }\n        else if (STANDARD_FORMAT_HEX_REGEX.test(hex)) {\n            this._iso = isoCodeFromHex(this.bytes.slice(12, 15));\n        }\n        else {\n            this._iso = null;\n        }\n    }\n    /**\n     * Return the ISO code of this currency\n     *\n     * @returns ISO code if it exists, else null\n     */\n    iso() {\n        return this._iso;\n    }\n    /**\n     * Constructs a Currency object\n     *\n     * @param val Currency object or a string representation of a currency\n     */\n    static from(value) {\n        if (value instanceof Currency) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            return new Currency(bytesFromRepresentation(value));\n        }\n        throw new Error('Cannot construct Currency from value given');\n    }\n    /**\n     * Gets the JSON representation of a currency\n     *\n     * @returns JSON representation\n     */\n    toJSON() {\n        const iso = this.iso();\n        if (iso !== null) {\n            return iso;\n        }\n        return (0, utils_1.bytesToHex)(this.bytes);\n    }\n}\nexports.Currency = Currency;\nCurrency.XRP = new Currency(new Uint8Array(20));\n//# sourceMappingURL=currency.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9jdXJyZW5jeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkMsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQXlCO0FBQ2pELDBCQUEwQixHQUFHO0FBQzdCLDJDQUEyQyxNQUFNLEVBQUU7QUFDbkQsNkJBQTZCLEdBQUc7QUFDaEM7QUFDQSxzQ0FBc0MsR0FBRyxZQUFZLEVBQUUsRUFBRSxHQUFHO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLE1BQU07QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2N1cnJlbmN5LmpzP2M4NDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkN1cnJlbmN5ID0gdm9pZCAwO1xuY29uc3QgaGFzaF8xNjBfMSA9IHJlcXVpcmUoXCIuL2hhc2gtMTYwXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAeHJwbGYvaXNvbW9ycGhpYy91dGlsc1wiKTtcbmNvbnN0IFhSUF9IRVhfUkVHRVggPSAvXjB7NDB9JC87XG5jb25zdCBJU09fUkVHRVggPSAvXltBLVowLTlhLXo/IUAjJCVeJiooKXt9W1xcXXxdezN9JC87XG5jb25zdCBIRVhfUkVHRVggPSAvXltBLUYwLTldezQwfSQvO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRyb2wtcmVnZXhcbmNvbnN0IFNUQU5EQVJEX0ZPUk1BVF9IRVhfUkVHRVggPSAvXjB7MjR9W1xceDAwLVxceDdGXXs2fTB7MTB9JC87XG4vKipcbiAqIENvbnZlcnQgYW4gSVNPIGNvZGUgdG8gYSBjdXJyZW5jeSBieXRlcyByZXByZXNlbnRhdGlvblxuICovXG5mdW5jdGlvbiBpc29Ub0J5dGVzKGlzbykge1xuICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoMjApO1xuICAgIGlmIChpc28gIT09ICdYUlAnKSB7XG4gICAgICAgIGNvbnN0IGlzb0J5dGVzID0gaXNvLnNwbGl0KCcnKS5tYXAoKGMpID0+IGMuY2hhckNvZGVBdCgwKSk7XG4gICAgICAgIGJ5dGVzLnNldChpc29CeXRlcywgMTIpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG59XG4vKipcbiAqIFRlc3RzIGlmIElTTyBpcyBhIHZhbGlkIGlzbyBjb2RlXG4gKi9cbmZ1bmN0aW9uIGlzSXNvQ29kZShpc28pIHtcbiAgICByZXR1cm4gSVNPX1JFR0VYLnRlc3QoaXNvKTtcbn1cbmZ1bmN0aW9uIGlzb0NvZGVGcm9tSGV4KGNvZGUpIHtcbiAgICBjb25zdCBpc28gPSAoMCwgdXRpbHNfMS5oZXhUb1N0cmluZykoKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkoY29kZSkpO1xuICAgIGlmIChpc28gPT09ICdYUlAnKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBpZiAoaXNJc29Db2RlKGlzbykpIHtcbiAgICAgICAgcmV0dXJuIGlzbztcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG4vKipcbiAqIFRlc3RzIGlmIGhleCBpcyBhIHZhbGlkIGhleC1zdHJpbmdcbiAqL1xuZnVuY3Rpb24gaXNIZXgoaGV4KSB7XG4gICAgcmV0dXJuIEhFWF9SRUdFWC50ZXN0KGhleCk7XG59XG4vKipcbiAqIFRlc3RzIGlmIGEgc3RyaW5nIGlzIGEgdmFsaWQgcmVwcmVzZW50YXRpb24gb2YgYSBjdXJyZW5jeVxuICovXG5mdW5jdGlvbiBpc1N0cmluZ1JlcHJlc2VudGF0aW9uKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0Lmxlbmd0aCA9PT0gMyB8fCBpc0hleChpbnB1dCk7XG59XG4vKipcbiAqIFRlc3RzIGlmIGEgVWludDhBcnJheSBpcyBhIHZhbGlkIHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAqL1xuZnVuY3Rpb24gaXNCeXRlc0FycmF5KGJ5dGVzKSB7XG4gICAgcmV0dXJuIGJ5dGVzLmJ5dGVMZW5ndGggPT09IDIwO1xufVxuLyoqXG4gKiBFbnN1cmVzIHRoYXQgYSB2YWx1ZSBpcyBhIHZhbGlkIHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAqL1xuZnVuY3Rpb24gaXNWYWxpZFJlcHJlc2VudGF0aW9uKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheVxuICAgICAgICA/IGlzQnl0ZXNBcnJheShpbnB1dClcbiAgICAgICAgOiBpc1N0cmluZ1JlcHJlc2VudGF0aW9uKGlucHV0KTtcbn1cbi8qKlxuICogR2VuZXJhdGUgYnl0ZXMgZnJvbSBhIHN0cmluZyBvciBVSW50OEFycmF5IHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAqL1xuZnVuY3Rpb24gYnl0ZXNGcm9tUmVwcmVzZW50YXRpb24oaW5wdXQpIHtcbiAgICBpZiAoIWlzVmFsaWRSZXByZXNlbnRhdGlvbihpbnB1dCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBDdXJyZW5jeSByZXByZXNlbnRhdGlvbjogJHtpbnB1dH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGlucHV0Lmxlbmd0aCA9PT0gMyA/IGlzb1RvQnl0ZXMoaW5wdXQpIDogKDAsIHV0aWxzXzEuaGV4VG9CeXRlcykoaW5wdXQpO1xufVxuLyoqXG4gKiBDbGFzcyBkZWZpbmluZyBob3cgdG8gZW5jb2RlIGFuZCBkZWNvZGUgQ3VycmVuY2llc1xuICovXG5jbGFzcyBDdXJyZW5jeSBleHRlbmRzIGhhc2hfMTYwXzEuSGFzaDE2MCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZUJ1Zikge1xuICAgICAgICBzdXBlcihieXRlQnVmICE9PSBudWxsICYmIGJ5dGVCdWYgIT09IHZvaWQgMCA/IGJ5dGVCdWYgOiBDdXJyZW5jeS5YUlAuYnl0ZXMpO1xuICAgICAgICBjb25zdCBoZXggPSAoMCwgdXRpbHNfMS5ieXRlc1RvSGV4KSh0aGlzLmJ5dGVzKTtcbiAgICAgICAgaWYgKFhSUF9IRVhfUkVHRVgudGVzdChoZXgpKSB7XG4gICAgICAgICAgICB0aGlzLl9pc28gPSAnWFJQJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChTVEFOREFSRF9GT1JNQVRfSEVYX1JFR0VYLnRlc3QoaGV4KSkge1xuICAgICAgICAgICAgdGhpcy5faXNvID0gaXNvQ29kZUZyb21IZXgodGhpcy5ieXRlcy5zbGljZSgxMiwgMTUpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX2lzbyA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIHRoZSBJU08gY29kZSBvZiB0aGlzIGN1cnJlbmN5XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBJU08gY29kZSBpZiBpdCBleGlzdHMsIGVsc2UgbnVsbFxuICAgICAqL1xuICAgIGlzbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzbztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0cyBhIEN1cnJlbmN5IG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbCBDdXJyZW5jeSBvYmplY3Qgb3IgYSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgYSBjdXJyZW5jeVxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEN1cnJlbmN5KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQ3VycmVuY3koYnl0ZXNGcm9tUmVwcmVzZW50YXRpb24odmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgQ3VycmVuY3kgZnJvbSB2YWx1ZSBnaXZlbicpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgY3VycmVuY3lcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEpTT04gcmVwcmVzZW50YXRpb25cbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IGlzbyA9IHRoaXMuaXNvKCk7XG4gICAgICAgIGlmIChpc28gIT09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBpc287XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHRoaXMuYnl0ZXMpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ3VycmVuY3kgPSBDdXJyZW5jeTtcbkN1cnJlbmN5LlhSUCA9IG5ldyBDdXJyZW5jeShuZXcgVWludDhBcnJheSgyMCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3VycmVuY3kuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/currency.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-128.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/hash-128.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash128 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * Hash with a width of 128 bits\n */\nclass Hash128 extends hash_1.Hash {\n    constructor(bytes) {\n        if (bytes && bytes.byteLength === 0) {\n            bytes = Hash128.ZERO_128.bytes;\n        }\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash128.ZERO_128.bytes);\n    }\n    /**\n     * Get the hex representation of a hash-128 bytes, allowing unset\n     *\n     * @returns hex String of this.bytes\n     */\n    toHex() {\n        const hex = (0, utils_1.bytesToHex)(this.toBytes());\n        if (/^0+$/.exec(hex)) {\n            return '';\n        }\n        return hex;\n    }\n}\nexports.Hash128 = Hash128;\nHash128.width = 16;\nHash128.ZERO_128 = new Hash128(new Uint8Array(Hash128.width));\n//# sourceMappingURL=hash-128.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTEyOC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZUFBZSxtQkFBTyxDQUFDLCtFQUFRO0FBQy9CLGdCQUFnQixtQkFBTyxDQUFDLCtGQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL2hhc2gtMTI4LmpzPzNkMmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkhhc2gxMjggPSB2b2lkIDA7XG5jb25zdCBoYXNoXzEgPSByZXF1aXJlKFwiLi9oYXNoXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAeHJwbGYvaXNvbW9ycGhpYy91dGlsc1wiKTtcbi8qKlxuICogSGFzaCB3aXRoIGEgd2lkdGggb2YgMTI4IGJpdHNcbiAqL1xuY2xhc3MgSGFzaDEyOCBleHRlbmRzIGhhc2hfMS5IYXNoIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBpZiAoYnl0ZXMgJiYgYnl0ZXMuYnl0ZUxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgYnl0ZXMgPSBIYXNoMTI4LlpFUk9fMTI4LmJ5dGVzO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKGJ5dGVzICE9PSBudWxsICYmIGJ5dGVzICE9PSB2b2lkIDAgPyBieXRlcyA6IEhhc2gxMjguWkVST18xMjguYnl0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGhleCByZXByZXNlbnRhdGlvbiBvZiBhIGhhc2gtMTI4IGJ5dGVzLCBhbGxvd2luZyB1bnNldFxuICAgICAqXG4gICAgICogQHJldHVybnMgaGV4IFN0cmluZyBvZiB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdG9IZXgoKSB7XG4gICAgICAgIGNvbnN0IGhleCA9ICgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHRoaXMudG9CeXRlcygpKTtcbiAgICAgICAgaWYgKC9eMCskLy5leGVjKGhleCkpIHtcbiAgICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGV4O1xuICAgIH1cbn1cbmV4cG9ydHMuSGFzaDEyOCA9IEhhc2gxMjg7XG5IYXNoMTI4LndpZHRoID0gMTY7XG5IYXNoMTI4LlpFUk9fMTI4ID0gbmV3IEhhc2gxMjgobmV3IFVpbnQ4QXJyYXkoSGFzaDEyOC53aWR0aCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaC0xMjguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-128.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-160.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/hash-160.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash160 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash.js\");\n/**\n * Hash with a width of 160 bits\n */\nclass Hash160 extends hash_1.Hash {\n    constructor(bytes) {\n        if (bytes && bytes.byteLength === 0) {\n            bytes = Hash160.ZERO_160.bytes;\n        }\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash160.ZERO_160.bytes);\n    }\n}\nexports.Hash160 = Hash160;\nHash160.width = 20;\nHash160.ZERO_160 = new Hash160(new Uint8Array(Hash160.width));\n//# sourceMappingURL=hash-160.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTE2MC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZUFBZSxtQkFBTyxDQUFDLCtFQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvaGFzaC0xNjAuanM/YmZmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFzaDE2MCA9IHZvaWQgMDtcbmNvbnN0IGhhc2hfMSA9IHJlcXVpcmUoXCIuL2hhc2hcIik7XG4vKipcbiAqIEhhc2ggd2l0aCBhIHdpZHRoIG9mIDE2MCBiaXRzXG4gKi9cbmNsYXNzIEhhc2gxNjAgZXh0ZW5kcyBoYXNoXzEuSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgaWYgKGJ5dGVzICYmIGJ5dGVzLmJ5dGVMZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGJ5dGVzID0gSGFzaDE2MC5aRVJPXzE2MC5ieXRlcztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBIYXNoMTYwLlpFUk9fMTYwLmJ5dGVzKTtcbiAgICB9XG59XG5leHBvcnRzLkhhc2gxNjAgPSBIYXNoMTYwO1xuSGFzaDE2MC53aWR0aCA9IDIwO1xuSGFzaDE2MC5aRVJPXzE2MCA9IG5ldyBIYXNoMTYwKG5ldyBVaW50OEFycmF5KEhhc2gxNjAud2lkdGgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2gtMTYwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-160.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-192.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/hash-192.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash192 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash.js\");\n/**\n * Hash with a width of 192 bits\n */\nclass Hash192 extends hash_1.Hash {\n    constructor(bytes) {\n        if (bytes && bytes.byteLength === 0) {\n            bytes = Hash192.ZERO_192.bytes;\n        }\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash192.ZERO_192.bytes);\n    }\n}\nexports.Hash192 = Hash192;\nHash192.width = 24;\nHash192.ZERO_192 = new Hash192(new Uint8Array(Hash192.width));\n//# sourceMappingURL=hash-192.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTE5Mi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZUFBZSxtQkFBTyxDQUFDLCtFQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvaGFzaC0xOTIuanM/ZmI4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFzaDE5MiA9IHZvaWQgMDtcbmNvbnN0IGhhc2hfMSA9IHJlcXVpcmUoXCIuL2hhc2hcIik7XG4vKipcbiAqIEhhc2ggd2l0aCBhIHdpZHRoIG9mIDE5MiBiaXRzXG4gKi9cbmNsYXNzIEhhc2gxOTIgZXh0ZW5kcyBoYXNoXzEuSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgaWYgKGJ5dGVzICYmIGJ5dGVzLmJ5dGVMZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGJ5dGVzID0gSGFzaDE5Mi5aRVJPXzE5Mi5ieXRlcztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBIYXNoMTkyLlpFUk9fMTkyLmJ5dGVzKTtcbiAgICB9XG59XG5leHBvcnRzLkhhc2gxOTIgPSBIYXNoMTkyO1xuSGFzaDE5Mi53aWR0aCA9IDI0O1xuSGFzaDE5Mi5aRVJPXzE5MiA9IG5ldyBIYXNoMTkyKG5ldyBVaW50OEFycmF5KEhhc2gxOTIud2lkdGgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2gtMTkyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-192.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-256.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/hash-256.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash256 = void 0;\nconst hash_1 = __webpack_require__(/*! ./hash */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash.js\");\n/**\n * Hash with a width of 256 bits\n */\nclass Hash256 extends hash_1.Hash {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : Hash256.ZERO_256.bytes);\n    }\n}\nexports.Hash256 = Hash256;\nHash256.width = 32;\nHash256.ZERO_256 = new Hash256(new Uint8Array(Hash256.width));\n//# sourceMappingURL=hash-256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLTI1Ni5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZUFBZSxtQkFBTyxDQUFDLCtFQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvaGFzaC0yNTYuanM/YzhkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSGFzaDI1NiA9IHZvaWQgMDtcbmNvbnN0IGhhc2hfMSA9IHJlcXVpcmUoXCIuL2hhc2hcIik7XG4vKipcbiAqIEhhc2ggd2l0aCBhIHdpZHRoIG9mIDI1NiBiaXRzXG4gKi9cbmNsYXNzIEhhc2gyNTYgZXh0ZW5kcyBoYXNoXzEuSGFzaCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogSGFzaDI1Ni5aRVJPXzI1Ni5ieXRlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5IYXNoMjU2ID0gSGFzaDI1Njtcbkhhc2gyNTYud2lkdGggPSAzMjtcbkhhc2gyNTYuWkVST18yNTYgPSBuZXcgSGFzaDI1NihuZXcgVWludDhBcnJheShIYXNoMjU2LndpZHRoKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoLTI1Ni5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-256.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/hash.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hash = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\n/**\n * Base class defining how to encode and decode hashes\n */\nclass Hash extends serialized_type_1.Comparable {\n    constructor(bytes) {\n        super(bytes);\n        if (this.bytes.length !== this.constructor.width) {\n            throw new Error(`Invalid Hash length ${this.bytes.byteLength}`);\n        }\n    }\n    /**\n     * Construct a Hash object from an existing Hash object or a hex-string\n     *\n     * @param value A hash object or hex-string of a hash\n     */\n    static from(value) {\n        if (value instanceof this) {\n            return value;\n        }\n        if (typeof value === 'string') {\n            if (!utils_1.HEX_REGEX.test(value)) {\n                throw new Error(`Invalid hash string ${value}`);\n            }\n            return new this((0, utils_1.hexToBytes)(value));\n        }\n        throw new Error('Cannot construct Hash from given value');\n    }\n    /**\n     * Read a Hash object from a BinaryParser\n     *\n     * @param parser BinaryParser to read the hash from\n     * @param hint length of the bytes to read, optional\n     */\n    static fromParser(parser, hint) {\n        return new this(parser.read(hint !== null && hint !== void 0 ? hint : this.width));\n    }\n    /**\n     * Overloaded operator for comparing two hash objects\n     *\n     * @param other The Hash to compare this to\n     */\n    compareTo(other) {\n        return (0, utils_2.compare)(this.bytes, this.constructor.from(other).bytes);\n    }\n    /**\n     * @returns the hex-string representation of this Hash\n     */\n    toString() {\n        return this.toHex();\n    }\n    /**\n     * Returns four bits at the specified depth within a hash\n     *\n     * @param depth The depth of the four bits\n     * @returns The number represented by the four bits\n     */\n    nibblet(depth) {\n        const byteIx = depth > 0 ? (depth / 2) | 0 : 0;\n        let b = this.bytes[byteIx];\n        if (depth % 2 === 0) {\n            b = (b & 0xf0) >>> 4;\n        }\n        else {\n            b = b & 0x0f;\n        }\n        return b;\n    }\n}\nexports.Hash = Hash;\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9oYXNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWiwwQkFBMEIsbUJBQU8sQ0FBQyxxR0FBbUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQXlCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLDRFQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHNCQUFzQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxNQUFNO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvaGFzaC5qcz8yM2JhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IYXNoID0gdm9pZCAwO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkB4cnBsZi9pc29tb3JwaGljL3V0aWxzXCIpO1xuY29uc3QgdXRpbHNfMiA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbi8qKlxuICogQmFzZSBjbGFzcyBkZWZpbmluZyBob3cgdG8gZW5jb2RlIGFuZCBkZWNvZGUgaGFzaGVzXG4gKi9cbmNsYXNzIEhhc2ggZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5Db21wYXJhYmxlIHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyk7XG4gICAgICAgIGlmICh0aGlzLmJ5dGVzLmxlbmd0aCAhPT0gdGhpcy5jb25zdHJ1Y3Rvci53aWR0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIEhhc2ggbGVuZ3RoICR7dGhpcy5ieXRlcy5ieXRlTGVuZ3RofWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIEhhc2ggb2JqZWN0IGZyb20gYW4gZXhpc3RpbmcgSGFzaCBvYmplY3Qgb3IgYSBoZXgtc3RyaW5nXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgQSBoYXNoIG9iamVjdCBvciBoZXgtc3RyaW5nIG9mIGEgaGFzaFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIHRoaXMpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKCF1dGlsc18xLkhFWF9SRUdFWC50ZXN0KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBoYXNoIHN0cmluZyAke3ZhbHVlfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5ldyB0aGlzKCgwLCB1dGlsc18xLmhleFRvQnl0ZXMpKHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29uc3RydWN0IEhhc2ggZnJvbSBnaXZlbiB2YWx1ZScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGEgSGFzaCBvYmplY3QgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcmVhZCB0aGUgaGFzaCBmcm9tXG4gICAgICogQHBhcmFtIGhpbnQgbGVuZ3RoIG9mIHRoZSBieXRlcyB0byByZWFkLCBvcHRpb25hbFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlciwgaGludCkge1xuICAgICAgICByZXR1cm4gbmV3IHRoaXMocGFyc2VyLnJlYWQoaGludCAhPT0gbnVsbCAmJiBoaW50ICE9PSB2b2lkIDAgPyBoaW50IDogdGhpcy53aWR0aCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdmVybG9hZGVkIG9wZXJhdG9yIGZvciBjb21wYXJpbmcgdHdvIGhhc2ggb2JqZWN0c1xuICAgICAqXG4gICAgICogQHBhcmFtIG90aGVyIFRoZSBIYXNoIHRvIGNvbXBhcmUgdGhpcyB0b1xuICAgICAqL1xuICAgIGNvbXBhcmVUbyhvdGhlcikge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzIuY29tcGFyZSkodGhpcy5ieXRlcywgdGhpcy5jb25zdHJ1Y3Rvci5mcm9tKG90aGVyKS5ieXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIHRoZSBoZXgtc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgSGFzaFxuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b0hleCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGZvdXIgYml0cyBhdCB0aGUgc3BlY2lmaWVkIGRlcHRoIHdpdGhpbiBhIGhhc2hcbiAgICAgKlxuICAgICAqIEBwYXJhbSBkZXB0aCBUaGUgZGVwdGggb2YgdGhlIGZvdXIgYml0c1xuICAgICAqIEByZXR1cm5zIFRoZSBudW1iZXIgcmVwcmVzZW50ZWQgYnkgdGhlIGZvdXIgYml0c1xuICAgICAqL1xuICAgIG5pYmJsZXQoZGVwdGgpIHtcbiAgICAgICAgY29uc3QgYnl0ZUl4ID0gZGVwdGggPiAwID8gKGRlcHRoIC8gMikgfCAwIDogMDtcbiAgICAgICAgbGV0IGIgPSB0aGlzLmJ5dGVzW2J5dGVJeF07XG4gICAgICAgIGlmIChkZXB0aCAlIDIgPT09IDApIHtcbiAgICAgICAgICAgIGIgPSAoYiAmIDB4ZjApID4+PiA0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYiA9IGIgJiAweDBmO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBiO1xuICAgIH1cbn1cbmV4cG9ydHMuSGFzaCA9IEhhc2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js":
/*!******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Vector256 = exports.UInt64 = exports.UInt32 = exports.UInt16 = exports.UInt8 = exports.STObject = exports.STArray = exports.PathSet = exports.Hash256 = exports.Hash192 = exports.Hash160 = exports.Hash128 = exports.Currency = exports.Blob = exports.Amount = exports.AccountID = exports.coreTypes = void 0;\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js\");\nObject.defineProperty(exports, \"AccountID\", ({ enumerable: true, get: function () { return account_id_1.AccountID; } }));\nconst amount_1 = __webpack_require__(/*! ./amount */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/amount.js\");\nObject.defineProperty(exports, \"Amount\", ({ enumerable: true, get: function () { return amount_1.Amount; } }));\nconst blob_1 = __webpack_require__(/*! ./blob */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return blob_1.Blob; } }));\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/currency.js\");\nObject.defineProperty(exports, \"Currency\", ({ enumerable: true, get: function () { return currency_1.Currency; } }));\nconst hash_128_1 = __webpack_require__(/*! ./hash-128 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-128.js\");\nObject.defineProperty(exports, \"Hash128\", ({ enumerable: true, get: function () { return hash_128_1.Hash128; } }));\nconst hash_160_1 = __webpack_require__(/*! ./hash-160 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-160.js\");\nObject.defineProperty(exports, \"Hash160\", ({ enumerable: true, get: function () { return hash_160_1.Hash160; } }));\nconst hash_192_1 = __webpack_require__(/*! ./hash-192 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-192.js\");\nObject.defineProperty(exports, \"Hash192\", ({ enumerable: true, get: function () { return hash_192_1.Hash192; } }));\nconst hash_256_1 = __webpack_require__(/*! ./hash-256 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nObject.defineProperty(exports, \"Hash256\", ({ enumerable: true, get: function () { return hash_256_1.Hash256; } }));\nconst issue_1 = __webpack_require__(/*! ./issue */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/issue.js\");\nconst path_set_1 = __webpack_require__(/*! ./path-set */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/path-set.js\");\nObject.defineProperty(exports, \"PathSet\", ({ enumerable: true, get: function () { return path_set_1.PathSet; } }));\nconst st_array_1 = __webpack_require__(/*! ./st-array */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-array.js\");\nObject.defineProperty(exports, \"STArray\", ({ enumerable: true, get: function () { return st_array_1.STArray; } }));\nconst st_object_1 = __webpack_require__(/*! ./st-object */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-object.js\");\nObject.defineProperty(exports, \"STObject\", ({ enumerable: true, get: function () { return st_object_1.STObject; } }));\nconst uint_16_1 = __webpack_require__(/*! ./uint-16 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-16.js\");\nObject.defineProperty(exports, \"UInt16\", ({ enumerable: true, get: function () { return uint_16_1.UInt16; } }));\nconst uint_32_1 = __webpack_require__(/*! ./uint-32 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-32.js\");\nObject.defineProperty(exports, \"UInt32\", ({ enumerable: true, get: function () { return uint_32_1.UInt32; } }));\nconst uint_64_1 = __webpack_require__(/*! ./uint-64 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-64.js\");\nObject.defineProperty(exports, \"UInt64\", ({ enumerable: true, get: function () { return uint_64_1.UInt64; } }));\nconst uint_8_1 = __webpack_require__(/*! ./uint-8 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-8.js\");\nObject.defineProperty(exports, \"UInt8\", ({ enumerable: true, get: function () { return uint_8_1.UInt8; } }));\nconst vector_256_1 = __webpack_require__(/*! ./vector-256 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/vector-256.js\");\nObject.defineProperty(exports, \"Vector256\", ({ enumerable: true, get: function () { return vector_256_1.Vector256; } }));\nconst xchain_bridge_1 = __webpack_require__(/*! ./xchain-bridge */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/xchain-bridge.js\");\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst coreTypes = {\n    AccountID: account_id_1.AccountID,\n    Amount: amount_1.Amount,\n    Blob: blob_1.Blob,\n    Currency: currency_1.Currency,\n    Hash128: hash_128_1.Hash128,\n    Hash160: hash_160_1.Hash160,\n    Hash192: hash_192_1.Hash192,\n    Hash256: hash_256_1.Hash256,\n    Issue: issue_1.Issue,\n    PathSet: path_set_1.PathSet,\n    STArray: st_array_1.STArray,\n    STObject: st_object_1.STObject,\n    UInt8: uint_8_1.UInt8,\n    UInt16: uint_16_1.UInt16,\n    UInt32: uint_32_1.UInt32,\n    UInt64: uint_64_1.UInt64,\n    Vector256: vector_256_1.Vector256,\n    XChainBridge: xchain_bridge_1.XChainBridge,\n};\nexports.coreTypes = coreTypes;\n// Ensures that the DEFAULT_DEFINITIONS object connects these types to fields for serializing/deserializing\n// This is done here instead of in enums/index.ts to avoid a circular dependency\n// because some of the above types depend on BinarySerializer which depends on enums/index.ts.\nenums_1.DEFAULT_DEFINITIONS.associateTypes(coreTypes);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGNBQWMsR0FBRyxhQUFhLEdBQUcsZ0JBQWdCLEdBQUcsZUFBZSxHQUFHLGVBQWUsR0FBRyxlQUFlLEdBQUcsZUFBZSxHQUFHLGVBQWUsR0FBRyxlQUFlLEdBQUcsZ0JBQWdCLEdBQUcsWUFBWSxHQUFHLGNBQWMsR0FBRyxpQkFBaUIsR0FBRyxpQkFBaUI7QUFDOVMscUJBQXFCLG1CQUFPLENBQUMsMkZBQWM7QUFDM0MsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ3RILGlCQUFpQixtQkFBTyxDQUFDLG1GQUFVO0FBQ25DLDBDQUF5QyxFQUFFLHFDQUFxQywyQkFBMkIsRUFBQztBQUM1RyxlQUFlLG1CQUFPLENBQUMsK0VBQVE7QUFDL0Isd0NBQXVDLEVBQUUscUNBQXFDLHVCQUF1QixFQUFDO0FBQ3RHLG1CQUFtQixtQkFBTyxDQUFDLHVGQUFZO0FBQ3ZDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN2QywyQ0FBMEMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDaEgsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILG1CQUFtQixtQkFBTyxDQUFDLHVGQUFZO0FBQ3ZDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN2QywyQ0FBMEMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDaEgsZ0JBQWdCLG1CQUFPLENBQUMsaUZBQVM7QUFDakMsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILG1CQUFtQixtQkFBTyxDQUFDLHVGQUFZO0FBQ3ZDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCxvQkFBb0IsbUJBQU8sQ0FBQyx5RkFBYTtBQUN6Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDbkgsa0JBQWtCLG1CQUFPLENBQUMscUZBQVc7QUFDckMsMENBQXlDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDO0FBQzdHLGtCQUFrQixtQkFBTyxDQUFDLHFGQUFXO0FBQ3JDLDBDQUF5QyxFQUFFLHFDQUFxQyw0QkFBNEIsRUFBQztBQUM3RyxrQkFBa0IsbUJBQU8sQ0FBQyxxRkFBVztBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDN0csaUJBQWlCLG1CQUFPLENBQUMsbUZBQVU7QUFDbkMseUNBQXdDLEVBQUUscUNBQXFDLDBCQUEwQixFQUFDO0FBQzFHLHFCQUFxQixtQkFBTyxDQUFDLDJGQUFjO0FBQzNDLDZDQUE0QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUN0SCx3QkFBd0IsbUJBQU8sQ0FBQyxpR0FBaUI7QUFDakQsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvaW5kZXguanM/OTA3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVmVjdG9yMjU2ID0gZXhwb3J0cy5VSW50NjQgPSBleHBvcnRzLlVJbnQzMiA9IGV4cG9ydHMuVUludDE2ID0gZXhwb3J0cy5VSW50OCA9IGV4cG9ydHMuU1RPYmplY3QgPSBleHBvcnRzLlNUQXJyYXkgPSBleHBvcnRzLlBhdGhTZXQgPSBleHBvcnRzLkhhc2gyNTYgPSBleHBvcnRzLkhhc2gxOTIgPSBleHBvcnRzLkhhc2gxNjAgPSBleHBvcnRzLkhhc2gxMjggPSBleHBvcnRzLkN1cnJlbmN5ID0gZXhwb3J0cy5CbG9iID0gZXhwb3J0cy5BbW91bnQgPSBleHBvcnRzLkFjY291bnRJRCA9IGV4cG9ydHMuY29yZVR5cGVzID0gdm9pZCAwO1xuY29uc3QgYWNjb3VudF9pZF8xID0gcmVxdWlyZShcIi4vYWNjb3VudC1pZFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY291bnRJRFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF9pZF8xLkFjY291bnRJRDsgfSB9KTtcbmNvbnN0IGFtb3VudF8xID0gcmVxdWlyZShcIi4vYW1vdW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQW1vdW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhbW91bnRfMS5BbW91bnQ7IH0gfSk7XG5jb25zdCBibG9iXzEgPSByZXF1aXJlKFwiLi9ibG9iXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQmxvYlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYmxvYl8xLkJsb2I7IH0gfSk7XG5jb25zdCBjdXJyZW5jeV8xID0gcmVxdWlyZShcIi4vY3VycmVuY3lcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDdXJyZW5jeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY3VycmVuY3lfMS5DdXJyZW5jeTsgfSB9KTtcbmNvbnN0IGhhc2hfMTI4XzEgPSByZXF1aXJlKFwiLi9oYXNoLTEyOFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhhc2gxMjhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhhc2hfMTI4XzEuSGFzaDEyODsgfSB9KTtcbmNvbnN0IGhhc2hfMTYwXzEgPSByZXF1aXJlKFwiLi9oYXNoLTE2MFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhhc2gxNjBcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhhc2hfMTYwXzEuSGFzaDE2MDsgfSB9KTtcbmNvbnN0IGhhc2hfMTkyXzEgPSByZXF1aXJlKFwiLi9oYXNoLTE5MlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhhc2gxOTJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhhc2hfMTkyXzEuSGFzaDE5MjsgfSB9KTtcbmNvbnN0IGhhc2hfMjU2XzEgPSByZXF1aXJlKFwiLi9oYXNoLTI1NlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhhc2gyNTZcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGhhc2hfMjU2XzEuSGFzaDI1NjsgfSB9KTtcbmNvbnN0IGlzc3VlXzEgPSByZXF1aXJlKFwiLi9pc3N1ZVwiKTtcbmNvbnN0IHBhdGhfc2V0XzEgPSByZXF1aXJlKFwiLi9wYXRoLXNldFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBhdGhTZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBhdGhfc2V0XzEuUGF0aFNldDsgfSB9KTtcbmNvbnN0IHN0X2FycmF5XzEgPSByZXF1aXJlKFwiLi9zdC1hcnJheVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNUQXJyYXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN0X2FycmF5XzEuU1RBcnJheTsgfSB9KTtcbmNvbnN0IHN0X29iamVjdF8xID0gcmVxdWlyZShcIi4vc3Qtb2JqZWN0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU1RPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN0X29iamVjdF8xLlNUT2JqZWN0OyB9IH0pO1xuY29uc3QgdWludF8xNl8xID0gcmVxdWlyZShcIi4vdWludC0xNlwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVJbnQxNlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdWludF8xNl8xLlVJbnQxNjsgfSB9KTtcbmNvbnN0IHVpbnRfMzJfMSA9IHJlcXVpcmUoXCIuL3VpbnQtMzJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVSW50MzJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHVpbnRfMzJfMS5VSW50MzI7IH0gfSk7XG5jb25zdCB1aW50XzY0XzEgPSByZXF1aXJlKFwiLi91aW50LTY0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVUludDY0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1aW50XzY0XzEuVUludDY0OyB9IH0pO1xuY29uc3QgdWludF84XzEgPSByZXF1aXJlKFwiLi91aW50LThcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVSW50OFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdWludF84XzEuVUludDg7IH0gfSk7XG5jb25zdCB2ZWN0b3JfMjU2XzEgPSByZXF1aXJlKFwiLi92ZWN0b3ItMjU2XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVmVjdG9yMjU2XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB2ZWN0b3JfMjU2XzEuVmVjdG9yMjU2OyB9IH0pO1xuY29uc3QgeGNoYWluX2JyaWRnZV8xID0gcmVxdWlyZShcIi4veGNoYWluLWJyaWRnZVwiKTtcbmNvbnN0IGVudW1zXzEgPSByZXF1aXJlKFwiLi4vZW51bXNcIik7XG5jb25zdCBjb3JlVHlwZXMgPSB7XG4gICAgQWNjb3VudElEOiBhY2NvdW50X2lkXzEuQWNjb3VudElELFxuICAgIEFtb3VudDogYW1vdW50XzEuQW1vdW50LFxuICAgIEJsb2I6IGJsb2JfMS5CbG9iLFxuICAgIEN1cnJlbmN5OiBjdXJyZW5jeV8xLkN1cnJlbmN5LFxuICAgIEhhc2gxMjg6IGhhc2hfMTI4XzEuSGFzaDEyOCxcbiAgICBIYXNoMTYwOiBoYXNoXzE2MF8xLkhhc2gxNjAsXG4gICAgSGFzaDE5MjogaGFzaF8xOTJfMS5IYXNoMTkyLFxuICAgIEhhc2gyNTY6IGhhc2hfMjU2XzEuSGFzaDI1NixcbiAgICBJc3N1ZTogaXNzdWVfMS5Jc3N1ZSxcbiAgICBQYXRoU2V0OiBwYXRoX3NldF8xLlBhdGhTZXQsXG4gICAgU1RBcnJheTogc3RfYXJyYXlfMS5TVEFycmF5LFxuICAgIFNUT2JqZWN0OiBzdF9vYmplY3RfMS5TVE9iamVjdCxcbiAgICBVSW50ODogdWludF84XzEuVUludDgsXG4gICAgVUludDE2OiB1aW50XzE2XzEuVUludDE2LFxuICAgIFVJbnQzMjogdWludF8zMl8xLlVJbnQzMixcbiAgICBVSW50NjQ6IHVpbnRfNjRfMS5VSW50NjQsXG4gICAgVmVjdG9yMjU2OiB2ZWN0b3JfMjU2XzEuVmVjdG9yMjU2LFxuICAgIFhDaGFpbkJyaWRnZTogeGNoYWluX2JyaWRnZV8xLlhDaGFpbkJyaWRnZSxcbn07XG5leHBvcnRzLmNvcmVUeXBlcyA9IGNvcmVUeXBlcztcbi8vIEVuc3VyZXMgdGhhdCB0aGUgREVGQVVMVF9ERUZJTklUSU9OUyBvYmplY3QgY29ubmVjdHMgdGhlc2UgdHlwZXMgdG8gZmllbGRzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nXG4vLyBUaGlzIGlzIGRvbmUgaGVyZSBpbnN0ZWFkIG9mIGluIGVudW1zL2luZGV4LnRzIHRvIGF2b2lkIGEgY2lyY3VsYXIgZGVwZW5kZW5jeVxuLy8gYmVjYXVzZSBzb21lIG9mIHRoZSBhYm92ZSB0eXBlcyBkZXBlbmQgb24gQmluYXJ5U2VyaWFsaXplciB3aGljaCBkZXBlbmRzIG9uIGVudW1zL2luZGV4LnRzLlxuZW51bXNfMS5ERUZBVUxUX0RFRklOSVRJT05TLmFzc29jaWF0ZVR5cGVzKGNvcmVUeXBlcyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/issue.js":
/*!******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/issue.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Issue = void 0;\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/currency.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst hash_192_1 = __webpack_require__(/*! ./hash-192 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-192.js\");\n/**\n * Type guard for Issue Object\n */\nfunction isIssueObject(arg) {\n    const keys = Object.keys(arg).sort();\n    const isXRP = keys.length === 1 && keys[0] === 'currency';\n    const isIOU = keys.length === 2 && keys[0] === 'currency' && keys[1] === 'issuer';\n    const isMPT = keys.length === 1 && keys[0] === 'mpt_issuance_id';\n    return isXRP || isIOU || isMPT;\n}\n/**\n * Class for serializing/Deserializing Amounts\n */\nclass Issue extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : Issue.ZERO_ISSUED_CURRENCY.bytes);\n    }\n    /**\n     * Construct an amount from an IOU or string amount\n     *\n     * @param value An Amount, object representing an IOU, MPTAmount, or a string\n     *     representing an integer amount\n     * @returns An Issue object\n     */\n    static from(value) {\n        if (value instanceof Issue) {\n            return value;\n        }\n        if (isIssueObject(value)) {\n            if (value.currency) {\n                const currency = currency_1.Currency.from(value.currency.toString()).toBytes();\n                //IOU case\n                if (value.issuer) {\n                    const issuer = account_id_1.AccountID.from(value.issuer.toString()).toBytes();\n                    return new Issue((0, utils_1.concat)([currency, issuer]));\n                }\n                //XRP case\n                return new Issue(currency);\n            }\n            // MPT case\n            if (value.mpt_issuance_id) {\n                const mptIssuanceIdBytes = hash_192_1.Hash192.from(value.mpt_issuance_id.toString()).toBytes();\n                return new Issue(mptIssuanceIdBytes);\n            }\n        }\n        throw new Error('Invalid type to construct an Amount');\n    }\n    /**\n     * Read an amount from a BinaryParser\n     *\n     * @param parser BinaryParser to read the Amount from\n     * @param hint The number of bytes to consume from the parser.\n     * For an MPT amount, pass 24 (the fixed length for Hash192).\n     *\n     * @returns An Issue object\n     */\n    static fromParser(parser, hint) {\n        if (hint === hash_192_1.Hash192.width) {\n            const mptBytes = parser.read(hash_192_1.Hash192.width);\n            return new Issue(mptBytes);\n        }\n        const currency = parser.read(20);\n        if (new currency_1.Currency(currency).toJSON() === 'XRP') {\n            return new Issue(currency);\n        }\n        const currencyAndIssuer = [currency, parser.read(20)];\n        return new Issue((0, utils_1.concat)(currencyAndIssuer));\n    }\n    /**\n     * Get the JSON representation of this Amount\n     *\n     * @returns the JSON interpretation of this.bytes\n     */\n    toJSON() {\n        // If the buffer is exactly 24 bytes, treat it as an MPT amount.\n        if (this.toBytes().length === hash_192_1.Hash192.width) {\n            return {\n                mpt_issuance_id: this.toHex().toUpperCase(),\n            };\n        }\n        const parser = new binary_parser_1.BinaryParser(this.toString());\n        const currency = currency_1.Currency.fromParser(parser);\n        if (currency.toJSON() === 'XRP') {\n            return { currency: currency.toJSON() };\n        }\n        const issuer = account_id_1.AccountID.fromParser(parser);\n        return {\n            currency: currency.toJSON(),\n            issuer: issuer.toJSON(),\n        };\n    }\n}\nexports.Issue = Issue;\nIssue.ZERO_ISSUED_CURRENCY = new Issue(new Uint8Array(20));\n//# sourceMappingURL=issue.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9pc3N1ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2IsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQXlCO0FBQ2pELHdCQUF3QixtQkFBTyxDQUFDLDBHQUF5QjtBQUN6RCxxQkFBcUIsbUJBQU8sQ0FBQywyRkFBYztBQUMzQyxtQkFBbUIsbUJBQU8sQ0FBQyx1RkFBWTtBQUN2QywwQkFBMEIsbUJBQU8sQ0FBQyxxR0FBbUI7QUFDckQsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9pc3N1ZS5qcz84MGM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Jc3N1ZSA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG5jb25zdCBiaW5hcnlfcGFyc2VyXzEgPSByZXF1aXJlKFwiLi4vc2VyZGVzL2JpbmFyeS1wYXJzZXJcIik7XG5jb25zdCBhY2NvdW50X2lkXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50LWlkXCIpO1xuY29uc3QgY3VycmVuY3lfMSA9IHJlcXVpcmUoXCIuL2N1cnJlbmN5XCIpO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCBoYXNoXzE5Ml8xID0gcmVxdWlyZShcIi4vaGFzaC0xOTJcIik7XG4vKipcbiAqIFR5cGUgZ3VhcmQgZm9yIElzc3VlIE9iamVjdFxuICovXG5mdW5jdGlvbiBpc0lzc3VlT2JqZWN0KGFyZykge1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhhcmcpLnNvcnQoKTtcbiAgICBjb25zdCBpc1hSUCA9IGtleXMubGVuZ3RoID09PSAxICYmIGtleXNbMF0gPT09ICdjdXJyZW5jeSc7XG4gICAgY29uc3QgaXNJT1UgPSBrZXlzLmxlbmd0aCA9PT0gMiAmJiBrZXlzWzBdID09PSAnY3VycmVuY3knICYmIGtleXNbMV0gPT09ICdpc3N1ZXInO1xuICAgIGNvbnN0IGlzTVBUID0ga2V5cy5sZW5ndGggPT09IDEgJiYga2V5c1swXSA9PT0gJ21wdF9pc3N1YW5jZV9pZCc7XG4gICAgcmV0dXJuIGlzWFJQIHx8IGlzSU9VIHx8IGlzTVBUO1xufVxuLyoqXG4gKiBDbGFzcyBmb3Igc2VyaWFsaXppbmcvRGVzZXJpYWxpemluZyBBbW91bnRzXG4gKi9cbmNsYXNzIElzc3VlIGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzICE9PSBudWxsICYmIGJ5dGVzICE9PSB2b2lkIDAgPyBieXRlcyA6IElzc3VlLlpFUk9fSVNTVUVEX0NVUlJFTkNZLmJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIGFtb3VudCBmcm9tIGFuIElPVSBvciBzdHJpbmcgYW1vdW50XG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgQW4gQW1vdW50LCBvYmplY3QgcmVwcmVzZW50aW5nIGFuIElPVSwgTVBUQW1vdW50LCBvciBhIHN0cmluZ1xuICAgICAqICAgICByZXByZXNlbnRpbmcgYW4gaW50ZWdlciBhbW91bnRcbiAgICAgKiBAcmV0dXJucyBBbiBJc3N1ZSBvYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBJc3N1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0lzc3VlT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgaWYgKHZhbHVlLmN1cnJlbmN5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY3VycmVuY3kgPSBjdXJyZW5jeV8xLkN1cnJlbmN5LmZyb20odmFsdWUuY3VycmVuY3kudG9TdHJpbmcoKSkudG9CeXRlcygpO1xuICAgICAgICAgICAgICAgIC8vSU9VIGNhc2VcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUuaXNzdWVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzc3VlciA9IGFjY291bnRfaWRfMS5BY2NvdW50SUQuZnJvbSh2YWx1ZS5pc3N1ZXIudG9TdHJpbmcoKSkudG9CeXRlcygpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IElzc3VlKCgwLCB1dGlsc18xLmNvbmNhdCkoW2N1cnJlbmN5LCBpc3N1ZXJdKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vWFJQIGNhc2VcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IElzc3VlKGN1cnJlbmN5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIE1QVCBjYXNlXG4gICAgICAgICAgICBpZiAodmFsdWUubXB0X2lzc3VhbmNlX2lkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbXB0SXNzdWFuY2VJZEJ5dGVzID0gaGFzaF8xOTJfMS5IYXNoMTkyLmZyb20odmFsdWUubXB0X2lzc3VhbmNlX2lkLnRvU3RyaW5nKCkpLnRvQnl0ZXMoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IElzc3VlKG1wdElzc3VhbmNlSWRCeXRlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHR5cGUgdG8gY29uc3RydWN0IGFuIEFtb3VudCcpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZWFkIGFuIGFtb3VudCBmcm9tIGEgQmluYXJ5UGFyc2VyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGFyc2VyIEJpbmFyeVBhcnNlciB0byByZWFkIHRoZSBBbW91bnQgZnJvbVxuICAgICAqIEBwYXJhbSBoaW50IFRoZSBudW1iZXIgb2YgYnl0ZXMgdG8gY29uc3VtZSBmcm9tIHRoZSBwYXJzZXIuXG4gICAgICogRm9yIGFuIE1QVCBhbW91bnQsIHBhc3MgMjQgKHRoZSBmaXhlZCBsZW5ndGggZm9yIEhhc2gxOTIpLlxuICAgICAqXG4gICAgICogQHJldHVybnMgQW4gSXNzdWUgb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyLCBoaW50KSB7XG4gICAgICAgIGlmIChoaW50ID09PSBoYXNoXzE5Ml8xLkhhc2gxOTIud2lkdGgpIHtcbiAgICAgICAgICAgIGNvbnN0IG1wdEJ5dGVzID0gcGFyc2VyLnJlYWQoaGFzaF8xOTJfMS5IYXNoMTkyLndpZHRoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSXNzdWUobXB0Qnl0ZXMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGN1cnJlbmN5ID0gcGFyc2VyLnJlYWQoMjApO1xuICAgICAgICBpZiAobmV3IGN1cnJlbmN5XzEuQ3VycmVuY3koY3VycmVuY3kpLnRvSlNPTigpID09PSAnWFJQJykge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBJc3N1ZShjdXJyZW5jeSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3VycmVuY3lBbmRJc3N1ZXIgPSBbY3VycmVuY3ksIHBhcnNlci5yZWFkKDIwKV07XG4gICAgICAgIHJldHVybiBuZXcgSXNzdWUoKDAsIHV0aWxzXzEuY29uY2F0KShjdXJyZW5jeUFuZElzc3VlcikpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhpcyBBbW91bnRcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBKU09OIGludGVycHJldGF0aW9uIG9mIHRoaXMuYnl0ZXNcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIC8vIElmIHRoZSBidWZmZXIgaXMgZXhhY3RseSAyNCBieXRlcywgdHJlYXQgaXQgYXMgYW4gTVBUIGFtb3VudC5cbiAgICAgICAgaWYgKHRoaXMudG9CeXRlcygpLmxlbmd0aCA9PT0gaGFzaF8xOTJfMS5IYXNoMTkyLndpZHRoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1wdF9pc3N1YW5jZV9pZDogdGhpcy50b0hleCgpLnRvVXBwZXJDYXNlKCksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcnNlciA9IG5ldyBiaW5hcnlfcGFyc2VyXzEuQmluYXJ5UGFyc2VyKHRoaXMudG9TdHJpbmcoKSk7XG4gICAgICAgIGNvbnN0IGN1cnJlbmN5ID0gY3VycmVuY3lfMS5DdXJyZW5jeS5mcm9tUGFyc2VyKHBhcnNlcik7XG4gICAgICAgIGlmIChjdXJyZW5jeS50b0pTT04oKSA9PT0gJ1hSUCcpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGN1cnJlbmN5OiBjdXJyZW5jeS50b0pTT04oKSB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGlzc3VlciA9IGFjY291bnRfaWRfMS5BY2NvdW50SUQuZnJvbVBhcnNlcihwYXJzZXIpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY3VycmVuY3k6IGN1cnJlbmN5LnRvSlNPTigpLFxuICAgICAgICAgICAgaXNzdWVyOiBpc3N1ZXIudG9KU09OKCksXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0cy5Jc3N1ZSA9IElzc3VlO1xuSXNzdWUuWkVST19JU1NVRURfQ1VSUkVOQ1kgPSBuZXcgSXNzdWUobmV3IFVpbnQ4QXJyYXkoMjApKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzc3VlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/issue.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/path-set.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/path-set.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PathSet = void 0;\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst currency_1 = __webpack_require__(/*! ./currency */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/currency.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * Constants for separating Paths in a PathSet\n */\nconst PATHSET_END_BYTE = 0x00;\nconst PATH_SEPARATOR_BYTE = 0xff;\n/**\n * Constant for masking types of a Hop\n */\nconst TYPE_ACCOUNT = 0x01;\nconst TYPE_CURRENCY = 0x10;\nconst TYPE_ISSUER = 0x20;\n/**\n * TypeGuard for HopObject\n */\nfunction isHopObject(arg) {\n    return (arg.issuer !== undefined ||\n        arg.account !== undefined ||\n        arg.currency !== undefined);\n}\n/**\n * TypeGuard for PathSet\n */\nfunction isPathSet(arg) {\n    return ((Array.isArray(arg) && arg.length === 0) ||\n        (Array.isArray(arg) && Array.isArray(arg[0]) && arg[0].length === 0) ||\n        (Array.isArray(arg) && Array.isArray(arg[0]) && isHopObject(arg[0][0])));\n}\n/**\n * Serialize and Deserialize a Hop\n */\nclass Hop extends serialized_type_1.SerializedType {\n    /**\n     * Create a Hop from a HopObject\n     *\n     * @param value Either a hop or HopObject to create a hop with\n     * @returns a Hop\n     */\n    static from(value) {\n        if (value instanceof Hop) {\n            return value;\n        }\n        const bytes = [Uint8Array.from([0])];\n        if (value.account) {\n            bytes.push(account_id_1.AccountID.from(value.account).toBytes());\n            bytes[0][0] |= TYPE_ACCOUNT;\n        }\n        if (value.currency) {\n            bytes.push(currency_1.Currency.from(value.currency).toBytes());\n            bytes[0][0] |= TYPE_CURRENCY;\n        }\n        if (value.issuer) {\n            bytes.push(account_id_1.AccountID.from(value.issuer).toBytes());\n            bytes[0][0] |= TYPE_ISSUER;\n        }\n        return new Hop((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Construct a Hop from a BinaryParser\n     *\n     * @param parser BinaryParser to read the Hop from\n     * @returns a Hop\n     */\n    static fromParser(parser) {\n        const type = parser.readUInt8();\n        const bytes = [Uint8Array.from([type])];\n        if (type & TYPE_ACCOUNT) {\n            bytes.push(parser.read(account_id_1.AccountID.width));\n        }\n        if (type & TYPE_CURRENCY) {\n            bytes.push(parser.read(currency_1.Currency.width));\n        }\n        if (type & TYPE_ISSUER) {\n            bytes.push(parser.read(account_id_1.AccountID.width));\n        }\n        return new Hop((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Get the JSON interpretation of this hop\n     *\n     * @returns a HopObject, an JS object with optional account, issuer, and currency\n     */\n    toJSON() {\n        const hopParser = new binary_parser_1.BinaryParser((0, utils_1.bytesToHex)(this.bytes));\n        const type = hopParser.readUInt8();\n        let account, currency, issuer;\n        if (type & TYPE_ACCOUNT) {\n            account = account_id_1.AccountID.fromParser(hopParser).toJSON();\n        }\n        if (type & TYPE_CURRENCY) {\n            currency = currency_1.Currency.fromParser(hopParser).toJSON();\n        }\n        if (type & TYPE_ISSUER) {\n            issuer = account_id_1.AccountID.fromParser(hopParser).toJSON();\n        }\n        const result = {};\n        if (account) {\n            result.account = account;\n        }\n        if (issuer) {\n            result.issuer = issuer;\n        }\n        if (currency) {\n            result.currency = currency;\n        }\n        return result;\n    }\n    /**\n     * get a number representing the type of this hop\n     *\n     * @returns a number to be bitwise and-ed with TYPE_ constants to describe the types in the hop\n     */\n    type() {\n        return this.bytes[0];\n    }\n}\n/**\n * Class for serializing/deserializing Paths\n */\nclass Path extends serialized_type_1.SerializedType {\n    /**\n     * construct a Path from an array of Hops\n     *\n     * @param value Path or array of HopObjects to construct a Path\n     * @returns the Path\n     */\n    static from(value) {\n        if (value instanceof Path) {\n            return value;\n        }\n        const bytes = [];\n        value.forEach((hop) => {\n            bytes.push(Hop.from(hop).toBytes());\n        });\n        return new Path((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Read a Path from a BinaryParser\n     *\n     * @param parser BinaryParser to read Path from\n     * @returns the Path represented by the bytes read from the BinaryParser\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        while (!parser.end()) {\n            bytes.push(Hop.fromParser(parser).toBytes());\n            if (parser.peek() === PATHSET_END_BYTE ||\n                parser.peek() === PATH_SEPARATOR_BYTE) {\n                break;\n            }\n        }\n        return new Path((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Get the JSON representation of this Path\n     *\n     * @returns an Array of HopObject constructed from this.bytes\n     */\n    toJSON() {\n        const json = [];\n        const pathParser = new binary_parser_1.BinaryParser(this.toString());\n        while (!pathParser.end()) {\n            json.push(Hop.fromParser(pathParser).toJSON());\n        }\n        return json;\n    }\n}\n/**\n * Deserialize and Serialize the PathSet type\n */\nclass PathSet extends serialized_type_1.SerializedType {\n    /**\n     * Construct a PathSet from an Array of Arrays representing paths\n     *\n     * @param value A PathSet or Array of Array of HopObjects\n     * @returns the PathSet constructed from value\n     */\n    static from(value) {\n        if (value instanceof PathSet) {\n            return value;\n        }\n        if (isPathSet(value)) {\n            const bytes = [];\n            value.forEach((path) => {\n                bytes.push(Path.from(path).toBytes());\n                bytes.push(Uint8Array.from([PATH_SEPARATOR_BYTE]));\n            });\n            bytes[bytes.length - 1] = Uint8Array.from([PATHSET_END_BYTE]);\n            return new PathSet((0, utils_1.concat)(bytes));\n        }\n        throw new Error('Cannot construct PathSet from given value');\n    }\n    /**\n     * Construct a PathSet from a BinaryParser\n     *\n     * @param parser A BinaryParser to read PathSet from\n     * @returns the PathSet read from parser\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        while (!parser.end()) {\n            bytes.push(Path.fromParser(parser).toBytes());\n            bytes.push(parser.read(1));\n            if (bytes[bytes.length - 1][0] == PATHSET_END_BYTE) {\n                break;\n            }\n        }\n        return new PathSet((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Get the JSON representation of this PathSet\n     *\n     * @returns an Array of Array of HopObjects, representing this PathSet\n     */\n    toJSON() {\n        const json = [];\n        const pathParser = new binary_parser_1.BinaryParser(this.toString());\n        while (!pathParser.end()) {\n            json.push(Path.fromParser(pathParser).toJSON());\n            pathParser.skip(1);\n        }\n        return json;\n    }\n}\nexports.PathSet = PathSet;\n//# sourceMappingURL=path-set.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9wYXRoLXNldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YscUJBQXFCLG1CQUFPLENBQUMsMkZBQWM7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkMsd0JBQXdCLG1CQUFPLENBQUMsMEdBQXlCO0FBQ3pELDBCQUEwQixtQkFBTyxDQUFDLHFHQUFtQjtBQUNyRCxnQkFBZ0IsbUJBQU8sQ0FBQywrRkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvcGF0aC1zZXQuanM/ZjYwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGF0aFNldCA9IHZvaWQgMDtcbmNvbnN0IGFjY291bnRfaWRfMSA9IHJlcXVpcmUoXCIuL2FjY291bnQtaWRcIik7XG5jb25zdCBjdXJyZW5jeV8xID0gcmVxdWlyZShcIi4vY3VycmVuY3lcIik7XG5jb25zdCBiaW5hcnlfcGFyc2VyXzEgPSByZXF1aXJlKFwiLi4vc2VyZGVzL2JpbmFyeS1wYXJzZXJcIik7XG5jb25zdCBzZXJpYWxpemVkX3R5cGVfMSA9IHJlcXVpcmUoXCIuL3NlcmlhbGl6ZWQtdHlwZVwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG4vKipcbiAqIENvbnN0YW50cyBmb3Igc2VwYXJhdGluZyBQYXRocyBpbiBhIFBhdGhTZXRcbiAqL1xuY29uc3QgUEFUSFNFVF9FTkRfQllURSA9IDB4MDA7XG5jb25zdCBQQVRIX1NFUEFSQVRPUl9CWVRFID0gMHhmZjtcbi8qKlxuICogQ29uc3RhbnQgZm9yIG1hc2tpbmcgdHlwZXMgb2YgYSBIb3BcbiAqL1xuY29uc3QgVFlQRV9BQ0NPVU5UID0gMHgwMTtcbmNvbnN0IFRZUEVfQ1VSUkVOQ1kgPSAweDEwO1xuY29uc3QgVFlQRV9JU1NVRVIgPSAweDIwO1xuLyoqXG4gKiBUeXBlR3VhcmQgZm9yIEhvcE9iamVjdFxuICovXG5mdW5jdGlvbiBpc0hvcE9iamVjdChhcmcpIHtcbiAgICByZXR1cm4gKGFyZy5pc3N1ZXIgIT09IHVuZGVmaW5lZCB8fFxuICAgICAgICBhcmcuYWNjb3VudCAhPT0gdW5kZWZpbmVkIHx8XG4gICAgICAgIGFyZy5jdXJyZW5jeSAhPT0gdW5kZWZpbmVkKTtcbn1cbi8qKlxuICogVHlwZUd1YXJkIGZvciBQYXRoU2V0XG4gKi9cbmZ1bmN0aW9uIGlzUGF0aFNldChhcmcpIHtcbiAgICByZXR1cm4gKChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCA9PT0gMCkgfHxcbiAgICAgICAgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBBcnJheS5pc0FycmF5KGFyZ1swXSkgJiYgYXJnWzBdLmxlbmd0aCA9PT0gMCkgfHxcbiAgICAgICAgKEFycmF5LmlzQXJyYXkoYXJnKSAmJiBBcnJheS5pc0FycmF5KGFyZ1swXSkgJiYgaXNIb3BPYmplY3QoYXJnWzBdWzBdKSkpO1xufVxuLyoqXG4gKiBTZXJpYWxpemUgYW5kIERlc2VyaWFsaXplIGEgSG9wXG4gKi9cbmNsYXNzIEhvcCBleHRlbmRzIHNlcmlhbGl6ZWRfdHlwZV8xLlNlcmlhbGl6ZWRUeXBlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBIb3AgZnJvbSBhIEhvcE9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIEVpdGhlciBhIGhvcCBvciBIb3BPYmplY3QgdG8gY3JlYXRlIGEgaG9wIHdpdGhcbiAgICAgKiBAcmV0dXJucyBhIEhvcFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEhvcCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gW1VpbnQ4QXJyYXkuZnJvbShbMF0pXTtcbiAgICAgICAgaWYgKHZhbHVlLmFjY291bnQpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2goYWNjb3VudF9pZF8xLkFjY291bnRJRC5mcm9tKHZhbHVlLmFjY291bnQpLnRvQnl0ZXMoKSk7XG4gICAgICAgICAgICBieXRlc1swXVswXSB8PSBUWVBFX0FDQ09VTlQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLmN1cnJlbmN5KSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKGN1cnJlbmN5XzEuQ3VycmVuY3kuZnJvbSh2YWx1ZS5jdXJyZW5jeSkudG9CeXRlcygpKTtcbiAgICAgICAgICAgIGJ5dGVzWzBdWzBdIHw9IFRZUEVfQ1VSUkVOQ1k7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlLmlzc3Vlcikge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChhY2NvdW50X2lkXzEuQWNjb3VudElELmZyb20odmFsdWUuaXNzdWVyKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgYnl0ZXNbMF1bMF0gfD0gVFlQRV9JU1NVRVI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBIb3AoKDAsIHV0aWxzXzEuY29uY2F0KShieXRlcykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBIb3AgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcmVhZCB0aGUgSG9wIGZyb21cbiAgICAgKiBAcmV0dXJucyBhIEhvcFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICBjb25zdCB0eXBlID0gcGFyc2VyLnJlYWRVSW50OCgpO1xuICAgICAgICBjb25zdCBieXRlcyA9IFtVaW50OEFycmF5LmZyb20oW3R5cGVdKV07XG4gICAgICAgIGlmICh0eXBlICYgVFlQRV9BQ0NPVU5UKSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKHBhcnNlci5yZWFkKGFjY291bnRfaWRfMS5BY2NvdW50SUQud2lkdGgpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSAmIFRZUEVfQ1VSUkVOQ1kpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2gocGFyc2VyLnJlYWQoY3VycmVuY3lfMS5DdXJyZW5jeS53aWR0aCkpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlICYgVFlQRV9JU1NVRVIpIHtcbiAgICAgICAgICAgIGJ5dGVzLnB1c2gocGFyc2VyLnJlYWQoYWNjb3VudF9pZF8xLkFjY291bnRJRC53aWR0aCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgSG9wKCgwLCB1dGlsc18xLmNvbmNhdCkoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBKU09OIGludGVycHJldGF0aW9uIG9mIHRoaXMgaG9wXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBhIEhvcE9iamVjdCwgYW4gSlMgb2JqZWN0IHdpdGggb3B0aW9uYWwgYWNjb3VudCwgaXNzdWVyLCBhbmQgY3VycmVuY3lcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IGhvcFBhcnNlciA9IG5ldyBiaW5hcnlfcGFyc2VyXzEuQmluYXJ5UGFyc2VyKCgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHRoaXMuYnl0ZXMpKTtcbiAgICAgICAgY29uc3QgdHlwZSA9IGhvcFBhcnNlci5yZWFkVUludDgoKTtcbiAgICAgICAgbGV0IGFjY291bnQsIGN1cnJlbmN5LCBpc3N1ZXI7XG4gICAgICAgIGlmICh0eXBlICYgVFlQRV9BQ0NPVU5UKSB7XG4gICAgICAgICAgICBhY2NvdW50ID0gYWNjb3VudF9pZF8xLkFjY291bnRJRC5mcm9tUGFyc2VyKGhvcFBhcnNlcikudG9KU09OKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGUgJiBUWVBFX0NVUlJFTkNZKSB7XG4gICAgICAgICAgICBjdXJyZW5jeSA9IGN1cnJlbmN5XzEuQ3VycmVuY3kuZnJvbVBhcnNlcihob3BQYXJzZXIpLnRvSlNPTigpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlICYgVFlQRV9JU1NVRVIpIHtcbiAgICAgICAgICAgIGlzc3VlciA9IGFjY291bnRfaWRfMS5BY2NvdW50SUQuZnJvbVBhcnNlcihob3BQYXJzZXIpLnRvSlNPTigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgICAgICBpZiAoYWNjb3VudCkge1xuICAgICAgICAgICAgcmVzdWx0LmFjY291bnQgPSBhY2NvdW50O1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc3N1ZXIpIHtcbiAgICAgICAgICAgIHJlc3VsdC5pc3N1ZXIgPSBpc3N1ZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGN1cnJlbmN5KSB7XG4gICAgICAgICAgICByZXN1bHQuY3VycmVuY3kgPSBjdXJyZW5jeTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZXQgYSBudW1iZXIgcmVwcmVzZW50aW5nIHRoZSB0eXBlIG9mIHRoaXMgaG9wXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBhIG51bWJlciB0byBiZSBiaXR3aXNlIGFuZC1lZCB3aXRoIFRZUEVfIGNvbnN0YW50cyB0byBkZXNjcmliZSB0aGUgdHlwZXMgaW4gdGhlIGhvcFxuICAgICAqL1xuICAgIHR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJ5dGVzWzBdO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIHNlcmlhbGl6aW5nL2Rlc2VyaWFsaXppbmcgUGF0aHNcbiAqL1xuY2xhc3MgUGF0aCBleHRlbmRzIHNlcmlhbGl6ZWRfdHlwZV8xLlNlcmlhbGl6ZWRUeXBlIHtcbiAgICAvKipcbiAgICAgKiBjb25zdHJ1Y3QgYSBQYXRoIGZyb20gYW4gYXJyYXkgb2YgSG9wc1xuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIFBhdGggb3IgYXJyYXkgb2YgSG9wT2JqZWN0cyB0byBjb25zdHJ1Y3QgYSBQYXRoXG4gICAgICogQHJldHVybnMgdGhlIFBhdGhcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQYXRoKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnl0ZXMgPSBbXTtcbiAgICAgICAgdmFsdWUuZm9yRWFjaCgoaG9wKSA9PiB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKEhvcC5mcm9tKGhvcCkudG9CeXRlcygpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgUGF0aCgoMCwgdXRpbHNfMS5jb25jYXQpKGJ5dGVzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlYWQgYSBQYXRoIGZyb20gYSBCaW5hcnlQYXJzZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJzZXIgQmluYXJ5UGFyc2VyIHRvIHJlYWQgUGF0aCBmcm9tXG4gICAgICogQHJldHVybnMgdGhlIFBhdGggcmVwcmVzZW50ZWQgYnkgdGhlIGJ5dGVzIHJlYWQgZnJvbSB0aGUgQmluYXJ5UGFyc2VyXG4gICAgICovXG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgIHdoaWxlICghcGFyc2VyLmVuZCgpKSB7XG4gICAgICAgICAgICBieXRlcy5wdXNoKEhvcC5mcm9tUGFyc2VyKHBhcnNlcikudG9CeXRlcygpKTtcbiAgICAgICAgICAgIGlmIChwYXJzZXIucGVlaygpID09PSBQQVRIU0VUX0VORF9CWVRFIHx8XG4gICAgICAgICAgICAgICAgcGFyc2VyLnBlZWsoKSA9PT0gUEFUSF9TRVBBUkFUT1JfQllURSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUGF0aCgoMCwgdXRpbHNfMS5jb25jYXQpKGJ5dGVzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGlzIFBhdGhcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGFuIEFycmF5IG9mIEhvcE9iamVjdCBjb25zdHJ1Y3RlZCBmcm9tIHRoaXMuYnl0ZXNcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IGpzb24gPSBbXTtcbiAgICAgICAgY29uc3QgcGF0aFBhcnNlciA9IG5ldyBiaW5hcnlfcGFyc2VyXzEuQmluYXJ5UGFyc2VyKHRoaXMudG9TdHJpbmcoKSk7XG4gICAgICAgIHdoaWxlICghcGF0aFBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAganNvbi5wdXNoKEhvcC5mcm9tUGFyc2VyKHBhdGhQYXJzZXIpLnRvSlNPTigpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ganNvbjtcbiAgICB9XG59XG4vKipcbiAqIERlc2VyaWFsaXplIGFuZCBTZXJpYWxpemUgdGhlIFBhdGhTZXQgdHlwZVxuICovXG5jbGFzcyBQYXRoU2V0IGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIFBhdGhTZXQgZnJvbSBhbiBBcnJheSBvZiBBcnJheXMgcmVwcmVzZW50aW5nIHBhdGhzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsdWUgQSBQYXRoU2V0IG9yIEFycmF5IG9mIEFycmF5IG9mIEhvcE9iamVjdHNcbiAgICAgKiBAcmV0dXJucyB0aGUgUGF0aFNldCBjb25zdHJ1Y3RlZCBmcm9tIHZhbHVlXG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgUGF0aFNldCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1BhdGhTZXQodmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlcyA9IFtdO1xuICAgICAgICAgICAgdmFsdWUuZm9yRWFjaCgocGF0aCkgPT4ge1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goUGF0aC5mcm9tKHBhdGgpLnRvQnl0ZXMoKSk7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChVaW50OEFycmF5LmZyb20oW1BBVEhfU0VQQVJBVE9SX0JZVEVdKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGJ5dGVzW2J5dGVzLmxlbmd0aCAtIDFdID0gVWludDhBcnJheS5mcm9tKFtQQVRIU0VUX0VORF9CWVRFXSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFBhdGhTZXQoKDAsIHV0aWxzXzEuY29uY2F0KShieXRlcykpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBQYXRoU2V0IGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgUGF0aFNldCBmcm9tIGEgQmluYXJ5UGFyc2VyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGFyc2VyIEEgQmluYXJ5UGFyc2VyIHRvIHJlYWQgUGF0aFNldCBmcm9tXG4gICAgICogQHJldHVybnMgdGhlIFBhdGhTZXQgcmVhZCBmcm9tIHBhcnNlclxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICBjb25zdCBieXRlcyA9IFtdO1xuICAgICAgICB3aGlsZSAoIXBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAgYnl0ZXMucHVzaChQYXRoLmZyb21QYXJzZXIocGFyc2VyKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgYnl0ZXMucHVzaChwYXJzZXIucmVhZCgxKSk7XG4gICAgICAgICAgICBpZiAoYnl0ZXNbYnl0ZXMubGVuZ3RoIC0gMV1bMF0gPT0gUEFUSFNFVF9FTkRfQllURSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUGF0aFNldCgoMCwgdXRpbHNfMS5jb25jYXQpKGJ5dGVzKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGlzIFBhdGhTZXRcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGFuIEFycmF5IG9mIEFycmF5IG9mIEhvcE9iamVjdHMsIHJlcHJlc2VudGluZyB0aGlzIFBhdGhTZXRcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IGpzb24gPSBbXTtcbiAgICAgICAgY29uc3QgcGF0aFBhcnNlciA9IG5ldyBiaW5hcnlfcGFyc2VyXzEuQmluYXJ5UGFyc2VyKHRoaXMudG9TdHJpbmcoKSk7XG4gICAgICAgIHdoaWxlICghcGF0aFBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAganNvbi5wdXNoKFBhdGguZnJvbVBhcnNlcihwYXRoUGFyc2VyKS50b0pTT04oKSk7XG4gICAgICAgICAgICBwYXRoUGFyc2VyLnNraXAoMSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGpzb247XG4gICAgfVxufVxuZXhwb3J0cy5QYXRoU2V0ID0gUGF0aFNldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtc2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/path-set.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/serialized-type.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comparable = exports.SerializedType = void 0;\nconst binary_serializer_1 = __webpack_require__(/*! ../serdes/binary-serializer */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * The base class for all binary-codec types\n */\nclass SerializedType {\n    constructor(bytes) {\n        this.bytes = new Uint8Array(0);\n        this.bytes = bytes !== null && bytes !== void 0 ? bytes : new Uint8Array(0);\n    }\n    static fromParser(parser, hint) {\n        throw new Error('fromParser not implemented');\n        return this.fromParser(parser, hint);\n    }\n    static from(value) {\n        throw new Error('from not implemented');\n        return this.from(value);\n    }\n    /**\n     * Write the bytes representation of a SerializedType to a BytesList\n     *\n     * @param list The BytesList to write SerializedType bytes to\n     */\n    toBytesSink(list) {\n        list.put(this.bytes);\n    }\n    /**\n     * Get the hex representation of a SerializedType's bytes\n     *\n     * @returns hex String of this.bytes\n     */\n    toHex() {\n        return (0, utils_1.bytesToHex)(this.toBytes());\n    }\n    /**\n     * Get the bytes representation of a SerializedType\n     *\n     * @returns A Uint8Array of the bytes\n     */\n    toBytes() {\n        if (this.bytes) {\n            return this.bytes;\n        }\n        const bytes = new binary_serializer_1.BytesList();\n        this.toBytesSink(bytes);\n        return bytes.toBytes();\n    }\n    /**\n     * Return the JSON representation of a SerializedType\n     *\n     * @param _definitions rippled definitions used to parse the values of transaction types and such.\n     *                          Unused in default, but used in STObject, STArray\n     *                          Can be customized for sidechains and amendments.\n     * @returns any type, if not overloaded returns hexString representation of bytes\n     */\n    toJSON(_definitions, _fieldName) {\n        return this.toHex();\n    }\n    /**\n     * @returns hexString representation of this.bytes\n     */\n    toString() {\n        return this.toHex();\n    }\n}\nexports.SerializedType = SerializedType;\n/**\n * Base class for SerializedTypes that are comparable.\n *\n * @template T - What types you want to allow comparisons between. You must specify all types. Primarily used to allow\n * comparisons between built-in types (like `string`) and SerializedType subclasses (like `Hash`).\n *\n * Ex. `class Hash extends Comparable<Hash | string>`\n */\nclass Comparable extends SerializedType {\n    lt(other) {\n        return this.compareTo(other) < 0;\n    }\n    eq(other) {\n        return this.compareTo(other) === 0;\n    }\n    gt(other) {\n        return this.compareTo(other) > 0;\n    }\n    gte(other) {\n        return this.compareTo(other) > -1;\n    }\n    lte(other) {\n        return this.compareTo(other) < 1;\n    }\n    /**\n     * Overload this method to define how two Comparable SerializedTypes are compared\n     *\n     * @param other The comparable object to compare this to\n     * @returns A number denoting the relationship of this and other\n     */\n    compareTo(other) {\n        throw new Error(`cannot compare ${this.toString()} and ${other.toString()}`);\n    }\n}\nexports.Comparable = Comparable;\n//# sourceMappingURL=serialized-type.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9zZXJpYWxpemVkLXR5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsc0JBQXNCO0FBQzNDLDRCQUE0QixtQkFBTyxDQUFDLGtIQUE2QjtBQUNqRSxnQkFBZ0IsbUJBQU8sQ0FBQywrRkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLGlCQUFpQixNQUFNLGlCQUFpQjtBQUNsRjtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvc2VyaWFsaXplZC10eXBlLmpzPzkyOWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBhcmFibGUgPSBleHBvcnRzLlNlcmlhbGl6ZWRUeXBlID0gdm9pZCAwO1xuY29uc3QgYmluYXJ5X3NlcmlhbGl6ZXJfMSA9IHJlcXVpcmUoXCIuLi9zZXJkZXMvYmluYXJ5LXNlcmlhbGl6ZXJcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkB4cnBsZi9pc29tb3JwaGljL3V0aWxzXCIpO1xuLyoqXG4gKiBUaGUgYmFzZSBjbGFzcyBmb3IgYWxsIGJpbmFyeS1jb2RlYyB0eXBlc1xuICovXG5jbGFzcyBTZXJpYWxpemVkVHlwZSB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgdGhpcy5ieXRlcyA9IG5ldyBVaW50OEFycmF5KDApO1xuICAgICAgICB0aGlzLmJ5dGVzID0gYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogbmV3IFVpbnQ4QXJyYXkoMCk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlciwgaGludCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Zyb21QYXJzZXIgbm90IGltcGxlbWVudGVkJyk7XG4gICAgICAgIHJldHVybiB0aGlzLmZyb21QYXJzZXIocGFyc2VyLCBoaW50KTtcbiAgICB9XG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdmcm9tIG5vdCBpbXBsZW1lbnRlZCcpO1xuICAgICAgICByZXR1cm4gdGhpcy5mcm9tKHZhbHVlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgdGhlIGJ5dGVzIHJlcHJlc2VudGF0aW9uIG9mIGEgU2VyaWFsaXplZFR5cGUgdG8gYSBCeXRlc0xpc3RcbiAgICAgKlxuICAgICAqIEBwYXJhbSBsaXN0IFRoZSBCeXRlc0xpc3QgdG8gd3JpdGUgU2VyaWFsaXplZFR5cGUgYnl0ZXMgdG9cbiAgICAgKi9cbiAgICB0b0J5dGVzU2luayhsaXN0KSB7XG4gICAgICAgIGxpc3QucHV0KHRoaXMuYnl0ZXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGhleCByZXByZXNlbnRhdGlvbiBvZiBhIFNlcmlhbGl6ZWRUeXBlJ3MgYnl0ZXNcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIGhleCBTdHJpbmcgb2YgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvSGV4KCkge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkodGhpcy50b0J5dGVzKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGVzIHJlcHJlc2VudGF0aW9uIG9mIGEgU2VyaWFsaXplZFR5cGVcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEEgVWludDhBcnJheSBvZiB0aGUgYnl0ZXNcbiAgICAgKi9cbiAgICB0b0J5dGVzKCkge1xuICAgICAgICBpZiAodGhpcy5ieXRlcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYnl0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnl0ZXMgPSBuZXcgYmluYXJ5X3NlcmlhbGl6ZXJfMS5CeXRlc0xpc3QoKTtcbiAgICAgICAgdGhpcy50b0J5dGVzU2luayhieXRlcyk7XG4gICAgICAgIHJldHVybiBieXRlcy50b0J5dGVzKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiBhIFNlcmlhbGl6ZWRUeXBlXG4gICAgICpcbiAgICAgKiBAcGFyYW0gX2RlZmluaXRpb25zIHJpcHBsZWQgZGVmaW5pdGlvbnMgdXNlZCB0byBwYXJzZSB0aGUgdmFsdWVzIG9mIHRyYW5zYWN0aW9uIHR5cGVzIGFuZCBzdWNoLlxuICAgICAqICAgICAgICAgICAgICAgICAgICAgICAgICBVbnVzZWQgaW4gZGVmYXVsdCwgYnV0IHVzZWQgaW4gU1RPYmplY3QsIFNUQXJyYXlcbiAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FuIGJlIGN1c3RvbWl6ZWQgZm9yIHNpZGVjaGFpbnMgYW5kIGFtZW5kbWVudHMuXG4gICAgICogQHJldHVybnMgYW55IHR5cGUsIGlmIG5vdCBvdmVybG9hZGVkIHJldHVybnMgaGV4U3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGJ5dGVzXG4gICAgICovXG4gICAgdG9KU09OKF9kZWZpbml0aW9ucywgX2ZpZWxkTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy50b0hleCgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBoZXhTdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcy5ieXRlc1xuICAgICAqL1xuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50b0hleCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuU2VyaWFsaXplZFR5cGUgPSBTZXJpYWxpemVkVHlwZTtcbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgU2VyaWFsaXplZFR5cGVzIHRoYXQgYXJlIGNvbXBhcmFibGUuXG4gKlxuICogQHRlbXBsYXRlIFQgLSBXaGF0IHR5cGVzIHlvdSB3YW50IHRvIGFsbG93IGNvbXBhcmlzb25zIGJldHdlZW4uIFlvdSBtdXN0IHNwZWNpZnkgYWxsIHR5cGVzLiBQcmltYXJpbHkgdXNlZCB0byBhbGxvd1xuICogY29tcGFyaXNvbnMgYmV0d2VlbiBidWlsdC1pbiB0eXBlcyAobGlrZSBgc3RyaW5nYCkgYW5kIFNlcmlhbGl6ZWRUeXBlIHN1YmNsYXNzZXMgKGxpa2UgYEhhc2hgKS5cbiAqXG4gKiBFeC4gYGNsYXNzIEhhc2ggZXh0ZW5kcyBDb21wYXJhYmxlPEhhc2ggfCBzdHJpbmc+YFxuICovXG5jbGFzcyBDb21wYXJhYmxlIGV4dGVuZHMgU2VyaWFsaXplZFR5cGUge1xuICAgIGx0KG90aGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVUbyhvdGhlcikgPCAwO1xuICAgIH1cbiAgICBlcShvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVG8ob3RoZXIpID09PSAwO1xuICAgIH1cbiAgICBndChvdGhlcikge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wYXJlVG8ob3RoZXIpID4gMDtcbiAgICB9XG4gICAgZ3RlKG90aGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVUbyhvdGhlcikgPiAtMTtcbiAgICB9XG4gICAgbHRlKG90aGVyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBhcmVUbyhvdGhlcikgPCAxO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPdmVybG9hZCB0aGlzIG1ldGhvZCB0byBkZWZpbmUgaG93IHR3byBDb21wYXJhYmxlIFNlcmlhbGl6ZWRUeXBlcyBhcmUgY29tcGFyZWRcbiAgICAgKlxuICAgICAqIEBwYXJhbSBvdGhlciBUaGUgY29tcGFyYWJsZSBvYmplY3QgdG8gY29tcGFyZSB0aGlzIHRvXG4gICAgICogQHJldHVybnMgQSBudW1iZXIgZGVub3RpbmcgdGhlIHJlbGF0aW9uc2hpcCBvZiB0aGlzIGFuZCBvdGhlclxuICAgICAqL1xuICAgIGNvbXBhcmVUbyhvdGhlcikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYGNhbm5vdCBjb21wYXJlICR7dGhpcy50b1N0cmluZygpfSBhbmQgJHtvdGhlci50b1N0cmluZygpfWApO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29tcGFyYWJsZSA9IENvbXBhcmFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJpYWxpemVkLXR5cGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-array.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/st-array.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.STArray = void 0;\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst st_object_1 = __webpack_require__(/*! ./st-object */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-object.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst ARRAY_END_MARKER = Uint8Array.from([0xf1]);\nconst ARRAY_END_MARKER_NAME = 'ArrayEndMarker';\nconst OBJECT_END_MARKER = Uint8Array.from([0xe1]);\n/**\n * TypeGuard for Array<JsonObject>\n */\nfunction isObjects(args) {\n    return (Array.isArray(args) &&\n        args.every((arg) => typeof arg === 'object' &&\n            Object.keys(arg).length === 1 &&\n            typeof Object.values(arg)[0] === 'object'));\n}\n/**\n * Class for serializing and deserializing Arrays of Objects\n */\nclass STArray extends serialized_type_1.SerializedType {\n    /**\n     * Construct an STArray from a BinaryParser\n     *\n     * @param parser BinaryParser to parse an STArray from\n     * @returns An STArray Object\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        while (!parser.end()) {\n            const field = parser.readField();\n            if (field.name === ARRAY_END_MARKER_NAME) {\n                break;\n            }\n            bytes.push(field.header, parser.readFieldValue(field).toBytes(), OBJECT_END_MARKER);\n        }\n        bytes.push(ARRAY_END_MARKER);\n        return new STArray((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Construct an STArray from an Array of JSON Objects\n     *\n     * @param value STArray or Array of Objects to parse into an STArray\n     * @param definitions optional, types and values to use to encode/decode a transaction\n     * @returns An STArray object\n     */\n    static from(value, definitions = enums_1.DEFAULT_DEFINITIONS) {\n        if (value instanceof STArray) {\n            return value;\n        }\n        if (isObjects(value)) {\n            const bytes = [];\n            value.forEach((obj) => {\n                bytes.push(st_object_1.STObject.from(obj, undefined, definitions).toBytes());\n            });\n            bytes.push(ARRAY_END_MARKER);\n            return new STArray((0, utils_1.concat)(bytes));\n        }\n        throw new Error('Cannot construct STArray from value given');\n    }\n    /**\n     * Return the JSON representation of this.bytes\n     *\n     * @param definitions optional, types and values to use to encode/decode a transaction\n     * @returns An Array of JSON objects\n     */\n    toJSON(definitions = enums_1.DEFAULT_DEFINITIONS) {\n        const result = [];\n        const arrayParser = new binary_parser_1.BinaryParser(this.toString(), definitions);\n        while (!arrayParser.end()) {\n            const field = arrayParser.readField();\n            if (field.name === ARRAY_END_MARKER_NAME) {\n                break;\n            }\n            const outer = {};\n            outer[field.name] = st_object_1.STObject.fromParser(arrayParser).toJSON(definitions);\n            result.push(outer);\n        }\n        return result;\n    }\n}\nexports.STArray = STArray;\n//# sourceMappingURL=st-array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy9zdC1hcnJheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2YsZ0JBQWdCLG1CQUFPLENBQUMsa0ZBQVU7QUFDbEMsMEJBQTBCLG1CQUFPLENBQUMscUdBQW1CO0FBQ3JELG9CQUFvQixtQkFBTyxDQUFDLHlGQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLDBHQUF5QjtBQUN6RCxnQkFBZ0IsbUJBQU8sQ0FBQywrRkFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3N0LWFycmF5LmpzP2U0MjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNUQXJyYXkgPSB2b2lkIDA7XG5jb25zdCBlbnVtc18xID0gcmVxdWlyZShcIi4uL2VudW1zXCIpO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCBzdF9vYmplY3RfMSA9IHJlcXVpcmUoXCIuL3N0LW9iamVjdFwiKTtcbmNvbnN0IGJpbmFyeV9wYXJzZXJfMSA9IHJlcXVpcmUoXCIuLi9zZXJkZXMvYmluYXJ5LXBhcnNlclwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG5jb25zdCBBUlJBWV9FTkRfTUFSS0VSID0gVWludDhBcnJheS5mcm9tKFsweGYxXSk7XG5jb25zdCBBUlJBWV9FTkRfTUFSS0VSX05BTUUgPSAnQXJyYXlFbmRNYXJrZXInO1xuY29uc3QgT0JKRUNUX0VORF9NQVJLRVIgPSBVaW50OEFycmF5LmZyb20oWzB4ZTFdKTtcbi8qKlxuICogVHlwZUd1YXJkIGZvciBBcnJheTxKc29uT2JqZWN0PlxuICovXG5mdW5jdGlvbiBpc09iamVjdHMoYXJncykge1xuICAgIHJldHVybiAoQXJyYXkuaXNBcnJheShhcmdzKSAmJlxuICAgICAgICBhcmdzLmV2ZXJ5KChhcmcpID0+IHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICBPYmplY3Qua2V5cyhhcmcpLmxlbmd0aCA9PT0gMSAmJlxuICAgICAgICAgICAgdHlwZW9mIE9iamVjdC52YWx1ZXMoYXJnKVswXSA9PT0gJ29iamVjdCcpKTtcbn1cbi8qKlxuICogQ2xhc3MgZm9yIHNlcmlhbGl6aW5nIGFuZCBkZXNlcmlhbGl6aW5nIEFycmF5cyBvZiBPYmplY3RzXG4gKi9cbmNsYXNzIFNUQXJyYXkgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSB7XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIFNUQXJyYXkgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcGFyc2UgYW4gU1RBcnJheSBmcm9tXG4gICAgICogQHJldHVybnMgQW4gU1RBcnJheSBPYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBbXTtcbiAgICAgICAgd2hpbGUgKCFwYXJzZXIuZW5kKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gcGFyc2VyLnJlYWRGaWVsZCgpO1xuICAgICAgICAgICAgaWYgKGZpZWxkLm5hbWUgPT09IEFSUkFZX0VORF9NQVJLRVJfTkFNRSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnl0ZXMucHVzaChmaWVsZC5oZWFkZXIsIHBhcnNlci5yZWFkRmllbGRWYWx1ZShmaWVsZCkudG9CeXRlcygpLCBPQkpFQ1RfRU5EX01BUktFUik7XG4gICAgICAgIH1cbiAgICAgICAgYnl0ZXMucHVzaChBUlJBWV9FTkRfTUFSS0VSKTtcbiAgICAgICAgcmV0dXJuIG5ldyBTVEFycmF5KCgwLCB1dGlsc18xLmNvbmNhdCkoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGFuIFNUQXJyYXkgZnJvbSBhbiBBcnJheSBvZiBKU09OIE9iamVjdHNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBTVEFycmF5IG9yIEFycmF5IG9mIE9iamVjdHMgdG8gcGFyc2UgaW50byBhbiBTVEFycmF5XG4gICAgICogQHBhcmFtIGRlZmluaXRpb25zIG9wdGlvbmFsLCB0eXBlcyBhbmQgdmFsdWVzIHRvIHVzZSB0byBlbmNvZGUvZGVjb2RlIGEgdHJhbnNhY3Rpb25cbiAgICAgKiBAcmV0dXJucyBBbiBTVEFycmF5IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlLCBkZWZpbml0aW9ucyA9IGVudW1zXzEuREVGQVVMVF9ERUZJTklUSU9OUykge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBTVEFycmF5KSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzT2JqZWN0cyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgICAgICB2YWx1ZS5mb3JFYWNoKChvYmopID0+IHtcbiAgICAgICAgICAgICAgICBieXRlcy5wdXNoKHN0X29iamVjdF8xLlNUT2JqZWN0LmZyb20ob2JqLCB1bmRlZmluZWQsIGRlZmluaXRpb25zKS50b0J5dGVzKCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBieXRlcy5wdXNoKEFSUkFZX0VORF9NQVJLRVIpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBTVEFycmF5KCgwLCB1dGlsc18xLmNvbmNhdCkoYnl0ZXMpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgU1RBcnJheSBmcm9tIHZhbHVlIGdpdmVuJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybiB0aGUgSlNPTiByZXByZXNlbnRhdGlvbiBvZiB0aGlzLmJ5dGVzXG4gICAgICpcbiAgICAgKiBAcGFyYW0gZGVmaW5pdGlvbnMgb3B0aW9uYWwsIHR5cGVzIGFuZCB2YWx1ZXMgdG8gdXNlIHRvIGVuY29kZS9kZWNvZGUgYSB0cmFuc2FjdGlvblxuICAgICAqIEByZXR1cm5zIEFuIEFycmF5IG9mIEpTT04gb2JqZWN0c1xuICAgICAqL1xuICAgIHRvSlNPTihkZWZpbml0aW9ucyA9IGVudW1zXzEuREVGQVVMVF9ERUZJTklUSU9OUykge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgY29uc3QgYXJyYXlQYXJzZXIgPSBuZXcgYmluYXJ5X3BhcnNlcl8xLkJpbmFyeVBhcnNlcih0aGlzLnRvU3RyaW5nKCksIGRlZmluaXRpb25zKTtcbiAgICAgICAgd2hpbGUgKCFhcnJheVBhcnNlci5lbmQoKSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBhcnJheVBhcnNlci5yZWFkRmllbGQoKTtcbiAgICAgICAgICAgIGlmIChmaWVsZC5uYW1lID09PSBBUlJBWV9FTkRfTUFSS0VSX05BTUUpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG91dGVyID0ge307XG4gICAgICAgICAgICBvdXRlcltmaWVsZC5uYW1lXSA9IHN0X29iamVjdF8xLlNUT2JqZWN0LmZyb21QYXJzZXIoYXJyYXlQYXJzZXIpLnRvSlNPTihkZWZpbml0aW9ucyk7XG4gICAgICAgICAgICByZXN1bHQucHVzaChvdXRlcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLlNUQXJyYXkgPSBTVEFycmF5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3QtYXJyYXkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-array.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-object.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/st-object.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.STObject = void 0;\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst ripple_address_codec_1 = __webpack_require__(/*! ripple-address-codec */ \"(ssr)/../../node_modules/ripple-address-codec/dist/index.js\");\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ../serdes/binary-serializer */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst st_array_1 = __webpack_require__(/*! ./st-array */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-array.js\");\nconst uint_64_1 = __webpack_require__(/*! ./uint-64 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-64.js\");\nconst OBJECT_END_MARKER_BYTE = Uint8Array.from([0xe1]);\nconst OBJECT_END_MARKER = 'ObjectEndMarker';\nconst ST_OBJECT = 'STObject';\nconst DESTINATION = 'Destination';\nconst ACCOUNT = 'Account';\nconst SOURCE_TAG = 'SourceTag';\nconst DEST_TAG = 'DestinationTag';\n/**\n * Break down an X-Address into an account and a tag\n *\n * @param field Name of field\n * @param xAddress X-Address corresponding to the field\n */\nfunction handleXAddress(field, xAddress) {\n    const decoded = (0, ripple_address_codec_1.xAddressToClassicAddress)(xAddress);\n    let tagName;\n    if (field === DESTINATION)\n        tagName = DEST_TAG;\n    else if (field === ACCOUNT)\n        tagName = SOURCE_TAG;\n    else if (decoded.tag !== false)\n        throw new Error(`${field} cannot have an associated tag`);\n    return decoded.tag !== false\n        ? { [field]: decoded.classicAddress, [tagName]: decoded.tag }\n        : { [field]: decoded.classicAddress };\n}\n/**\n * Validate that two objects don't both have the same tag fields\n *\n * @param obj1 First object to check for tags\n * @param obj2 Second object to check for tags\n * @throws When both objects have SourceTag or DestinationTag\n */\nfunction checkForDuplicateTags(obj1, obj2) {\n    if (!(obj1[SOURCE_TAG] === undefined || obj2[SOURCE_TAG] === undefined))\n        throw new Error('Cannot have Account X-Address and SourceTag');\n    if (!(obj1[DEST_TAG] === undefined || obj2[DEST_TAG] === undefined))\n        throw new Error('Cannot have Destination X-Address and DestinationTag');\n}\n/**\n * Class for Serializing/Deserializing objects\n */\nclass STObject extends serialized_type_1.SerializedType {\n    /**\n     * Construct a STObject from a BinaryParser\n     *\n     * @param parser BinaryParser to read STObject from\n     * @returns A STObject object\n     */\n    static fromParser(parser) {\n        const list = new binary_serializer_1.BytesList();\n        const bytes = new binary_serializer_1.BinarySerializer(list);\n        while (!parser.end()) {\n            const field = parser.readField();\n            if (field.name === OBJECT_END_MARKER) {\n                break;\n            }\n            const associatedValue = parser.readFieldValue(field);\n            bytes.writeFieldAndValue(field, associatedValue);\n            if (field.type.name === ST_OBJECT) {\n                bytes.put(OBJECT_END_MARKER_BYTE);\n            }\n        }\n        return new STObject(list.toBytes());\n    }\n    /**\n     * Construct a STObject from a JSON object\n     *\n     * @param value An object to include\n     * @param filter optional, denote which field to include in serialized object\n     * @param definitions optional, types and values to use to encode/decode a transaction\n     * @returns a STObject object\n     */\n    static from(value, filter, definitions = enums_1.DEFAULT_DEFINITIONS) {\n        if (value instanceof STObject) {\n            return value;\n        }\n        const list = new binary_serializer_1.BytesList();\n        const bytes = new binary_serializer_1.BinarySerializer(list);\n        let isUnlModify = false;\n        const xAddressDecoded = Object.entries(value).reduce((acc, [key, val]) => {\n            let handled = undefined;\n            if (val && (0, ripple_address_codec_1.isValidXAddress)(val.toString())) {\n                handled = handleXAddress(key, val.toString());\n                checkForDuplicateTags(handled, value);\n            }\n            return Object.assign(acc, handled !== null && handled !== void 0 ? handled : { [key]: val });\n        }, {});\n        function isValidFieldInstance(f) {\n            return (f !== undefined &&\n                xAddressDecoded[f.name] !== undefined &&\n                f.isSerialized);\n        }\n        let sorted = Object.keys(xAddressDecoded)\n            .map((f) => {\n            if (!(f in definitions.field)) {\n                if (f[0] === f[0].toLowerCase())\n                    return undefined;\n                throw new Error(`Field ${f} is not defined in the definitions`);\n            }\n            return definitions.field[f];\n        })\n            .filter(isValidFieldInstance)\n            .sort((a, b) => {\n            return a.ordinal - b.ordinal;\n        });\n        if (filter !== undefined) {\n            sorted = sorted.filter(filter);\n        }\n        sorted.forEach((field) => {\n            const associatedValue = field.type.name === ST_OBJECT\n                ? this.from(xAddressDecoded[field.name], undefined, definitions)\n                : field.type.name === 'STArray'\n                    ? st_array_1.STArray.from(xAddressDecoded[field.name], definitions)\n                    : field.type.name === 'UInt64'\n                        ? uint_64_1.UInt64.from(xAddressDecoded[field.name], field.name)\n                        : field.associatedType.from(xAddressDecoded[field.name]);\n            if (associatedValue == undefined) {\n                throw new TypeError(`Unable to interpret \"${field.name}: ${xAddressDecoded[field.name]}\".`);\n            }\n            if (associatedValue.name === 'UNLModify') {\n                // triggered when the TransactionType field has a value of 'UNLModify'\n                isUnlModify = true;\n            }\n            // true when in the UNLModify pseudotransaction (after the transaction type has been processed) and working with the\n            // Account field\n            // The Account field must not be a part of the UNLModify pseudotransaction encoding, due to a bug in rippled\n            const isUnlModifyWorkaround = field.name == 'Account' && isUnlModify;\n            bytes.writeFieldAndValue(field, associatedValue, isUnlModifyWorkaround);\n            if (field.type.name === ST_OBJECT) {\n                bytes.put(OBJECT_END_MARKER_BYTE);\n            }\n        });\n        return new STObject(list.toBytes());\n    }\n    /**\n     * Get the JSON interpretation of this.bytes\n     * @param definitions rippled definitions used to parse the values of transaction types and such.\n     *                          Can be customized for sidechains and amendments.\n     * @returns a JSON object\n     */\n    toJSON(definitions) {\n        const objectParser = new binary_parser_1.BinaryParser(this.toString(), definitions);\n        const accumulator = {};\n        while (!objectParser.end()) {\n            const field = objectParser.readField();\n            if (field.name === OBJECT_END_MARKER) {\n                break;\n            }\n            accumulator[field.name] = objectParser\n                .readFieldValue(field)\n                .toJSON(definitions, field.name);\n        }\n        return accumulator;\n    }\n}\nexports.STObject = STObject;\n//# sourceMappingURL=st-object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/st-object.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-16.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/uint-16.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt16 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\n/**\n * Derived UInt class for serializing/deserializing 16 bit UInt\n */\nclass UInt16 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt16.defaultUInt16.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt16(parser.read(UInt16.width));\n    }\n    /**\n     * Construct a UInt16 object from a number\n     *\n     * @param val UInt16 object or number\n     */\n    static from(val) {\n        if (val instanceof UInt16) {\n            return val;\n        }\n        if (typeof val === 'number') {\n            UInt16.checkUintRange(val, 0, 0xffff);\n            const buf = new Uint8Array(UInt16.width);\n            (0, utils_1.writeUInt16BE)(buf, val, 0);\n            return new UInt16(buf);\n        }\n        throw new Error('Can not construct UInt16 with given value');\n    }\n    /**\n     * get the value of a UInt16 object\n     *\n     * @returns the number represented by this.bytes\n     */\n    valueOf() {\n        return parseInt((0, utils_1.readUInt16BE)(this.bytes, 0));\n    }\n}\nexports.UInt16 = UInt16;\nUInt16.width = 16 / 8; // 2\nUInt16.defaultUInt16 = new UInt16(new Uint8Array(UInt16.width));\n//# sourceMappingURL=uint-16.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LTE2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxlQUFlLG1CQUFPLENBQUMsK0VBQVE7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsNEVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkLHVCQUF1QjtBQUN2QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvdWludC0xNi5qcz83ZTk5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VSW50MTYgPSB2b2lkIDA7XG5jb25zdCB1aW50XzEgPSByZXF1aXJlKFwiLi91aW50XCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbi8qKlxuICogRGVyaXZlZCBVSW50IGNsYXNzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nIDE2IGJpdCBVSW50XG4gKi9cbmNsYXNzIFVJbnQxNiBleHRlbmRzIHVpbnRfMS5VSW50IHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBVSW50MTYuZGVmYXVsdFVJbnQxNi5ieXRlcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICByZXR1cm4gbmV3IFVJbnQxNihwYXJzZXIucmVhZChVSW50MTYud2lkdGgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgVUludDE2IG9iamVjdCBmcm9tIGEgbnVtYmVyXG4gICAgICpcbiAgICAgKiBAcGFyYW0gdmFsIFVJbnQxNiBvYmplY3Qgb3IgbnVtYmVyXG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsKSB7XG4gICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBVSW50MTYpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBVSW50MTYuY2hlY2tVaW50UmFuZ2UodmFsLCAwLCAweGZmZmYpO1xuICAgICAgICAgICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoVUludDE2LndpZHRoKTtcbiAgICAgICAgICAgICgwLCB1dGlsc18xLndyaXRlVUludDE2QkUpKGJ1ZiwgdmFsLCAwKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVUludDE2KGJ1Zik7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gbm90IGNvbnN0cnVjdCBVSW50MTYgd2l0aCBnaXZlbiB2YWx1ZScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZXQgdGhlIHZhbHVlIG9mIGEgVUludDE2IG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIG51bWJlciByZXByZXNlbnRlZCBieSB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdmFsdWVPZigpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KCgwLCB1dGlsc18xLnJlYWRVSW50MTZCRSkodGhpcy5ieXRlcywgMCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuVUludDE2ID0gVUludDE2O1xuVUludDE2LndpZHRoID0gMTYgLyA4OyAvLyAyXG5VSW50MTYuZGVmYXVsdFVJbnQxNiA9IG5ldyBVSW50MTYobmV3IFVpbnQ4QXJyYXkoVUludDE2LndpZHRoKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aW50LTE2LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-16.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-32.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/uint-32.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt32 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\n/**\n * Derived UInt class for serializing/deserializing 32 bit UInt\n */\nclass UInt32 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt32.defaultUInt32.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt32(parser.read(UInt32.width));\n    }\n    /**\n     * Construct a UInt32 object from a number\n     *\n     * @param val UInt32 object or number\n     */\n    static from(val) {\n        if (val instanceof UInt32) {\n            return val;\n        }\n        const buf = new Uint8Array(UInt32.width);\n        if (typeof val === 'string') {\n            const num = Number.parseInt(val);\n            (0, utils_1.writeUInt32BE)(buf, num, 0);\n            return new UInt32(buf);\n        }\n        if (typeof val === 'number') {\n            UInt32.checkUintRange(val, 0, 0xffffffff);\n            (0, utils_1.writeUInt32BE)(buf, val, 0);\n            return new UInt32(buf);\n        }\n        throw new Error('Cannot construct UInt32 from given value');\n    }\n    /**\n     * get the value of a UInt32 object\n     *\n     * @returns the number represented by this.bytes\n     */\n    valueOf() {\n        return parseInt((0, utils_1.readUInt32BE)(this.bytes, 0), 10);\n    }\n}\nexports.UInt32 = UInt32;\nUInt32.width = 32 / 8; // 4\nUInt32.defaultUInt32 = new UInt32(new Uint8Array(UInt32.width));\n//# sourceMappingURL=uint-32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LTMyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxlQUFlLG1CQUFPLENBQUMsK0VBQVE7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsNEVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtMzIuanM/ZDgzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVUludDMyID0gdm9pZCAwO1xuY29uc3QgdWludF8xID0gcmVxdWlyZShcIi4vdWludFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG4vKipcbiAqIERlcml2ZWQgVUludCBjbGFzcyBmb3Igc2VyaWFsaXppbmcvZGVzZXJpYWxpemluZyAzMiBiaXQgVUludFxuICovXG5jbGFzcyBVSW50MzIgZXh0ZW5kcyB1aW50XzEuVUludCB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogVUludDMyLmRlZmF1bHRVSW50MzIuYnl0ZXMpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVSW50MzIocGFyc2VyLnJlYWQoVUludDMyLndpZHRoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIFVJbnQzMiBvYmplY3QgZnJvbSBhIG51bWJlclxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbCBVSW50MzIgb2JqZWN0IG9yIG51bWJlclxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbCkge1xuICAgICAgICBpZiAodmFsIGluc3RhbmNlb2YgVUludDMyKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KFVJbnQzMi53aWR0aCk7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgY29uc3QgbnVtID0gTnVtYmVyLnBhcnNlSW50KHZhbCk7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMS53cml0ZVVJbnQzMkJFKShidWYsIG51bSwgMCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVJbnQzMihidWYpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgVUludDMyLmNoZWNrVWludFJhbmdlKHZhbCwgMCwgMHhmZmZmZmZmZik7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMS53cml0ZVVJbnQzMkJFKShidWYsIHZhbCwgMCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVJbnQzMihidWYpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2Fubm90IGNvbnN0cnVjdCBVSW50MzIgZnJvbSBnaXZlbiB2YWx1ZScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBnZXQgdGhlIHZhbHVlIG9mIGEgVUludDMyIG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIG51bWJlciByZXByZXNlbnRlZCBieSB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdmFsdWVPZigpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KCgwLCB1dGlsc18xLnJlYWRVSW50MzJCRSkodGhpcy5ieXRlcywgMCksIDEwKTtcbiAgICB9XG59XG5leHBvcnRzLlVJbnQzMiA9IFVJbnQzMjtcblVJbnQzMi53aWR0aCA9IDMyIC8gODsgLy8gNFxuVUludDMyLmRlZmF1bHRVSW50MzIgPSBuZXcgVUludDMyKG5ldyBVaW50OEFycmF5KFVJbnQzMi53aWR0aCkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWludC0zMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-32.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-64.js":
/*!********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/uint-64.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt64 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\nconst enums_1 = __webpack_require__(/*! ../enums */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/enums/index.js\");\nconst HEX_REGEX = /^[a-fA-F0-9]{1,16}$/;\nconst BASE10_REGEX = /^[0-9]{1,20}$/;\nconst mask = BigInt(0x00000000ffffffff);\nfunction useBase10(fieldName) {\n    return (fieldName === 'MaximumAmount' ||\n        fieldName === 'OutstandingAmount' ||\n        fieldName === 'MPTAmount');\n}\n/**\n * Derived UInt class for serializing/deserializing 64 bit UInt\n */\nclass UInt64 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt64.defaultUInt64.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt64(parser.read(UInt64.width));\n    }\n    /**\n     * Construct a UInt64 object\n     *\n     * @param val A UInt64, hex-string, bigInt, or number\n     * @returns A UInt64 object\n     */\n    static from(val, fieldName = '') {\n        if (val instanceof UInt64) {\n            return val;\n        }\n        let buf = new Uint8Array(UInt64.width);\n        if (typeof val === 'number') {\n            if (val < 0) {\n                throw new Error('value must be an unsigned integer');\n            }\n            const number = BigInt(val);\n            const intBuf = [new Uint8Array(4), new Uint8Array(4)];\n            (0, utils_2.writeUInt32BE)(intBuf[0], Number(number >> BigInt(32)), 0);\n            (0, utils_2.writeUInt32BE)(intBuf[1], Number(number & BigInt(mask)), 0);\n            return new UInt64((0, utils_1.concat)(intBuf));\n        }\n        if (typeof val === 'string') {\n            if (useBase10(fieldName)) {\n                if (!BASE10_REGEX.test(val)) {\n                    throw new Error(`${fieldName} ${val} is not a valid base 10 string`);\n                }\n                val = BigInt(val).toString(16);\n            }\n            if (typeof val === 'string' && !HEX_REGEX.test(val)) {\n                throw new Error(`${val} is not a valid hex-string`);\n            }\n            const strBuf = val.padStart(16, '0');\n            buf = (0, utils_1.hexToBytes)(strBuf);\n            return new UInt64(buf);\n        }\n        if (typeof val === 'bigint') {\n            const intBuf = [new Uint8Array(4), new Uint8Array(4)];\n            (0, utils_2.writeUInt32BE)(intBuf[0], Number(Number(val >> BigInt(32))), 0);\n            (0, utils_2.writeUInt32BE)(intBuf[1], Number(val & BigInt(mask)), 0);\n            return new UInt64((0, utils_1.concat)(intBuf));\n        }\n        throw new Error('Cannot construct UInt64 from given value');\n    }\n    /**\n     * The JSON representation of a UInt64 object\n     *\n     * @returns a hex-string\n     */\n    toJSON(_definitions = enums_1.DEFAULT_DEFINITIONS, fieldName = '') {\n        const hexString = (0, utils_1.bytesToHex)(this.bytes);\n        if (useBase10(fieldName)) {\n            return BigInt('0x' + hexString).toString(10);\n        }\n        return hexString;\n    }\n    /**\n     * Get the value of the UInt64\n     *\n     * @returns the number represented buy this.bytes\n     */\n    valueOf() {\n        const msb = BigInt((0, utils_2.readUInt32BE)(this.bytes.slice(0, 4), 0));\n        const lsb = BigInt((0, utils_2.readUInt32BE)(this.bytes.slice(4), 0));\n        return (msb << BigInt(32)) | lsb;\n    }\n    /**\n     * Get the bytes representation of the UInt64 object\n     *\n     * @returns 8 bytes representing the UInt64\n     */\n    toBytes() {\n        return this.bytes;\n    }\n}\nexports.UInt64 = UInt64;\nUInt64.width = 64 / 8; // 8\nUInt64.defaultUInt64 = new UInt64(new Uint8Array(UInt64.width));\n//# sourceMappingURL=uint-64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LTY0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxlQUFlLG1CQUFPLENBQUMsK0VBQVE7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsK0ZBQXlCO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLDRFQUFVO0FBQ2xDLGdCQUFnQixtQkFBTyxDQUFDLGtGQUFVO0FBQ2xDLGdDQUFnQyxLQUFLO0FBQ3JDLDZCQUE2QixLQUFLO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFdBQVcsRUFBRSxLQUFLO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLEtBQUs7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCx1QkFBdUI7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQtNjQuanM/Zjg2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVUludDY0ID0gdm9pZCAwO1xuY29uc3QgdWludF8xID0gcmVxdWlyZShcIi4vdWludFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG5jb25zdCB1dGlsc18yID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuY29uc3QgZW51bXNfMSA9IHJlcXVpcmUoXCIuLi9lbnVtc1wiKTtcbmNvbnN0IEhFWF9SRUdFWCA9IC9eW2EtZkEtRjAtOV17MSwxNn0kLztcbmNvbnN0IEJBU0UxMF9SRUdFWCA9IC9eWzAtOV17MSwyMH0kLztcbmNvbnN0IG1hc2sgPSBCaWdJbnQoMHgwMDAwMDAwMGZmZmZmZmZmKTtcbmZ1bmN0aW9uIHVzZUJhc2UxMChmaWVsZE5hbWUpIHtcbiAgICByZXR1cm4gKGZpZWxkTmFtZSA9PT0gJ01heGltdW1BbW91bnQnIHx8XG4gICAgICAgIGZpZWxkTmFtZSA9PT0gJ091dHN0YW5kaW5nQW1vdW50JyB8fFxuICAgICAgICBmaWVsZE5hbWUgPT09ICdNUFRBbW91bnQnKTtcbn1cbi8qKlxuICogRGVyaXZlZCBVSW50IGNsYXNzIGZvciBzZXJpYWxpemluZy9kZXNlcmlhbGl6aW5nIDY0IGJpdCBVSW50XG4gKi9cbmNsYXNzIFVJbnQ2NCBleHRlbmRzIHVpbnRfMS5VSW50IHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBVSW50NjQuZGVmYXVsdFVJbnQ2NC5ieXRlcyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlcikge1xuICAgICAgICByZXR1cm4gbmV3IFVJbnQ2NChwYXJzZXIucmVhZChVSW50NjQud2lkdGgpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgVUludDY0IG9iamVjdFxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbCBBIFVJbnQ2NCwgaGV4LXN0cmluZywgYmlnSW50LCBvciBudW1iZXJcbiAgICAgKiBAcmV0dXJucyBBIFVJbnQ2NCBvYmplY3RcbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbSh2YWwsIGZpZWxkTmFtZSA9ICcnKSB7XG4gICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBVSW50NjQpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWw7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KFVJbnQ2NC53aWR0aCk7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgaWYgKHZhbCA8IDApIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3ZhbHVlIG11c3QgYmUgYW4gdW5zaWduZWQgaW50ZWdlcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgbnVtYmVyID0gQmlnSW50KHZhbCk7XG4gICAgICAgICAgICBjb25zdCBpbnRCdWYgPSBbbmV3IFVpbnQ4QXJyYXkoNCksIG5ldyBVaW50OEFycmF5KDQpXTtcbiAgICAgICAgICAgICgwLCB1dGlsc18yLndyaXRlVUludDMyQkUpKGludEJ1ZlswXSwgTnVtYmVyKG51bWJlciA+PiBCaWdJbnQoMzIpKSwgMCk7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMi53cml0ZVVJbnQzMkJFKShpbnRCdWZbMV0sIE51bWJlcihudW1iZXIgJiBCaWdJbnQobWFzaykpLCAwKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVUludDY0KCgwLCB1dGlsc18xLmNvbmNhdCkoaW50QnVmKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBpZiAodXNlQmFzZTEwKGZpZWxkTmFtZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIUJBU0UxMF9SRUdFWC50ZXN0KHZhbCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2ZpZWxkTmFtZX0gJHt2YWx9IGlzIG5vdCBhIHZhbGlkIGJhc2UgMTAgc3RyaW5nYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhbCA9IEJpZ0ludCh2YWwpLnRvU3RyaW5nKDE2KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnc3RyaW5nJyAmJiAhSEVYX1JFR0VYLnRlc3QodmFsKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHt2YWx9IGlzIG5vdCBhIHZhbGlkIGhleC1zdHJpbmdgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHN0ckJ1ZiA9IHZhbC5wYWRTdGFydCgxNiwgJzAnKTtcbiAgICAgICAgICAgIGJ1ZiA9ICgwLCB1dGlsc18xLmhleFRvQnl0ZXMpKHN0ckJ1Zik7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVJbnQ2NChidWYpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdmFsID09PSAnYmlnaW50Jykge1xuICAgICAgICAgICAgY29uc3QgaW50QnVmID0gW25ldyBVaW50OEFycmF5KDQpLCBuZXcgVWludDhBcnJheSg0KV07XG4gICAgICAgICAgICAoMCwgdXRpbHNfMi53cml0ZVVJbnQzMkJFKShpbnRCdWZbMF0sIE51bWJlcihOdW1iZXIodmFsID4+IEJpZ0ludCgzMikpKSwgMCk7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMi53cml0ZVVJbnQzMkJFKShpbnRCdWZbMV0sIE51bWJlcih2YWwgJiBCaWdJbnQobWFzaykpLCAwKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgVUludDY0KCgwLCB1dGlsc18xLmNvbmNhdCkoaW50QnVmKSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29uc3RydWN0IFVJbnQ2NCBmcm9tIGdpdmVuIHZhbHVlJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoZSBKU09OIHJlcHJlc2VudGF0aW9uIG9mIGEgVUludDY0IG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgYSBoZXgtc3RyaW5nXG4gICAgICovXG4gICAgdG9KU09OKF9kZWZpbml0aW9ucyA9IGVudW1zXzEuREVGQVVMVF9ERUZJTklUSU9OUywgZmllbGROYW1lID0gJycpIHtcbiAgICAgICAgY29uc3QgaGV4U3RyaW5nID0gKDAsIHV0aWxzXzEuYnl0ZXNUb0hleCkodGhpcy5ieXRlcyk7XG4gICAgICAgIGlmICh1c2VCYXNlMTAoZmllbGROYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuIEJpZ0ludCgnMHgnICsgaGV4U3RyaW5nKS50b1N0cmluZygxMCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGhleFN0cmluZztcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSB2YWx1ZSBvZiB0aGUgVUludDY0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB0aGUgbnVtYmVyIHJlcHJlc2VudGVkIGJ1eSB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdmFsdWVPZigpIHtcbiAgICAgICAgY29uc3QgbXNiID0gQmlnSW50KCgwLCB1dGlsc18yLnJlYWRVSW50MzJCRSkodGhpcy5ieXRlcy5zbGljZSgwLCA0KSwgMCkpO1xuICAgICAgICBjb25zdCBsc2IgPSBCaWdJbnQoKDAsIHV0aWxzXzIucmVhZFVJbnQzMkJFKSh0aGlzLmJ5dGVzLnNsaWNlKDQpLCAwKSk7XG4gICAgICAgIHJldHVybiAobXNiIDw8IEJpZ0ludCgzMikpIHwgbHNiO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGJ5dGVzIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBVSW50NjQgb2JqZWN0XG4gICAgICpcbiAgICAgKiBAcmV0dXJucyA4IGJ5dGVzIHJlcHJlc2VudGluZyB0aGUgVUludDY0XG4gICAgICovXG4gICAgdG9CeXRlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnl0ZXM7XG4gICAgfVxufVxuZXhwb3J0cy5VSW50NjQgPSBVSW50NjQ7XG5VSW50NjQud2lkdGggPSA2NCAvIDg7IC8vIDhcblVJbnQ2NC5kZWZhdWx0VUludDY0ID0gbmV3IFVJbnQ2NChuZXcgVWludDhBcnJheShVSW50NjQud2lkdGgpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQtNjQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-64.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-8.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/uint-8.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt8 = void 0;\nconst uint_1 = __webpack_require__(/*! ./uint */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\");\n/**\n * Derived UInt class for serializing/deserializing 8 bit UInt\n */\nclass UInt8 extends uint_1.UInt {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : UInt8.defaultUInt8.bytes);\n    }\n    static fromParser(parser) {\n        return new UInt8(parser.read(UInt8.width));\n    }\n    /**\n     * Construct a UInt8 object from a number\n     *\n     * @param val UInt8 object or number\n     */\n    static from(val) {\n        if (val instanceof UInt8) {\n            return val;\n        }\n        if (typeof val === 'number') {\n            UInt8.checkUintRange(val, 0, 0xff);\n            const buf = new Uint8Array(UInt8.width);\n            (0, utils_2.writeUInt8)(buf, val, 0);\n            return new UInt8(buf);\n        }\n        throw new Error('Cannot construct UInt8 from given value');\n    }\n    /**\n     * get the value of a UInt8 object\n     *\n     * @returns the number represented by this.bytes\n     */\n    valueOf() {\n        return parseInt((0, utils_1.bytesToHex)(this.bytes), 16);\n    }\n}\nexports.UInt8 = UInt8;\nUInt8.width = 8 / 8; // 1\nUInt8.defaultUInt8 = new UInt8(new Uint8Array(UInt8.width));\n//# sourceMappingURL=uint-8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LTguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLGVBQWUsbUJBQU8sQ0FBQywrRUFBUTtBQUMvQixnQkFBZ0IsbUJBQU8sQ0FBQywrRkFBeUI7QUFDakQsZ0JBQWdCLG1CQUFPLENBQUMsNEVBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLHFCQUFxQjtBQUNyQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9yaXBwbGUtYmluYXJ5LWNvZGVjL2Rpc3QvdHlwZXMvdWludC04LmpzP2NjMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVJbnQ4ID0gdm9pZCAwO1xuY29uc3QgdWludF8xID0gcmVxdWlyZShcIi4vdWludFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG5jb25zdCB1dGlsc18yID0gcmVxdWlyZShcIi4uL3V0aWxzXCIpO1xuLyoqXG4gKiBEZXJpdmVkIFVJbnQgY2xhc3MgZm9yIHNlcmlhbGl6aW5nL2Rlc2VyaWFsaXppbmcgOCBiaXQgVUludFxuICovXG5jbGFzcyBVSW50OCBleHRlbmRzIHVpbnRfMS5VSW50IHtcbiAgICBjb25zdHJ1Y3RvcihieXRlcykge1xuICAgICAgICBzdXBlcihieXRlcyAhPT0gbnVsbCAmJiBieXRlcyAhPT0gdm9pZCAwID8gYnl0ZXMgOiBVSW50OC5kZWZhdWx0VUludDguYnl0ZXMpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbVBhcnNlcihwYXJzZXIpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVSW50OChwYXJzZXIucmVhZChVSW50OC53aWR0aCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYSBVSW50OCBvYmplY3QgZnJvbSBhIG51bWJlclxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbCBVSW50OCBvYmplY3Qgb3IgbnVtYmVyXG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsKSB7XG4gICAgICAgIGlmICh2YWwgaW5zdGFuY2VvZiBVSW50OCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIFVJbnQ4LmNoZWNrVWludFJhbmdlKHZhbCwgMCwgMHhmZik7XG4gICAgICAgICAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheShVSW50OC53aWR0aCk7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMi53cml0ZVVJbnQ4KShidWYsIHZhbCwgMCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFVJbnQ4KGJ1Zik7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29uc3RydWN0IFVJbnQ4IGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogZ2V0IHRoZSB2YWx1ZSBvZiBhIFVJbnQ4IG9iamVjdFxuICAgICAqXG4gICAgICogQHJldHVybnMgdGhlIG51bWJlciByZXByZXNlbnRlZCBieSB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdmFsdWVPZigpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KCgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHRoaXMuYnl0ZXMpLCAxNik7XG4gICAgfVxufVxuZXhwb3J0cy5VSW50OCA9IFVJbnQ4O1xuVUludDgud2lkdGggPSA4IC8gODsgLy8gMVxuVUludDguZGVmYXVsdFVJbnQ4ID0gbmV3IFVJbnQ4KG5ldyBVaW50OEFycmF5KFVJbnQ4LndpZHRoKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11aW50LTguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint-8.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/uint.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UInt = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\n/**\n * Compare numbers and bigInts n1 and n2\n *\n * @param n1 First object to compare\n * @param n2 Second object to compare\n * @returns -1, 0, or 1, depending on how the two objects compare\n */\nfunction compare(n1, n2) {\n    return n1 < n2 ? -1 : n1 == n2 ? 0 : 1;\n}\n/**\n * Base class for serializing and deserializing unsigned integers.\n */\nclass UInt extends serialized_type_1.Comparable {\n    constructor(bytes) {\n        super(bytes);\n    }\n    /**\n     * Overload of compareTo for Comparable\n     *\n     * @param other other UInt to compare this to\n     * @returns -1, 0, or 1 depending on how the objects relate to each other\n     */\n    compareTo(other) {\n        return compare(this.valueOf(), other.valueOf());\n    }\n    /**\n     * Convert a UInt object to JSON\n     *\n     * @returns number or string represented by this.bytes\n     */\n    toJSON() {\n        const val = this.valueOf();\n        return typeof val === 'number' ? val : val.toString();\n    }\n    static checkUintRange(val, min, max) {\n        if (val < min || val > max) {\n            throw new Error(`Invalid ${this.constructor.name}: ${val} must be >= ${min} and <= ${max}`);\n        }\n    }\n}\nexports.UInt = UInt;\n//# sourceMappingURL=uint.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy91aW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWiwwQkFBMEIsbUJBQU8sQ0FBQyxxR0FBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsc0JBQXNCLElBQUksS0FBSyxhQUFhLEtBQUssU0FBUyxJQUFJO0FBQ3JHO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3VpbnQuanM/YTVkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVUludCA9IHZvaWQgMDtcbmNvbnN0IHNlcmlhbGl6ZWRfdHlwZV8xID0gcmVxdWlyZShcIi4vc2VyaWFsaXplZC10eXBlXCIpO1xuLyoqXG4gKiBDb21wYXJlIG51bWJlcnMgYW5kIGJpZ0ludHMgbjEgYW5kIG4yXG4gKlxuICogQHBhcmFtIG4xIEZpcnN0IG9iamVjdCB0byBjb21wYXJlXG4gKiBAcGFyYW0gbjIgU2Vjb25kIG9iamVjdCB0byBjb21wYXJlXG4gKiBAcmV0dXJucyAtMSwgMCwgb3IgMSwgZGVwZW5kaW5nIG9uIGhvdyB0aGUgdHdvIG9iamVjdHMgY29tcGFyZVxuICovXG5mdW5jdGlvbiBjb21wYXJlKG4xLCBuMikge1xuICAgIHJldHVybiBuMSA8IG4yID8gLTEgOiBuMSA9PSBuMiA/IDAgOiAxO1xufVxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBzZXJpYWxpemluZyBhbmQgZGVzZXJpYWxpemluZyB1bnNpZ25lZCBpbnRlZ2Vycy5cbiAqL1xuY2xhc3MgVUludCBleHRlbmRzIHNlcmlhbGl6ZWRfdHlwZV8xLkNvbXBhcmFibGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogT3ZlcmxvYWQgb2YgY29tcGFyZVRvIGZvciBDb21wYXJhYmxlXG4gICAgICpcbiAgICAgKiBAcGFyYW0gb3RoZXIgb3RoZXIgVUludCB0byBjb21wYXJlIHRoaXMgdG9cbiAgICAgKiBAcmV0dXJucyAtMSwgMCwgb3IgMSBkZXBlbmRpbmcgb24gaG93IHRoZSBvYmplY3RzIHJlbGF0ZSB0byBlYWNoIG90aGVyXG4gICAgICovXG4gICAgY29tcGFyZVRvKG90aGVyKSB7XG4gICAgICAgIHJldHVybiBjb21wYXJlKHRoaXMudmFsdWVPZigpLCBvdGhlci52YWx1ZU9mKCkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb252ZXJ0IGEgVUludCBvYmplY3QgdG8gSlNPTlxuICAgICAqXG4gICAgICogQHJldHVybnMgbnVtYmVyIG9yIHN0cmluZyByZXByZXNlbnRlZCBieSB0aGlzLmJ5dGVzXG4gICAgICovXG4gICAgdG9KU09OKCkge1xuICAgICAgICBjb25zdCB2YWwgPSB0aGlzLnZhbHVlT2YoKTtcbiAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInID8gdmFsIDogdmFsLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHN0YXRpYyBjaGVja1VpbnRSYW5nZSh2YWwsIG1pbiwgbWF4KSB7XG4gICAgICAgIGlmICh2YWwgPCBtaW4gfHwgdmFsID4gbWF4KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9OiAke3ZhbH0gbXVzdCBiZSA+PSAke21pbn0gYW5kIDw9ICR7bWF4fWApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5VSW50ID0gVUludDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVpbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/uint.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/vector-256.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/vector-256.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Vector256 = void 0;\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst hash_256_1 = __webpack_require__(/*! ./hash-256 */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/hash-256.js\");\nconst binary_serializer_1 = __webpack_require__(/*! ../serdes/binary-serializer */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-serializer.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * TypeGuard for Array<string>\n */\nfunction isStrings(arg) {\n    return Array.isArray(arg) && (arg.length === 0 || typeof arg[0] === 'string');\n}\n/**\n * Class for serializing and deserializing vectors of Hash256\n */\nclass Vector256 extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes);\n    }\n    /**\n     * Construct a Vector256 from a BinaryParser\n     *\n     * @param parser BinaryParser to\n     * @param hint length of the vector, in bytes, optional\n     * @returns a Vector256 object\n     */\n    static fromParser(parser, hint) {\n        const bytesList = new binary_serializer_1.BytesList();\n        const bytes = hint !== null && hint !== void 0 ? hint : parser.size();\n        const hashes = bytes / 32;\n        for (let i = 0; i < hashes; i++) {\n            hash_256_1.Hash256.fromParser(parser).toBytesSink(bytesList);\n        }\n        return new Vector256(bytesList.toBytes());\n    }\n    /**\n     * Construct a Vector256 object from an array of hashes\n     *\n     * @param value A Vector256 object or array of hex-strings representing Hash256's\n     * @returns a Vector256 object\n     */\n    static from(value) {\n        if (value instanceof Vector256) {\n            return value;\n        }\n        if (isStrings(value)) {\n            const bytesList = new binary_serializer_1.BytesList();\n            value.forEach((hash) => {\n                hash_256_1.Hash256.from(hash).toBytesSink(bytesList);\n            });\n            return new Vector256(bytesList.toBytes());\n        }\n        throw new Error('Cannot construct Vector256 from given value');\n    }\n    /**\n     * Return an Array of hex-strings represented by this.bytes\n     *\n     * @returns An Array of strings representing the Hash256 objects\n     */\n    toJSON() {\n        if (this.bytes.byteLength % 32 !== 0) {\n            throw new Error('Invalid bytes for Vector256');\n        }\n        const result = [];\n        for (let i = 0; i < this.bytes.byteLength; i += 32) {\n            result.push((0, utils_1.bytesToHex)(this.bytes.slice(i, i + 32)));\n        }\n        return result;\n    }\n}\nexports.Vector256 = Vector256;\n//# sourceMappingURL=vector-256.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy92ZWN0b3ItMjU2LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQiwwQkFBMEIsbUJBQU8sQ0FBQyxxR0FBbUI7QUFDckQsbUJBQW1CLG1CQUFPLENBQUMsdUZBQVk7QUFDdkMsNEJBQTRCLG1CQUFPLENBQUMsa0hBQTZCO0FBQ2pFLGdCQUFnQixtQkFBTyxDQUFDLCtGQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsWUFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwyQkFBMkI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3ZlY3Rvci0yNTYuanM/ODYyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVmVjdG9yMjU2ID0gdm9pZCAwO1xuY29uc3Qgc2VyaWFsaXplZF90eXBlXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemVkLXR5cGVcIik7XG5jb25zdCBoYXNoXzI1Nl8xID0gcmVxdWlyZShcIi4vaGFzaC0yNTZcIik7XG5jb25zdCBiaW5hcnlfc2VyaWFsaXplcl8xID0gcmVxdWlyZShcIi4uL3NlcmRlcy9iaW5hcnktc2VyaWFsaXplclwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQHhycGxmL2lzb21vcnBoaWMvdXRpbHNcIik7XG4vKipcbiAqIFR5cGVHdWFyZCBmb3IgQXJyYXk8c3RyaW5nPlxuICovXG5mdW5jdGlvbiBpc1N0cmluZ3MoYXJnKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoYXJnKSAmJiAoYXJnLmxlbmd0aCA9PT0gMCB8fCB0eXBlb2YgYXJnWzBdID09PSAnc3RyaW5nJyk7XG59XG4vKipcbiAqIENsYXNzIGZvciBzZXJpYWxpemluZyBhbmQgZGVzZXJpYWxpemluZyB2ZWN0b3JzIG9mIEhhc2gyNTZcbiAqL1xuY2xhc3MgVmVjdG9yMjU2IGV4dGVuZHMgc2VyaWFsaXplZF90eXBlXzEuU2VyaWFsaXplZFR5cGUge1xuICAgIGNvbnN0cnVjdG9yKGJ5dGVzKSB7XG4gICAgICAgIHN1cGVyKGJ5dGVzKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29uc3RydWN0IGEgVmVjdG9yMjU2IGZyb20gYSBCaW5hcnlQYXJzZXJcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJzZXIgQmluYXJ5UGFyc2VyIHRvXG4gICAgICogQHBhcmFtIGhpbnQgbGVuZ3RoIG9mIHRoZSB2ZWN0b3IsIGluIGJ5dGVzLCBvcHRpb25hbFxuICAgICAqIEByZXR1cm5zIGEgVmVjdG9yMjU2IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tUGFyc2VyKHBhcnNlciwgaGludCkge1xuICAgICAgICBjb25zdCBieXRlc0xpc3QgPSBuZXcgYmluYXJ5X3NlcmlhbGl6ZXJfMS5CeXRlc0xpc3QoKTtcbiAgICAgICAgY29uc3QgYnl0ZXMgPSBoaW50ICE9PSBudWxsICYmIGhpbnQgIT09IHZvaWQgMCA/IGhpbnQgOiBwYXJzZXIuc2l6ZSgpO1xuICAgICAgICBjb25zdCBoYXNoZXMgPSBieXRlcyAvIDMyO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhhc2hlczsgaSsrKSB7XG4gICAgICAgICAgICBoYXNoXzI1Nl8xLkhhc2gyNTYuZnJvbVBhcnNlcihwYXJzZXIpLnRvQnl0ZXNTaW5rKGJ5dGVzTGlzdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3IyNTYoYnl0ZXNMaXN0LnRvQnl0ZXMoKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIFZlY3RvcjI1NiBvYmplY3QgZnJvbSBhbiBhcnJheSBvZiBoYXNoZXNcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZSBBIFZlY3RvcjI1NiBvYmplY3Qgb3IgYXJyYXkgb2YgaGV4LXN0cmluZ3MgcmVwcmVzZW50aW5nIEhhc2gyNTYnc1xuICAgICAqIEByZXR1cm5zIGEgVmVjdG9yMjU2IG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFZlY3RvcjI1Nikge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1N0cmluZ3ModmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCBieXRlc0xpc3QgPSBuZXcgYmluYXJ5X3NlcmlhbGl6ZXJfMS5CeXRlc0xpc3QoKTtcbiAgICAgICAgICAgIHZhbHVlLmZvckVhY2goKGhhc2gpID0+IHtcbiAgICAgICAgICAgICAgICBoYXNoXzI1Nl8xLkhhc2gyNTYuZnJvbShoYXNoKS50b0J5dGVzU2luayhieXRlc0xpc3QpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFZlY3RvcjI1NihieXRlc0xpc3QudG9CeXRlcygpKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCBjb25zdHJ1Y3QgVmVjdG9yMjU2IGZyb20gZ2l2ZW4gdmFsdWUnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJuIGFuIEFycmF5IG9mIGhleC1zdHJpbmdzIHJlcHJlc2VudGVkIGJ5IHRoaXMuYnl0ZXNcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIEFuIEFycmF5IG9mIHN0cmluZ3MgcmVwcmVzZW50aW5nIHRoZSBIYXNoMjU2IG9iamVjdHNcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGlmICh0aGlzLmJ5dGVzLmJ5dGVMZW5ndGggJSAzMiAhPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGJ5dGVzIGZvciBWZWN0b3IyNTYnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmJ5dGVzLmJ5dGVMZW5ndGg7IGkgKz0gMzIpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKCgwLCB1dGlsc18xLmJ5dGVzVG9IZXgpKHRoaXMuYnl0ZXMuc2xpY2UoaSwgaSArIDMyKSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuZXhwb3J0cy5WZWN0b3IyNTYgPSBWZWN0b3IyNTY7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZWN0b3ItMjU2LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/vector-256.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/types/xchain-bridge.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/types/xchain-bridge.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.XChainBridge = void 0;\nconst binary_parser_1 = __webpack_require__(/*! ../serdes/binary-parser */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/serdes/binary-parser.js\");\nconst account_id_1 = __webpack_require__(/*! ./account-id */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/account-id.js\");\nconst serialized_type_1 = __webpack_require__(/*! ./serialized-type */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/serialized-type.js\");\nconst issue_1 = __webpack_require__(/*! ./issue */ \"(ssr)/../../node_modules/ripple-binary-codec/dist/types/issue.js\");\nconst utils_1 = __webpack_require__(/*! @xrplf/isomorphic/utils */ \"(ssr)/../../node_modules/@xrplf/isomorphic/dist/utils/index.js\");\n/**\n * Type guard for XChainBridgeObject\n */\nfunction isXChainBridgeObject(arg) {\n    const keys = Object.keys(arg).sort();\n    return (keys.length === 4 &&\n        keys[0] === 'IssuingChainDoor' &&\n        keys[1] === 'IssuingChainIssue' &&\n        keys[2] === 'LockingChainDoor' &&\n        keys[3] === 'LockingChainIssue');\n}\n/**\n * Class for serializing/deserializing XChainBridges\n */\nclass XChainBridge extends serialized_type_1.SerializedType {\n    constructor(bytes) {\n        super(bytes !== null && bytes !== void 0 ? bytes : XChainBridge.ZERO_XCHAIN_BRIDGE.bytes);\n    }\n    /**\n     * Construct a cross-chain bridge from a JSON\n     *\n     * @param value XChainBridge or JSON to parse into an XChainBridge\n     * @returns An XChainBridge object\n     */\n    static from(value) {\n        if (value instanceof XChainBridge) {\n            return value;\n        }\n        if (!isXChainBridgeObject(value)) {\n            throw new Error('Invalid type to construct an XChainBridge');\n        }\n        const bytes = [];\n        this.TYPE_ORDER.forEach((item) => {\n            const { name, type } = item;\n            if (type === account_id_1.AccountID) {\n                bytes.push(Uint8Array.from([0x14]));\n            }\n            const object = type.from(value[name]);\n            bytes.push(object.toBytes());\n        });\n        return new XChainBridge((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Read an XChainBridge from a BinaryParser\n     *\n     * @param parser BinaryParser to read the XChainBridge from\n     * @returns An XChainBridge object\n     */\n    static fromParser(parser) {\n        const bytes = [];\n        this.TYPE_ORDER.forEach((item) => {\n            const { type } = item;\n            if (type === account_id_1.AccountID) {\n                parser.skip(1);\n                bytes.push(Uint8Array.from([0x14]));\n            }\n            const object = type.fromParser(parser);\n            bytes.push(object.toBytes());\n        });\n        return new XChainBridge((0, utils_1.concat)(bytes));\n    }\n    /**\n     * Get the JSON representation of this XChainBridge\n     *\n     * @returns the JSON interpretation of this.bytes\n     */\n    toJSON() {\n        const parser = new binary_parser_1.BinaryParser(this.toString());\n        const json = {};\n        XChainBridge.TYPE_ORDER.forEach((item) => {\n            const { name, type } = item;\n            if (type === account_id_1.AccountID) {\n                parser.skip(1);\n            }\n            const object = type.fromParser(parser).toJSON();\n            json[name] = object;\n        });\n        return json;\n    }\n}\nexports.XChainBridge = XChainBridge;\nXChainBridge.ZERO_XCHAIN_BRIDGE = new XChainBridge((0, utils_1.concat)([\n    Uint8Array.from([0x14]),\n    new Uint8Array(40),\n    Uint8Array.from([0x14]),\n    new Uint8Array(40),\n]));\nXChainBridge.TYPE_ORDER = [\n    { name: 'LockingChainDoor', type: account_id_1.AccountID },\n    { name: 'LockingChainIssue', type: issue_1.Issue },\n    { name: 'IssuingChainDoor', type: account_id_1.AccountID },\n    { name: 'IssuingChainIssue', type: issue_1.Issue },\n];\n//# sourceMappingURL=xchain-bridge.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC90eXBlcy94Y2hhaW4tYnJpZGdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQix3QkFBd0IsbUJBQU8sQ0FBQywwR0FBeUI7QUFDekQscUJBQXFCLG1CQUFPLENBQUMsMkZBQWM7QUFDM0MsMEJBQTBCLG1CQUFPLENBQUMscUdBQW1CO0FBQ3JELGdCQUFnQixtQkFBTyxDQUFDLGlGQUFTO0FBQ2pDLGdCQUFnQixtQkFBTyxDQUFDLCtGQUF5QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsYUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsT0FBTztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixhQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx3REFBd0Q7QUFDOUQsTUFBTSxnREFBZ0Q7QUFDdEQsTUFBTSx3REFBd0Q7QUFDOUQsTUFBTSxnREFBZ0Q7QUFDdEQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvcmlwcGxlLWJpbmFyeS1jb2RlYy9kaXN0L3R5cGVzL3hjaGFpbi1icmlkZ2UuanM/MWQ1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuWENoYWluQnJpZGdlID0gdm9pZCAwO1xuY29uc3QgYmluYXJ5X3BhcnNlcl8xID0gcmVxdWlyZShcIi4uL3NlcmRlcy9iaW5hcnktcGFyc2VyXCIpO1xuY29uc3QgYWNjb3VudF9pZF8xID0gcmVxdWlyZShcIi4vYWNjb3VudC1pZFwiKTtcbmNvbnN0IHNlcmlhbGl6ZWRfdHlwZV8xID0gcmVxdWlyZShcIi4vc2VyaWFsaXplZC10eXBlXCIpO1xuY29uc3QgaXNzdWVfMSA9IHJlcXVpcmUoXCIuL2lzc3VlXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAeHJwbGYvaXNvbW9ycGhpYy91dGlsc1wiKTtcbi8qKlxuICogVHlwZSBndWFyZCBmb3IgWENoYWluQnJpZGdlT2JqZWN0XG4gKi9cbmZ1bmN0aW9uIGlzWENoYWluQnJpZGdlT2JqZWN0KGFyZykge1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhhcmcpLnNvcnQoKTtcbiAgICByZXR1cm4gKGtleXMubGVuZ3RoID09PSA0ICYmXG4gICAgICAgIGtleXNbMF0gPT09ICdJc3N1aW5nQ2hhaW5Eb29yJyAmJlxuICAgICAgICBrZXlzWzFdID09PSAnSXNzdWluZ0NoYWluSXNzdWUnICYmXG4gICAgICAgIGtleXNbMl0gPT09ICdMb2NraW5nQ2hhaW5Eb29yJyAmJlxuICAgICAgICBrZXlzWzNdID09PSAnTG9ja2luZ0NoYWluSXNzdWUnKTtcbn1cbi8qKlxuICogQ2xhc3MgZm9yIHNlcmlhbGl6aW5nL2Rlc2VyaWFsaXppbmcgWENoYWluQnJpZGdlc1xuICovXG5jbGFzcyBYQ2hhaW5CcmlkZ2UgZXh0ZW5kcyBzZXJpYWxpemVkX3R5cGVfMS5TZXJpYWxpemVkVHlwZSB7XG4gICAgY29uc3RydWN0b3IoYnl0ZXMpIHtcbiAgICAgICAgc3VwZXIoYnl0ZXMgIT09IG51bGwgJiYgYnl0ZXMgIT09IHZvaWQgMCA/IGJ5dGVzIDogWENoYWluQnJpZGdlLlpFUk9fWENIQUlOX0JSSURHRS5ieXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdCBhIGNyb3NzLWNoYWluIGJyaWRnZSBmcm9tIGEgSlNPTlxuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlIFhDaGFpbkJyaWRnZSBvciBKU09OIHRvIHBhcnNlIGludG8gYW4gWENoYWluQnJpZGdlXG4gICAgICogQHJldHVybnMgQW4gWENoYWluQnJpZGdlIG9iamVjdFxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tKHZhbHVlKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFhDaGFpbkJyaWRnZSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaXNYQ2hhaW5CcmlkZ2VPYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdHlwZSB0byBjb25zdHJ1Y3QgYW4gWENoYWluQnJpZGdlJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYnl0ZXMgPSBbXTtcbiAgICAgICAgdGhpcy5UWVBFX09SREVSLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgbmFtZSwgdHlwZSB9ID0gaXRlbTtcbiAgICAgICAgICAgIGlmICh0eXBlID09PSBhY2NvdW50X2lkXzEuQWNjb3VudElEKSB7XG4gICAgICAgICAgICAgICAgYnl0ZXMucHVzaChVaW50OEFycmF5LmZyb20oWzB4MTRdKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvYmplY3QgPSB0eXBlLmZyb20odmFsdWVbbmFtZV0pO1xuICAgICAgICAgICAgYnl0ZXMucHVzaChvYmplY3QudG9CeXRlcygpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBuZXcgWENoYWluQnJpZGdlKCgwLCB1dGlsc18xLmNvbmNhdCkoYnl0ZXMpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVhZCBhbiBYQ2hhaW5CcmlkZ2UgZnJvbSBhIEJpbmFyeVBhcnNlclxuICAgICAqXG4gICAgICogQHBhcmFtIHBhcnNlciBCaW5hcnlQYXJzZXIgdG8gcmVhZCB0aGUgWENoYWluQnJpZGdlIGZyb21cbiAgICAgKiBAcmV0dXJucyBBbiBYQ2hhaW5CcmlkZ2Ugb2JqZWN0XG4gICAgICovXG4gICAgc3RhdGljIGZyb21QYXJzZXIocGFyc2VyKSB7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgICAgIHRoaXMuVFlQRV9PUkRFUi5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB7IHR5cGUgfSA9IGl0ZW07XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gYWNjb3VudF9pZF8xLkFjY291bnRJRCkge1xuICAgICAgICAgICAgICAgIHBhcnNlci5za2lwKDEpO1xuICAgICAgICAgICAgICAgIGJ5dGVzLnB1c2goVWludDhBcnJheS5mcm9tKFsweDE0XSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgb2JqZWN0ID0gdHlwZS5mcm9tUGFyc2VyKHBhcnNlcik7XG4gICAgICAgICAgICBieXRlcy5wdXNoKG9iamVjdC50b0J5dGVzKCkpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG5ldyBYQ2hhaW5CcmlkZ2UoKDAsIHV0aWxzXzEuY29uY2F0KShieXRlcykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIEpTT04gcmVwcmVzZW50YXRpb24gb2YgdGhpcyBYQ2hhaW5CcmlkZ2VcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHRoZSBKU09OIGludGVycHJldGF0aW9uIG9mIHRoaXMuYnl0ZXNcbiAgICAgKi9cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IHBhcnNlciA9IG5ldyBiaW5hcnlfcGFyc2VyXzEuQmluYXJ5UGFyc2VyKHRoaXMudG9TdHJpbmcoKSk7XG4gICAgICAgIGNvbnN0IGpzb24gPSB7fTtcbiAgICAgICAgWENoYWluQnJpZGdlLlRZUEVfT1JERVIuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgeyBuYW1lLCB0eXBlIH0gPSBpdGVtO1xuICAgICAgICAgICAgaWYgKHR5cGUgPT09IGFjY291bnRfaWRfMS5BY2NvdW50SUQpIHtcbiAgICAgICAgICAgICAgICBwYXJzZXIuc2tpcCgxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG9iamVjdCA9IHR5cGUuZnJvbVBhcnNlcihwYXJzZXIpLnRvSlNPTigpO1xuICAgICAgICAgICAganNvbltuYW1lXSA9IG9iamVjdDtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBqc29uO1xuICAgIH1cbn1cbmV4cG9ydHMuWENoYWluQnJpZGdlID0gWENoYWluQnJpZGdlO1xuWENoYWluQnJpZGdlLlpFUk9fWENIQUlOX0JSSURHRSA9IG5ldyBYQ2hhaW5CcmlkZ2UoKDAsIHV0aWxzXzEuY29uY2F0KShbXG4gICAgVWludDhBcnJheS5mcm9tKFsweDE0XSksXG4gICAgbmV3IFVpbnQ4QXJyYXkoNDApLFxuICAgIFVpbnQ4QXJyYXkuZnJvbShbMHgxNF0pLFxuICAgIG5ldyBVaW50OEFycmF5KDQwKSxcbl0pKTtcblhDaGFpbkJyaWRnZS5UWVBFX09SREVSID0gW1xuICAgIHsgbmFtZTogJ0xvY2tpbmdDaGFpbkRvb3InLCB0eXBlOiBhY2NvdW50X2lkXzEuQWNjb3VudElEIH0sXG4gICAgeyBuYW1lOiAnTG9ja2luZ0NoYWluSXNzdWUnLCB0eXBlOiBpc3N1ZV8xLklzc3VlIH0sXG4gICAgeyBuYW1lOiAnSXNzdWluZ0NoYWluRG9vcicsIHR5cGU6IGFjY291bnRfaWRfMS5BY2NvdW50SUQgfSxcbiAgICB7IG5hbWU6ICdJc3N1aW5nQ2hhaW5Jc3N1ZScsIHR5cGU6IGlzc3VlXzEuSXNzdWUgfSxcbl07XG4vLyMgc291cmNlTWFwcGluZ1VSTD14Y2hhaW4tYnJpZGdlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/types/xchain-bridge.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js":
/*!************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.compare = exports.equal = exports.readUInt32BE = exports.readUInt16BE = exports.writeUInt32BE = exports.writeUInt16BE = exports.writeUInt8 = void 0;\n/**\n * Writes value to array at the specified offset. The value must be a valid unsigned 8-bit integer.\n * @param array Uint8Array to be written to\n * @param value Number to be written to array.\n * @param offset plus the number of bytes written.\n */\nfunction writeUInt8(array, value, offset) {\n    value = Number(value);\n    array[offset] = value;\n}\nexports.writeUInt8 = writeUInt8;\n/**\n * Writes value to array at the specified offset as big-endian. The value must be a valid unsigned 16-bit integer.\n * @param array Uint8Array to be written to\n * @param value Number to be written to array.\n * @param offset plus the number of bytes written.\n */\nfunction writeUInt16BE(array, value, offset) {\n    value = Number(value);\n    array[offset] = value >>> 8;\n    array[offset + 1] = value;\n}\nexports.writeUInt16BE = writeUInt16BE;\n/**\n * Writes value to array at the specified offset as big-endian. The value must be a valid unsigned 32-bit integer.\n * @param array Uint8Array to be written to\n * @param value Number to be written to array.\n * @param offset plus the number of bytes written.\n */\nfunction writeUInt32BE(array, value, offset) {\n    array[offset] = (value >>> 24) & 0xff;\n    array[offset + 1] = (value >>> 16) & 0xff;\n    array[offset + 2] = (value >>> 8) & 0xff;\n    array[offset + 3] = value & 0xff;\n}\nexports.writeUInt32BE = writeUInt32BE;\n/**\n * Reads an unsigned, big-endian 16-bit integer from the array at the specified offset.\n * @param array Uint8Array to read\n * @param offset Number of bytes to skip before starting to read. Must satisfy 0 <= offset <= buf.length - 2\n */\nfunction readUInt16BE(array, offset) {\n    return new DataView(array.buffer).getUint16(offset, false).toString(10);\n}\nexports.readUInt16BE = readUInt16BE;\n/**\n * Reads an unsigned, big-endian 16-bit integer from the array at the specified offset.\n * @param array Uint8Array to read\n * @param offset Number of bytes to skip before starting to read. Must satisfy 0 <= offset <= buf.length - 4\n */\nfunction readUInt32BE(array, offset) {\n    return new DataView(array.buffer).getUint32(offset, false).toString(10);\n}\nexports.readUInt32BE = readUInt32BE;\n/**\n * Compares two Uint8Array or ArrayBuffers\n * @param a first array to compare\n * @param b second array to compare\n */\nfunction equal(a, b) {\n    const aUInt = a instanceof ArrayBuffer ? new Uint8Array(a, 0) : a;\n    const bUInt = b instanceof ArrayBuffer ? new Uint8Array(b, 0) : b;\n    if (aUInt.byteLength != bUInt.byteLength)\n        return false;\n    if (aligned32(aUInt) && aligned32(bUInt))\n        return compare32(aUInt, bUInt) === 0;\n    if (aligned16(aUInt) && aligned16(bUInt))\n        return compare16(aUInt, bUInt) === 0;\n    return compare8(aUInt, bUInt) === 0;\n}\nexports.equal = equal;\n/**\n * Compares two 8 bit aligned arrays\n * @param a first array to compare\n * @param b second array to compare\n */\nfunction compare8(a, b) {\n    const ua = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    const ub = new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n    return compare(ua, ub);\n}\n/**\n * Compares two 16 bit aligned arrays\n * @param a first array to compare\n * @param b second array to compare\n */\nfunction compare16(a, b) {\n    const ua = new Uint16Array(a.buffer, a.byteOffset, a.byteLength / 2);\n    const ub = new Uint16Array(b.buffer, b.byteOffset, b.byteLength / 2);\n    return compare(ua, ub);\n}\n/**\n * Compares two 32 bit aligned arrays\n * @param a first array to compare\n * @param b second array to compare\n */\nfunction compare32(a, b) {\n    const ua = new Uint32Array(a.buffer, a.byteOffset, a.byteLength / 4);\n    const ub = new Uint32Array(b.buffer, b.byteOffset, b.byteLength / 4);\n    return compare(ua, ub);\n}\n/**\n * Compare two TypedArrays\n * @param a first array to compare\n * @param b second array to compare\n */\nfunction compare(a, b) {\n    if (a.byteLength !== b.byteLength) {\n        throw new Error('Cannot compare arrays of different length');\n    }\n    for (let i = 0; i < a.length - 1; i += 1) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nexports.compare = compare;\n/**\n * Determine if TypedArray is 16 bit aligned\n * @param array The array to check\n */\nfunction aligned16(array) {\n    return array.byteOffset % 2 === 0 && array.byteLength % 2 === 0;\n}\n/**\n * Determine if TypedArray is 32 bit aligned\n * @param array The array to check\n */\nfunction aligned32(array) {\n    return array.byteOffset % 4 === 0 && array.byteLength % 4 === 0;\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsYUFBYSxHQUFHLG9CQUFvQixHQUFHLG9CQUFvQixHQUFHLHFCQUFxQixHQUFHLHFCQUFxQixHQUFHLGtCQUFrQjtBQUNsSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL3JpcHBsZS1iaW5hcnktY29kZWMvZGlzdC91dGlscy5qcz84NzNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb21wYXJlID0gZXhwb3J0cy5lcXVhbCA9IGV4cG9ydHMucmVhZFVJbnQzMkJFID0gZXhwb3J0cy5yZWFkVUludDE2QkUgPSBleHBvcnRzLndyaXRlVUludDMyQkUgPSBleHBvcnRzLndyaXRlVUludDE2QkUgPSBleHBvcnRzLndyaXRlVUludDggPSB2b2lkIDA7XG4vKipcbiAqIFdyaXRlcyB2YWx1ZSB0byBhcnJheSBhdCB0aGUgc3BlY2lmaWVkIG9mZnNldC4gVGhlIHZhbHVlIG11c3QgYmUgYSB2YWxpZCB1bnNpZ25lZCA4LWJpdCBpbnRlZ2VyLlxuICogQHBhcmFtIGFycmF5IFVpbnQ4QXJyYXkgdG8gYmUgd3JpdHRlbiB0b1xuICogQHBhcmFtIHZhbHVlIE51bWJlciB0byBiZSB3cml0dGVuIHRvIGFycmF5LlxuICogQHBhcmFtIG9mZnNldCBwbHVzIHRoZSBudW1iZXIgb2YgYnl0ZXMgd3JpdHRlbi5cbiAqL1xuZnVuY3Rpb24gd3JpdGVVSW50OChhcnJheSwgdmFsdWUsIG9mZnNldCkge1xuICAgIHZhbHVlID0gTnVtYmVyKHZhbHVlKTtcbiAgICBhcnJheVtvZmZzZXRdID0gdmFsdWU7XG59XG5leHBvcnRzLndyaXRlVUludDggPSB3cml0ZVVJbnQ4O1xuLyoqXG4gKiBXcml0ZXMgdmFsdWUgdG8gYXJyYXkgYXQgdGhlIHNwZWNpZmllZCBvZmZzZXQgYXMgYmlnLWVuZGlhbi4gVGhlIHZhbHVlIG11c3QgYmUgYSB2YWxpZCB1bnNpZ25lZCAxNi1iaXQgaW50ZWdlci5cbiAqIEBwYXJhbSBhcnJheSBVaW50OEFycmF5IHRvIGJlIHdyaXR0ZW4gdG9cbiAqIEBwYXJhbSB2YWx1ZSBOdW1iZXIgdG8gYmUgd3JpdHRlbiB0byBhcnJheS5cbiAqIEBwYXJhbSBvZmZzZXQgcGx1cyB0aGUgbnVtYmVyIG9mIGJ5dGVzIHdyaXR0ZW4uXG4gKi9cbmZ1bmN0aW9uIHdyaXRlVUludDE2QkUoYXJyYXksIHZhbHVlLCBvZmZzZXQpIHtcbiAgICB2YWx1ZSA9IE51bWJlcih2YWx1ZSk7XG4gICAgYXJyYXlbb2Zmc2V0XSA9IHZhbHVlID4+PiA4O1xuICAgIGFycmF5W29mZnNldCArIDFdID0gdmFsdWU7XG59XG5leHBvcnRzLndyaXRlVUludDE2QkUgPSB3cml0ZVVJbnQxNkJFO1xuLyoqXG4gKiBXcml0ZXMgdmFsdWUgdG8gYXJyYXkgYXQgdGhlIHNwZWNpZmllZCBvZmZzZXQgYXMgYmlnLWVuZGlhbi4gVGhlIHZhbHVlIG11c3QgYmUgYSB2YWxpZCB1bnNpZ25lZCAzMi1iaXQgaW50ZWdlci5cbiAqIEBwYXJhbSBhcnJheSBVaW50OEFycmF5IHRvIGJlIHdyaXR0ZW4gdG9cbiAqIEBwYXJhbSB2YWx1ZSBOdW1iZXIgdG8gYmUgd3JpdHRlbiB0byBhcnJheS5cbiAqIEBwYXJhbSBvZmZzZXQgcGx1cyB0aGUgbnVtYmVyIG9mIGJ5dGVzIHdyaXR0ZW4uXG4gKi9cbmZ1bmN0aW9uIHdyaXRlVUludDMyQkUoYXJyYXksIHZhbHVlLCBvZmZzZXQpIHtcbiAgICBhcnJheVtvZmZzZXRdID0gKHZhbHVlID4+PiAyNCkgJiAweGZmO1xuICAgIGFycmF5W29mZnNldCArIDFdID0gKHZhbHVlID4+PiAxNikgJiAweGZmO1xuICAgIGFycmF5W29mZnNldCArIDJdID0gKHZhbHVlID4+PiA4KSAmIDB4ZmY7XG4gICAgYXJyYXlbb2Zmc2V0ICsgM10gPSB2YWx1ZSAmIDB4ZmY7XG59XG5leHBvcnRzLndyaXRlVUludDMyQkUgPSB3cml0ZVVJbnQzMkJFO1xuLyoqXG4gKiBSZWFkcyBhbiB1bnNpZ25lZCwgYmlnLWVuZGlhbiAxNi1iaXQgaW50ZWdlciBmcm9tIHRoZSBhcnJheSBhdCB0aGUgc3BlY2lmaWVkIG9mZnNldC5cbiAqIEBwYXJhbSBhcnJheSBVaW50OEFycmF5IHRvIHJlYWRcbiAqIEBwYXJhbSBvZmZzZXQgTnVtYmVyIG9mIGJ5dGVzIHRvIHNraXAgYmVmb3JlIHN0YXJ0aW5nIHRvIHJlYWQuIE11c3Qgc2F0aXNmeSAwIDw9IG9mZnNldCA8PSBidWYubGVuZ3RoIC0gMlxuICovXG5mdW5jdGlvbiByZWFkVUludDE2QkUoYXJyYXksIG9mZnNldCkge1xuICAgIHJldHVybiBuZXcgRGF0YVZpZXcoYXJyYXkuYnVmZmVyKS5nZXRVaW50MTYob2Zmc2V0LCBmYWxzZSkudG9TdHJpbmcoMTApO1xufVxuZXhwb3J0cy5yZWFkVUludDE2QkUgPSByZWFkVUludDE2QkU7XG4vKipcbiAqIFJlYWRzIGFuIHVuc2lnbmVkLCBiaWctZW5kaWFuIDE2LWJpdCBpbnRlZ2VyIGZyb20gdGhlIGFycmF5IGF0IHRoZSBzcGVjaWZpZWQgb2Zmc2V0LlxuICogQHBhcmFtIGFycmF5IFVpbnQ4QXJyYXkgdG8gcmVhZFxuICogQHBhcmFtIG9mZnNldCBOdW1iZXIgb2YgYnl0ZXMgdG8gc2tpcCBiZWZvcmUgc3RhcnRpbmcgdG8gcmVhZC4gTXVzdCBzYXRpc2Z5IDAgPD0gb2Zmc2V0IDw9IGJ1Zi5sZW5ndGggLSA0XG4gKi9cbmZ1bmN0aW9uIHJlYWRVSW50MzJCRShhcnJheSwgb2Zmc2V0KSB7XG4gICAgcmV0dXJuIG5ldyBEYXRhVmlldyhhcnJheS5idWZmZXIpLmdldFVpbnQzMihvZmZzZXQsIGZhbHNlKS50b1N0cmluZygxMCk7XG59XG5leHBvcnRzLnJlYWRVSW50MzJCRSA9IHJlYWRVSW50MzJCRTtcbi8qKlxuICogQ29tcGFyZXMgdHdvIFVpbnQ4QXJyYXkgb3IgQXJyYXlCdWZmZXJzXG4gKiBAcGFyYW0gYSBmaXJzdCBhcnJheSB0byBjb21wYXJlXG4gKiBAcGFyYW0gYiBzZWNvbmQgYXJyYXkgdG8gY29tcGFyZVxuICovXG5mdW5jdGlvbiBlcXVhbChhLCBiKSB7XG4gICAgY29uc3QgYVVJbnQgPSBhIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgPyBuZXcgVWludDhBcnJheShhLCAwKSA6IGE7XG4gICAgY29uc3QgYlVJbnQgPSBiIGluc3RhbmNlb2YgQXJyYXlCdWZmZXIgPyBuZXcgVWludDhBcnJheShiLCAwKSA6IGI7XG4gICAgaWYgKGFVSW50LmJ5dGVMZW5ndGggIT0gYlVJbnQuYnl0ZUxlbmd0aClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChhbGlnbmVkMzIoYVVJbnQpICYmIGFsaWduZWQzMihiVUludCkpXG4gICAgICAgIHJldHVybiBjb21wYXJlMzIoYVVJbnQsIGJVSW50KSA9PT0gMDtcbiAgICBpZiAoYWxpZ25lZDE2KGFVSW50KSAmJiBhbGlnbmVkMTYoYlVJbnQpKVxuICAgICAgICByZXR1cm4gY29tcGFyZTE2KGFVSW50LCBiVUludCkgPT09IDA7XG4gICAgcmV0dXJuIGNvbXBhcmU4KGFVSW50LCBiVUludCkgPT09IDA7XG59XG5leHBvcnRzLmVxdWFsID0gZXF1YWw7XG4vKipcbiAqIENvbXBhcmVzIHR3byA4IGJpdCBhbGlnbmVkIGFycmF5c1xuICogQHBhcmFtIGEgZmlyc3QgYXJyYXkgdG8gY29tcGFyZVxuICogQHBhcmFtIGIgc2Vjb25kIGFycmF5IHRvIGNvbXBhcmVcbiAqL1xuZnVuY3Rpb24gY29tcGFyZTgoYSwgYikge1xuICAgIGNvbnN0IHVhID0gbmV3IFVpbnQ4QXJyYXkoYS5idWZmZXIsIGEuYnl0ZU9mZnNldCwgYS5ieXRlTGVuZ3RoKTtcbiAgICBjb25zdCB1YiA9IG5ldyBVaW50OEFycmF5KGIuYnVmZmVyLCBiLmJ5dGVPZmZzZXQsIGIuYnl0ZUxlbmd0aCk7XG4gICAgcmV0dXJuIGNvbXBhcmUodWEsIHViKTtcbn1cbi8qKlxuICogQ29tcGFyZXMgdHdvIDE2IGJpdCBhbGlnbmVkIGFycmF5c1xuICogQHBhcmFtIGEgZmlyc3QgYXJyYXkgdG8gY29tcGFyZVxuICogQHBhcmFtIGIgc2Vjb25kIGFycmF5IHRvIGNvbXBhcmVcbiAqL1xuZnVuY3Rpb24gY29tcGFyZTE2KGEsIGIpIHtcbiAgICBjb25zdCB1YSA9IG5ldyBVaW50MTZBcnJheShhLmJ1ZmZlciwgYS5ieXRlT2Zmc2V0LCBhLmJ5dGVMZW5ndGggLyAyKTtcbiAgICBjb25zdCB1YiA9IG5ldyBVaW50MTZBcnJheShiLmJ1ZmZlciwgYi5ieXRlT2Zmc2V0LCBiLmJ5dGVMZW5ndGggLyAyKTtcbiAgICByZXR1cm4gY29tcGFyZSh1YSwgdWIpO1xufVxuLyoqXG4gKiBDb21wYXJlcyB0d28gMzIgYml0IGFsaWduZWQgYXJyYXlzXG4gKiBAcGFyYW0gYSBmaXJzdCBhcnJheSB0byBjb21wYXJlXG4gKiBAcGFyYW0gYiBzZWNvbmQgYXJyYXkgdG8gY29tcGFyZVxuICovXG5mdW5jdGlvbiBjb21wYXJlMzIoYSwgYikge1xuICAgIGNvbnN0IHVhID0gbmV3IFVpbnQzMkFycmF5KGEuYnVmZmVyLCBhLmJ5dGVPZmZzZXQsIGEuYnl0ZUxlbmd0aCAvIDQpO1xuICAgIGNvbnN0IHViID0gbmV3IFVpbnQzMkFycmF5KGIuYnVmZmVyLCBiLmJ5dGVPZmZzZXQsIGIuYnl0ZUxlbmd0aCAvIDQpO1xuICAgIHJldHVybiBjb21wYXJlKHVhLCB1Yik7XG59XG4vKipcbiAqIENvbXBhcmUgdHdvIFR5cGVkQXJyYXlzXG4gKiBAcGFyYW0gYSBmaXJzdCBhcnJheSB0byBjb21wYXJlXG4gKiBAcGFyYW0gYiBzZWNvbmQgYXJyYXkgdG8gY29tcGFyZVxuICovXG5mdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgICBpZiAoYS5ieXRlTGVuZ3RoICE9PSBiLmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY29tcGFyZSBhcnJheXMgb2YgZGlmZmVyZW50IGxlbmd0aCcpO1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoIC0gMTsgaSArPSAxKSB7XG4gICAgICAgIGlmIChhW2ldID4gYltpXSlcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICBpZiAoYVtpXSA8IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuZXhwb3J0cy5jb21wYXJlID0gY29tcGFyZTtcbi8qKlxuICogRGV0ZXJtaW5lIGlmIFR5cGVkQXJyYXkgaXMgMTYgYml0IGFsaWduZWRcbiAqIEBwYXJhbSBhcnJheSBUaGUgYXJyYXkgdG8gY2hlY2tcbiAqL1xuZnVuY3Rpb24gYWxpZ25lZDE2KGFycmF5KSB7XG4gICAgcmV0dXJuIGFycmF5LmJ5dGVPZmZzZXQgJSAyID09PSAwICYmIGFycmF5LmJ5dGVMZW5ndGggJSAyID09PSAwO1xufVxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgVHlwZWRBcnJheSBpcyAzMiBiaXQgYWxpZ25lZFxuICogQHBhcmFtIGFycmF5IFRoZSBhcnJheSB0byBjaGVja1xuICovXG5mdW5jdGlvbiBhbGlnbmVkMzIoYXJyYXkpIHtcbiAgICByZXR1cm4gYXJyYXkuYnl0ZU9mZnNldCAlIDQgPT09IDAgJiYgYXJyYXkuYnl0ZUxlbmd0aCAlIDQgPT09IDA7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/ripple-binary-codec/dist/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/ripple-binary-codec/dist/enums/definitions.json":
/*!**************************************************************************!*\
  !*** ../../node_modules/ripple-binary-codec/dist/enums/definitions.json ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"FIELDS":[["Generic",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":0,"type":"Unknown"}],["Invalid",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":-1,"type":"Unknown"}],["ObjectEndMarker",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"STObject"}],["ArrayEndMarker",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"STArray"}],["taker_gets_funded",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":258,"type":"Amount"}],["taker_pays_funded",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":259,"type":"Amount"}],["LedgerEntryType",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"UInt16"}],["TransactionType",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"UInt16"}],["SignerWeight",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"UInt16"}],["TransferFee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"UInt16"}],["TradingFee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"UInt16"}],["DiscountedFee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"UInt16"}],["Version",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"UInt16"}],["HookStateChangeCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"UInt16"}],["HookEmitCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"UInt16"}],["HookExecutionIndex",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"UInt16"}],["HookApiVersion",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":20,"type":"UInt16"}],["LedgerFixType",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":21,"type":"UInt16"}],["NetworkID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"UInt32"}],["Flags",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"UInt32"}],["SourceTag",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"UInt32"}],["Sequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"UInt32"}],["PreviousTxnLgrSeq",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"UInt32"}],["LedgerSequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"UInt32"}],["CloseTime",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":7,"type":"UInt32"}],["ParentCloseTime",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":8,"type":"UInt32"}],["SigningTime",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":9,"type":"UInt32"}],["Expiration",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":10,"type":"UInt32"}],["TransferRate",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":11,"type":"UInt32"}],["WalletSize",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":12,"type":"UInt32"}],["OwnerCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":13,"type":"UInt32"}],["DestinationTag",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":14,"type":"UInt32"}],["LastUpdateTime",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":15,"type":"UInt32"}],["HighQualityIn",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"UInt32"}],["HighQualityOut",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"UInt32"}],["LowQualityIn",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"UInt32"}],["LowQualityOut",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"UInt32"}],["QualityIn",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":20,"type":"UInt32"}],["QualityOut",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":21,"type":"UInt32"}],["StampEscrow",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":22,"type":"UInt32"}],["BondAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":23,"type":"UInt32"}],["LoadFee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":24,"type":"UInt32"}],["OfferSequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":25,"type":"UInt32"}],["FirstLedgerSequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":26,"type":"UInt32"}],["LastLedgerSequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":27,"type":"UInt32"}],["TransactionIndex",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":28,"type":"UInt32"}],["OperationLimit",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":29,"type":"UInt32"}],["ReferenceFeeUnits",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":30,"type":"UInt32"}],["ReserveBase",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":31,"type":"UInt32"}],["ReserveIncrement",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":32,"type":"UInt32"}],["SetFlag",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":33,"type":"UInt32"}],["ClearFlag",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":34,"type":"UInt32"}],["SignerQuorum",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":35,"type":"UInt32"}],["CancelAfter",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":36,"type":"UInt32"}],["FinishAfter",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":37,"type":"UInt32"}],["SignerListID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":38,"type":"UInt32"}],["SettleDelay",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":39,"type":"UInt32"}],["TicketCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":40,"type":"UInt32"}],["TicketSequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":41,"type":"UInt32"}],["NFTokenTaxon",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":42,"type":"UInt32"}],["MintedNFTokens",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":43,"type":"UInt32"}],["BurnedNFTokens",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":44,"type":"UInt32"}],["HookStateCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":45,"type":"UInt32"}],["EmitGeneration",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":46,"type":"UInt32"}],["VoteWeight",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":48,"type":"UInt32"}],["FirstNFTokenSequence",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":50,"type":"UInt32"}],["OracleDocumentID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":51,"type":"UInt32"}],["PermissionValue",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":52,"type":"UInt32"}],["IndexNext",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"UInt64"}],["IndexPrevious",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"UInt64"}],["BookNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"UInt64"}],["OwnerNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"UInt64"}],["BaseFee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"UInt64"}],["ExchangeRate",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"UInt64"}],["LowNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":7,"type":"UInt64"}],["HighNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":8,"type":"UInt64"}],["DestinationNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":9,"type":"UInt64"}],["Cookie",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":10,"type":"UInt64"}],["ServerVersion",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":11,"type":"UInt64"}],["NFTokenOfferNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":12,"type":"UInt64"}],["EmitBurden",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":13,"type":"UInt64"}],["HookOn",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"UInt64"}],["HookInstructionCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"UInt64"}],["HookReturnCode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"UInt64"}],["ReferenceCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"UInt64"}],["XChainClaimID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":20,"type":"UInt64"}],["XChainAccountCreateCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":21,"type":"UInt64"}],["XChainAccountClaimCount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":22,"type":"UInt64"}],["AssetPrice",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":23,"type":"UInt64"}],["MaximumAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":24,"type":"UInt64"}],["OutstandingAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":25,"type":"UInt64"}],["MPTAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":26,"type":"UInt64"}],["IssuerNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":27,"type":"UInt64"}],["SubjectNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":28,"type":"UInt64"}],["LockedAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":29,"type":"UInt64"}],["EmailHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Hash128"}],["LedgerHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Hash256"}],["ParentHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Hash256"}],["TransactionHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"Hash256"}],["AccountHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"Hash256"}],["PreviousTxnID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"Hash256"}],["LedgerIndex",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"Hash256"}],["WalletLocator",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":7,"type":"Hash256"}],["RootIndex",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":8,"type":"Hash256"}],["AccountTxnID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":9,"type":"Hash256"}],["NFTokenID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":10,"type":"Hash256"}],["EmitParentTxnID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":11,"type":"Hash256"}],["EmitNonce",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":12,"type":"Hash256"}],["EmitHookHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":13,"type":"Hash256"}],["AMMID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":14,"type":"Hash256"}],["BookDirectory",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"Hash256"}],["InvoiceID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"Hash256"}],["Nickname",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"Hash256"}],["Amendment",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"Hash256"}],["Digest",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":21,"type":"Hash256"}],["Channel",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":22,"type":"Hash256"}],["ConsensusHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":23,"type":"Hash256"}],["CheckID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":24,"type":"Hash256"}],["ValidatedHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":25,"type":"Hash256"}],["PreviousPageMin",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":26,"type":"Hash256"}],["NextPageMin",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":27,"type":"Hash256"}],["NFTokenBuyOffer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":28,"type":"Hash256"}],["NFTokenSellOffer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":29,"type":"Hash256"}],["HookStateKey",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":30,"type":"Hash256"}],["HookHash",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":31,"type":"Hash256"}],["HookNamespace",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":32,"type":"Hash256"}],["HookSetTxnID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":33,"type":"Hash256"}],["DomainID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":34,"type":"Hash256"}],["VaultID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":35,"type":"Hash256"}],["ParentBatchID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":36,"type":"Hash256"}],["hash",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":257,"type":"Hash256"}],["index",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":258,"type":"Hash256"}],["Amount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Amount"}],["Balance",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Amount"}],["LimitAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"Amount"}],["TakerPays",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"Amount"}],["TakerGets",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"Amount"}],["LowLimit",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"Amount"}],["HighLimit",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":7,"type":"Amount"}],["Fee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":8,"type":"Amount"}],["SendMax",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":9,"type":"Amount"}],["DeliverMin",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":10,"type":"Amount"}],["Amount2",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":11,"type":"Amount"}],["BidMin",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":12,"type":"Amount"}],["BidMax",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":13,"type":"Amount"}],["MinimumOffer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"Amount"}],["RippleEscrow",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"Amount"}],["DeliveredAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"Amount"}],["NFTokenBrokerFee",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"Amount"}],["BaseFeeDrops",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":22,"type":"Amount"}],["ReserveBaseDrops",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":23,"type":"Amount"}],["ReserveIncrementDrops",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":24,"type":"Amount"}],["LPTokenOut",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":25,"type":"Amount"}],["LPTokenIn",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":26,"type":"Amount"}],["EPrice",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":27,"type":"Amount"}],["Price",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":28,"type":"Amount"}],["SignatureReward",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":29,"type":"Amount"}],["MinAccountCreateAmount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":30,"type":"Amount"}],["LPTokenBalance",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":31,"type":"Amount"}],["PublicKey",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":1,"type":"Blob"}],["MessageKey",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":2,"type":"Blob"}],["SigningPubKey",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":3,"type":"Blob"}],["TxnSignature",{"isSerialized":true,"isSigningField":false,"isVLEncoded":true,"nth":4,"type":"Blob"}],["URI",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":5,"type":"Blob"}],["Signature",{"isSerialized":true,"isSigningField":false,"isVLEncoded":true,"nth":6,"type":"Blob"}],["Domain",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":7,"type":"Blob"}],["FundCode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":8,"type":"Blob"}],["RemoveCode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":9,"type":"Blob"}],["ExpireCode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":10,"type":"Blob"}],["CreateCode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":11,"type":"Blob"}],["MemoType",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":12,"type":"Blob"}],["MemoData",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":13,"type":"Blob"}],["MemoFormat",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":14,"type":"Blob"}],["Fulfillment",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":16,"type":"Blob"}],["Condition",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":17,"type":"Blob"}],["MasterSignature",{"isSerialized":true,"isSigningField":false,"isVLEncoded":true,"nth":18,"type":"Blob"}],["UNLModifyValidator",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":19,"type":"Blob"}],["ValidatorToDisable",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":20,"type":"Blob"}],["ValidatorToReEnable",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":21,"type":"Blob"}],["HookStateData",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":22,"type":"Blob"}],["HookReturnString",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":23,"type":"Blob"}],["HookParameterName",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":24,"type":"Blob"}],["HookParameterValue",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":25,"type":"Blob"}],["DIDDocument",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":26,"type":"Blob"}],["Data",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":27,"type":"Blob"}],["AssetClass",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":28,"type":"Blob"}],["Provider",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":29,"type":"Blob"}],["MPTokenMetadata",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":30,"type":"Blob"}],["CredentialType",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":31,"type":"Blob"}],["Account",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":1,"type":"AccountID"}],["Owner",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":2,"type":"AccountID"}],["Destination",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":3,"type":"AccountID"}],["Issuer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":4,"type":"AccountID"}],["Authorize",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":5,"type":"AccountID"}],["Unauthorize",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":6,"type":"AccountID"}],["RegularKey",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":8,"type":"AccountID"}],["NFTokenMinter",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":9,"type":"AccountID"}],["EmitCallback",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":10,"type":"AccountID"}],["Holder",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":11,"type":"AccountID"}],["Delegate",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":12,"type":"AccountID"}],["HookAccount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":16,"type":"AccountID"}],["OtherChainSource",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":18,"type":"AccountID"}],["OtherChainDestination",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":19,"type":"AccountID"}],["AttestationSignerAccount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":20,"type":"AccountID"}],["AttestationRewardAccount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":21,"type":"AccountID"}],["LockingChainDoor",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":22,"type":"AccountID"}],["IssuingChainDoor",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":23,"type":"AccountID"}],["Subject",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":24,"type":"AccountID"}],["Number",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Number"}],["AssetsAvailable",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Number"}],["AssetsMaximum",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"Number"}],["AssetsTotal",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"Number"}],["LossUnrealized",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"Number"}],["TransactionMetaData",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"STObject"}],["CreatedNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"STObject"}],["DeletedNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"STObject"}],["ModifiedNode",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"STObject"}],["PreviousFields",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"STObject"}],["FinalFields",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":7,"type":"STObject"}],["NewFields",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":8,"type":"STObject"}],["TemplateEntry",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":9,"type":"STObject"}],["Memo",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":10,"type":"STObject"}],["SignerEntry",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":11,"type":"STObject"}],["NFToken",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":12,"type":"STObject"}],["EmitDetails",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":13,"type":"STObject"}],["Hook",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":14,"type":"STObject"}],["Permission",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":15,"type":"STObject"}],["Signer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"STObject"}],["Majority",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"STObject"}],["DisabledValidator",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"STObject"}],["EmittedTxn",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":20,"type":"STObject"}],["HookExecution",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":21,"type":"STObject"}],["HookDefinition",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":22,"type":"STObject"}],["HookParameter",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":23,"type":"STObject"}],["HookGrant",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":24,"type":"STObject"}],["VoteEntry",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":25,"type":"STObject"}],["AuctionSlot",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":26,"type":"STObject"}],["AuthAccount",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":27,"type":"STObject"}],["XChainClaimProofSig",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":28,"type":"STObject"}],["XChainCreateAccountProofSig",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":29,"type":"STObject"}],["XChainClaimAttestationCollectionElement",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":30,"type":"STObject"}],["XChainCreateAccountAttestationCollectionElement",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":31,"type":"STObject"}],["PriceData",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":32,"type":"STObject"}],["Credential",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":33,"type":"STObject"}],["RawTransaction",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":34,"type":"STObject"}],["BatchSigner",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":35,"type":"STObject"}],["Book",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":36,"type":"STObject"}],["Signers",{"isSerialized":true,"isSigningField":false,"isVLEncoded":false,"nth":3,"type":"STArray"}],["SignerEntries",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"STArray"}],["Template",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"STArray"}],["Necessary",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":6,"type":"STArray"}],["Sufficient",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":7,"type":"STArray"}],["AffectedNodes",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":8,"type":"STArray"}],["Memos",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":9,"type":"STArray"}],["NFTokens",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":10,"type":"STArray"}],["Hooks",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":11,"type":"STArray"}],["VoteSlots",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":12,"type":"STArray"}],["AdditionalBooks",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":13,"type":"STArray"}],["Majorities",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"STArray"}],["DisabledValidators",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"STArray"}],["HookExecutions",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"STArray"}],["HookParameters",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"STArray"}],["HookGrants",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":20,"type":"STArray"}],["XChainClaimAttestations",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":21,"type":"STArray"}],["XChainCreateAccountAttestations",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":22,"type":"STArray"}],["PriceDataSeries",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":24,"type":"STArray"}],["AuthAccounts",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":25,"type":"STArray"}],["AuthorizeCredentials",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":26,"type":"STArray"}],["UnauthorizeCredentials",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":27,"type":"STArray"}],["AcceptedCredentials",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":28,"type":"STArray"}],["Permissions",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":29,"type":"STArray"}],["RawTransactions",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":30,"type":"STArray"}],["BatchSigners",{"isSerialized":true,"isSigningField":false,"isVLEncoded":false,"nth":31,"type":"STArray"}],["CloseResolution",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"UInt8"}],["Method",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"UInt8"}],["TransactionResult",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"UInt8"}],["Scale",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"UInt8"}],["AssetScale",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":5,"type":"UInt8"}],["TickSize",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":16,"type":"UInt8"}],["UNLModifyDisabling",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":17,"type":"UInt8"}],["HookResult",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":18,"type":"UInt8"}],["WasLockingChainSend",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":19,"type":"UInt8"}],["WithdrawalPolicy",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":20,"type":"UInt8"}],["TakerPaysCurrency",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Hash160"}],["TakerPaysIssuer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Hash160"}],["TakerGetsCurrency",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"Hash160"}],["TakerGetsIssuer",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"Hash160"}],["Paths",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"PathSet"}],["Indexes",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":1,"type":"Vector256"}],["Hashes",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":2,"type":"Vector256"}],["Amendments",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":3,"type":"Vector256"}],["NFTokenOffers",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":4,"type":"Vector256"}],["CredentialIDs",{"isSerialized":true,"isSigningField":true,"isVLEncoded":true,"nth":5,"type":"Vector256"}],["MPTokenIssuanceID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Hash192"}],["ShareMPTID",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Hash192"}],["LockingChainIssue",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Issue"}],["IssuingChainIssue",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Issue"}],["Asset",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":3,"type":"Issue"}],["Asset2",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":4,"type":"Issue"}],["XChainBridge",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"XChainBridge"}],["BaseAsset",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":1,"type":"Currency"}],["QuoteAsset",{"isSerialized":true,"isSigningField":true,"isVLEncoded":false,"nth":2,"type":"Currency"}],["Transaction",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":257,"type":"Transaction"}],["LedgerEntry",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":257,"type":"LedgerEntry"}],["Validation",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":257,"type":"Validation"}],["Metadata",{"isSerialized":false,"isSigningField":false,"isVLEncoded":false,"nth":257,"type":"Metadata"}]],"LEDGER_ENTRY_TYPES":{"AMM":121,"AccountRoot":97,"Amendments":102,"Bridge":105,"Check":67,"Credential":129,"DID":73,"Delegate":131,"DepositPreauth":112,"DirectoryNode":100,"Escrow":117,"FeeSettings":115,"Invalid":-1,"LedgerHashes":104,"MPToken":127,"MPTokenIssuance":126,"NFTokenOffer":55,"NFTokenPage":80,"NegativeUNL":78,"Offer":111,"Oracle":128,"PayChannel":120,"PermissionedDomain":130,"RippleState":114,"SignerList":83,"Ticket":84,"Vault":132,"XChainOwnedClaimID":113,"XChainOwnedCreateAccountClaimID":116},"TRANSACTION_RESULTS":{"tecAMM_ACCOUNT":168,"tecAMM_BALANCE":163,"tecAMM_EMPTY":166,"tecAMM_FAILED":164,"tecAMM_INVALID_TOKENS":165,"tecAMM_NOT_EMPTY":167,"tecARRAY_EMPTY":190,"tecARRAY_TOO_LARGE":191,"tecBAD_CREDENTIALS":193,"tecCANT_ACCEPT_OWN_NFTOKEN_OFFER":158,"tecCLAIM":100,"tecCRYPTOCONDITION_ERROR":146,"tecDIR_FULL":121,"tecDST_TAG_NEEDED":143,"tecDUPLICATE":149,"tecEMPTY_DID":187,"tecEXPIRED":148,"tecFAILED_PROCESSING":105,"tecFROZEN":137,"tecHAS_OBLIGATIONS":151,"tecHOOK_REJECTED":153,"tecINCOMPLETE":169,"tecINSUFFICIENT_FUNDS":159,"tecINSUFFICIENT_PAYMENT":161,"tecINSUFFICIENT_RESERVE":141,"tecINSUFF_FEE":136,"tecINSUF_RESERVE_LINE":122,"tecINSUF_RESERVE_OFFER":123,"tecINTERNAL":144,"tecINVALID_UPDATE_TIME":188,"tecINVARIANT_FAILED":147,"tecKILLED":150,"tecLIMIT_EXCEEDED":195,"tecLOCKED":192,"tecMAX_SEQUENCE_REACHED":154,"tecNEED_MASTER_KEY":142,"tecNFTOKEN_BUY_SELL_MISMATCH":156,"tecNFTOKEN_OFFER_TYPE_MISMATCH":157,"tecNO_ALTERNATIVE_KEY":130,"tecNO_AUTH":134,"tecNO_DELEGATE_PERMISSION":198,"tecNO_DST":124,"tecNO_DST_INSUF_XRP":125,"tecNO_ENTRY":140,"tecNO_ISSUER":133,"tecNO_LINE":135,"tecNO_LINE_INSUF_RESERVE":126,"tecNO_LINE_REDUNDANT":127,"tecNO_PERMISSION":139,"tecNO_REGULAR_KEY":131,"tecNO_SUITABLE_NFTOKEN_PAGE":155,"tecNO_TARGET":138,"tecOBJECT_NOT_FOUND":160,"tecOVERSIZE":145,"tecOWNERS":132,"tecPATH_DRY":128,"tecPATH_PARTIAL":101,"tecPRECISION_LOSS":197,"tecPSEUDO_ACCOUNT":196,"tecTOKEN_PAIR_NOT_FOUND":189,"tecTOO_SOON":152,"tecUNFUNDED":129,"tecUNFUNDED_ADD":102,"tecUNFUNDED_AMM":162,"tecUNFUNDED_OFFER":103,"tecUNFUNDED_PAYMENT":104,"tecWRONG_ASSET":194,"tecXCHAIN_ACCOUNT_CREATE_PAST":181,"tecXCHAIN_ACCOUNT_CREATE_TOO_MANY":182,"tecXCHAIN_BAD_CLAIM_ID":172,"tecXCHAIN_BAD_PUBLIC_KEY_ACCOUNT_PAIR":185,"tecXCHAIN_BAD_TRANSFER_ISSUE":170,"tecXCHAIN_CLAIM_NO_QUORUM":173,"tecXCHAIN_CREATE_ACCOUNT_DISABLED":186,"tecXCHAIN_CREATE_ACCOUNT_NONXRP_ISSUE":175,"tecXCHAIN_INSUFF_CREATE_AMOUNT":180,"tecXCHAIN_NO_CLAIM_ID":171,"tecXCHAIN_NO_SIGNERS_LIST":178,"tecXCHAIN_PAYMENT_FAILED":183,"tecXCHAIN_PROOF_UNKNOWN_KEY":174,"tecXCHAIN_REWARD_MISMATCH":177,"tecXCHAIN_SELF_COMMIT":184,"tecXCHAIN_SENDING_ACCOUNT_MISMATCH":179,"tecXCHAIN_WRONG_CHAIN":176,"tefALREADY":-198,"tefBAD_ADD_AUTH":-197,"tefBAD_AUTH":-196,"tefBAD_AUTH_MASTER":-183,"tefBAD_LEDGER":-195,"tefBAD_QUORUM":-185,"tefBAD_SIGNATURE":-186,"tefCREATED":-194,"tefEXCEPTION":-193,"tefFAILURE":-199,"tefINTERNAL":-192,"tefINVALID_LEDGER_FIX_TYPE":-178,"tefINVARIANT_FAILED":-182,"tefMASTER_DISABLED":-188,"tefMAX_LEDGER":-187,"tefNFTOKEN_IS_NOT_TRANSFERABLE":-179,"tefNOT_MULTI_SIGNING":-184,"tefNO_AUTH_REQUIRED":-191,"tefNO_TICKET":-180,"tefPAST_SEQ":-190,"tefTOO_BIG":-181,"tefWRONG_PRIOR":-189,"telBAD_DOMAIN":-398,"telBAD_PATH_COUNT":-397,"telBAD_PUBLIC_KEY":-396,"telCAN_NOT_QUEUE":-392,"telCAN_NOT_QUEUE_BALANCE":-391,"telCAN_NOT_QUEUE_BLOCKED":-389,"telCAN_NOT_QUEUE_BLOCKS":-390,"telCAN_NOT_QUEUE_FEE":-388,"telCAN_NOT_QUEUE_FULL":-387,"telENV_RPC_FAILED":-383,"telFAILED_PROCESSING":-395,"telINSUF_FEE_P":-394,"telLOCAL_ERROR":-399,"telNETWORK_ID_MAKES_TX_NON_CANONICAL":-384,"telNO_DST_PARTIAL":-393,"telREQUIRES_NETWORK_ID":-385,"telWRONG_NETWORK":-386,"temARRAY_EMPTY":-253,"temARRAY_TOO_LARGE":-252,"temBAD_AMM_TOKENS":-261,"temBAD_AMOUNT":-298,"temBAD_CURRENCY":-297,"temBAD_EXPIRATION":-296,"temBAD_FEE":-295,"temBAD_ISSUER":-294,"temBAD_LIMIT":-293,"temBAD_NFTOKEN_TRANSFER_FEE":-262,"temBAD_OFFER":-292,"temBAD_PATH":-291,"temBAD_PATH_LOOP":-290,"temBAD_QUORUM":-271,"temBAD_REGKEY":-289,"temBAD_SEND_XRP_LIMIT":-288,"temBAD_SEND_XRP_MAX":-287,"temBAD_SEND_XRP_NO_DIRECT":-286,"temBAD_SEND_XRP_PARTIAL":-285,"temBAD_SEND_XRP_PATHS":-284,"temBAD_SEQUENCE":-283,"temBAD_SIGNATURE":-282,"temBAD_SIGNER":-272,"temBAD_SRC_ACCOUNT":-281,"temBAD_TICK_SIZE":-269,"temBAD_TRANSFER_FEE":-251,"temBAD_TRANSFER_RATE":-280,"temBAD_WEIGHT":-270,"temCANNOT_PREAUTH_SELF":-267,"temDISABLED":-273,"temDST_IS_SRC":-279,"temDST_NEEDED":-278,"temEMPTY_DID":-254,"temINVALID":-277,"temINVALID_ACCOUNT_ID":-268,"temINVALID_COUNT":-266,"temINVALID_FLAG":-276,"temINVALID_INNER_BATCH":-250,"temMALFORMED":-299,"temREDUNDANT":-275,"temRIPPLE_EMPTY":-274,"temSEQ_AND_TICKET":-263,"temUNCERTAIN":-265,"temUNKNOWN":-264,"temXCHAIN_BAD_PROOF":-259,"temXCHAIN_BRIDGE_BAD_ISSUES":-258,"temXCHAIN_BRIDGE_BAD_MIN_ACCOUNT_CREATE_AMOUNT":-256,"temXCHAIN_BRIDGE_BAD_REWARD_AMOUNT":-255,"temXCHAIN_BRIDGE_NONDOOR_OWNER":-257,"temXCHAIN_EQUAL_DOOR_ACCOUNTS":-260,"terADDRESS_COLLISION":-86,"terFUNDS_SPENT":-98,"terINSUF_FEE_B":-97,"terLAST":-91,"terNO_ACCOUNT":-96,"terNO_AMM":-87,"terNO_AUTH":-95,"terNO_LINE":-94,"terNO_RIPPLE":-90,"terOWNERS":-93,"terPRE_SEQ":-92,"terPRE_TICKET":-88,"terQUEUED":-89,"terRETRY":-99,"tesSUCCESS":0},"TRANSACTION_TYPES":{"AMMBid":39,"AMMClawback":31,"AMMCreate":35,"AMMDelete":40,"AMMDeposit":36,"AMMVote":38,"AMMWithdraw":37,"AccountDelete":21,"AccountSet":3,"Batch":71,"CheckCancel":18,"CheckCash":17,"CheckCreate":16,"Clawback":30,"CredentialAccept":59,"CredentialCreate":58,"CredentialDelete":60,"DIDDelete":50,"DIDSet":49,"DelegateSet":64,"DepositPreauth":19,"EnableAmendment":100,"EscrowCancel":4,"EscrowCreate":1,"EscrowFinish":2,"Invalid":-1,"LedgerStateFix":53,"MPTokenAuthorize":57,"MPTokenIssuanceCreate":54,"MPTokenIssuanceDestroy":55,"MPTokenIssuanceSet":56,"NFTokenAcceptOffer":29,"NFTokenBurn":26,"NFTokenCancelOffer":28,"NFTokenCreateOffer":27,"NFTokenMint":25,"NFTokenModify":61,"OfferCancel":8,"OfferCreate":7,"OracleDelete":52,"OracleSet":51,"Payment":0,"PaymentChannelClaim":15,"PaymentChannelCreate":13,"PaymentChannelFund":14,"PermissionedDomainDelete":63,"PermissionedDomainSet":62,"SetFee":101,"SetRegularKey":5,"SignerListSet":12,"TicketCreate":10,"TrustSet":20,"UNLModify":102,"VaultClawback":70,"VaultCreate":65,"VaultDelete":67,"VaultDeposit":68,"VaultSet":66,"VaultWithdraw":69,"XChainAccountCreateCommit":44,"XChainAddAccountCreateAttestation":46,"XChainAddClaimAttestation":45,"XChainClaim":43,"XChainCommit":42,"XChainCreateBridge":48,"XChainCreateClaimID":41,"XChainModifyBridge":47},"TYPES":{"AccountID":8,"Amount":6,"Blob":7,"Currency":26,"Done":-1,"Hash128":4,"Hash160":17,"Hash192":21,"Hash256":5,"Issue":24,"LedgerEntry":10002,"Metadata":10004,"NotPresent":0,"Number":9,"PathSet":18,"STArray":15,"STObject":14,"Transaction":10001,"UInt16":1,"UInt32":2,"UInt384":22,"UInt512":23,"UInt64":3,"UInt8":16,"UInt96":20,"Unknown":-2,"Validation":10003,"Vector256":19,"XChainBridge":25}}');

/***/ })

};
;