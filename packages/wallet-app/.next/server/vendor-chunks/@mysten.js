"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@mysten";
exports.ids = ["vendor-chunks/@mysten"];
exports.modules = {

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js":
/*!******************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/b58.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromB58: () => (/* binding */ fromB58),\n/* harmony export */   toB58: () => (/* binding */ toB58)\n/* harmony export */ });\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bs58 */ \"(ssr)/../../node_modules/bs58/index.js\");\n\nconst toB58 = (buffer) => bs58__WEBPACK_IMPORTED_MODULE_0__.encode(buffer);\nconst fromB58 = (str) => bs58__WEBPACK_IMPORTED_MODULE_0__.decode(str);\n\n//# sourceMappingURL=b58.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL2I1OC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0I7QUFDeEIsMEJBQTBCLHdDQUFXO0FBQ3JDLHlCQUF5Qix3Q0FBVztBQUlsQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL2Jjcy9kaXN0L2VzbS9iNTguanM/NGUyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYnM1OCBmcm9tIFwiYnM1OFwiO1xuY29uc3QgdG9CNTggPSAoYnVmZmVyKSA9PiBiczU4LmVuY29kZShidWZmZXIpO1xuY29uc3QgZnJvbUI1OCA9IChzdHIpID0+IGJzNTguZGVjb2RlKHN0cik7XG5leHBvcnQge1xuICBmcm9tQjU4LFxuICB0b0I1OFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWI1OC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js":
/*!******************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/b64.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromB64: () => (/* binding */ fromB64),\n/* harmony export */   toB64: () => (/* binding */ toB64)\n/* harmony export */ });\nfunction fromB64(base64String) {\n  return Uint8Array.from(atob(base64String), (char) => char.charCodeAt(0));\n}\nconst CHUNK_SIZE = 8192;\nfunction toB64(bytes) {\n  if (bytes.length < CHUNK_SIZE) {\n    return btoa(String.fromCharCode(...bytes));\n  }\n  let output = \"\";\n  for (var i = 0; i < bytes.length; i += CHUNK_SIZE) {\n    const chunk = bytes.slice(i, i + CHUNK_SIZE);\n    output += String.fromCharCode(...chunk);\n  }\n  return btoa(output);\n}\n\n//# sourceMappingURL=b64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL2I2NC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL2I2NC5qcz85MTM1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGZyb21CNjQoYmFzZTY0U3RyaW5nKSB7XG4gIHJldHVybiBVaW50OEFycmF5LmZyb20oYXRvYihiYXNlNjRTdHJpbmcpLCAoY2hhcikgPT4gY2hhci5jaGFyQ29kZUF0KDApKTtcbn1cbmNvbnN0IENIVU5LX1NJWkUgPSA4MTkyO1xuZnVuY3Rpb24gdG9CNjQoYnl0ZXMpIHtcbiAgaWYgKGJ5dGVzLmxlbmd0aCA8IENIVU5LX1NJWkUpIHtcbiAgICByZXR1cm4gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLmJ5dGVzKSk7XG4gIH1cbiAgbGV0IG91dHB1dCA9IFwiXCI7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgYnl0ZXMubGVuZ3RoOyBpICs9IENIVU5LX1NJWkUpIHtcbiAgICBjb25zdCBjaHVuayA9IGJ5dGVzLnNsaWNlKGksIGkgKyBDSFVOS19TSVpFKTtcbiAgICBvdXRwdXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSguLi5jaHVuayk7XG4gIH1cbiAgcmV0dXJuIGJ0b2Eob3V0cHV0KTtcbn1cbmV4cG9ydCB7XG4gIGZyb21CNjQsXG4gIHRvQjY0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YjY0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs-type.js":
/*!***********************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/bcs-type.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BcsType: () => (/* binding */ BcsType),\n/* harmony export */   SerializedBcs: () => (/* binding */ SerializedBcs),\n/* harmony export */   bigUIntBcsType: () => (/* binding */ bigUIntBcsType),\n/* harmony export */   dynamicSizeBcsType: () => (/* binding */ dynamicSizeBcsType),\n/* harmony export */   fixedSizeBcsType: () => (/* binding */ fixedSizeBcsType),\n/* harmony export */   isSerializedBcs: () => (/* binding */ isSerializedBcs),\n/* harmony export */   lazyBcsType: () => (/* binding */ lazyBcsType),\n/* harmony export */   stringLikeBcsType: () => (/* binding */ stringLikeBcsType),\n/* harmony export */   uIntBcsType: () => (/* binding */ uIntBcsType)\n/* harmony export */ });\n/* harmony import */ var _b58_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./b58.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var _b64_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./b64.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hex.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var _reader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reader.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/reader.js\");\n/* harmony import */ var _uleb_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./uleb.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/uleb.js\");\n/* harmony import */ var _writer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./writer.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/writer.js\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _write, _serialize, _schema, _bytes;\n\n\n\n\n\n\nconst _BcsType = class {\n  constructor(options) {\n    __privateAdd(this, _write, void 0);\n    __privateAdd(this, _serialize, void 0);\n    this.name = options.name;\n    this.read = options.read;\n    this.serializedSize = options.serializedSize ?? (() => null);\n    __privateSet(this, _write, options.write);\n    __privateSet(this, _serialize, options.serialize ?? ((value, options2) => {\n      const writer = new _writer_js__WEBPACK_IMPORTED_MODULE_0__.BcsWriter({ size: this.serializedSize(value) ?? void 0, ...options2 });\n      __privateGet(this, _write).call(this, value, writer);\n      return writer.toBytes();\n    }));\n    this.validate = options.validate ?? (() => {\n    });\n  }\n  write(value, writer) {\n    this.validate(value);\n    __privateGet(this, _write).call(this, value, writer);\n  }\n  serialize(value, options) {\n    this.validate(value);\n    return new SerializedBcs(this, __privateGet(this, _serialize).call(this, value, options));\n  }\n  parse(bytes) {\n    const reader = new _reader_js__WEBPACK_IMPORTED_MODULE_1__.BcsReader(bytes);\n    return this.read(reader);\n  }\n  transform({\n    name,\n    input,\n    output\n  }) {\n    return new _BcsType({\n      name: name ?? this.name,\n      read: (reader) => output(this.read(reader)),\n      write: (value, writer) => __privateGet(this, _write).call(this, input(value), writer),\n      serializedSize: (value) => this.serializedSize(input(value)),\n      serialize: (value, options) => __privateGet(this, _serialize).call(this, input(value), options),\n      validate: (value) => this.validate(input(value))\n    });\n  }\n};\nlet BcsType = _BcsType;\n_write = new WeakMap();\n_serialize = new WeakMap();\nconst SERIALIZED_BCS_BRAND = Symbol.for(\"@mysten/serialized-bcs\");\nfunction isSerializedBcs(obj) {\n  return !!obj && typeof obj === \"object\" && obj[SERIALIZED_BCS_BRAND] === true;\n}\nclass SerializedBcs {\n  constructor(type, schema) {\n    __privateAdd(this, _schema, void 0);\n    __privateAdd(this, _bytes, void 0);\n    __privateSet(this, _schema, type);\n    __privateSet(this, _bytes, schema);\n  }\n  // Used to brand SerializedBcs so that they can be identified, even between multiple copies\n  // of the @mysten/bcs package are installed\n  get [SERIALIZED_BCS_BRAND]() {\n    return true;\n  }\n  toBytes() {\n    return __privateGet(this, _bytes);\n  }\n  toHex() {\n    return (0,_hex_js__WEBPACK_IMPORTED_MODULE_2__.toHEX)(__privateGet(this, _bytes));\n  }\n  toBase64() {\n    return (0,_b64_js__WEBPACK_IMPORTED_MODULE_3__.toB64)(__privateGet(this, _bytes));\n  }\n  toBase58() {\n    return (0,_b58_js__WEBPACK_IMPORTED_MODULE_4__.toB58)(__privateGet(this, _bytes));\n  }\n  parse() {\n    return __privateGet(this, _schema).parse(__privateGet(this, _bytes));\n  }\n}\n_schema = new WeakMap();\n_bytes = new WeakMap();\nfunction fixedSizeBcsType({\n  size,\n  ...options\n}) {\n  return new BcsType({\n    ...options,\n    serializedSize: () => size\n  });\n}\nfunction uIntBcsType({\n  readMethod,\n  writeMethod,\n  ...options\n}) {\n  return fixedSizeBcsType({\n    ...options,\n    read: (reader) => reader[readMethod](),\n    write: (value, writer) => writer[writeMethod](value),\n    validate: (value) => {\n      if (value < 0 || value > options.maxValue) {\n        throw new TypeError(\n          `Invalid ${options.name} value: ${value}. Expected value in range 0-${options.maxValue}`\n        );\n      }\n      options.validate?.(value);\n    }\n  });\n}\nfunction bigUIntBcsType({\n  readMethod,\n  writeMethod,\n  ...options\n}) {\n  return fixedSizeBcsType({\n    ...options,\n    read: (reader) => reader[readMethod](),\n    write: (value, writer) => writer[writeMethod](BigInt(value)),\n    validate: (val) => {\n      const value = BigInt(val);\n      if (value < 0 || value > options.maxValue) {\n        throw new TypeError(\n          `Invalid ${options.name} value: ${value}. Expected value in range 0-${options.maxValue}`\n        );\n      }\n      options.validate?.(value);\n    }\n  });\n}\nfunction dynamicSizeBcsType({\n  serialize,\n  ...options\n}) {\n  const type = new BcsType({\n    ...options,\n    serialize,\n    write: (value, writer) => {\n      for (const byte of type.serialize(value).toBytes()) {\n        writer.write8(byte);\n      }\n    }\n  });\n  return type;\n}\nfunction stringLikeBcsType({\n  toBytes,\n  fromBytes,\n  ...options\n}) {\n  return new BcsType({\n    ...options,\n    read: (reader) => {\n      const length = reader.readULEB();\n      const bytes = reader.readBytes(length);\n      return fromBytes(bytes);\n    },\n    write: (hex, writer) => {\n      const bytes = toBytes(hex);\n      writer.writeULEB(bytes.length);\n      for (let i = 0; i < bytes.length; i++) {\n        writer.write8(bytes[i]);\n      }\n    },\n    serialize: (value) => {\n      const bytes = toBytes(value);\n      const size = (0,_uleb_js__WEBPACK_IMPORTED_MODULE_5__.ulebEncode)(bytes.length);\n      const result = new Uint8Array(size.length + bytes.length);\n      result.set(size, 0);\n      result.set(bytes, size.length);\n      return result;\n    },\n    validate: (value) => {\n      if (typeof value !== \"string\") {\n        throw new TypeError(`Invalid ${options.name} value: ${value}. Expected string`);\n      }\n      options.validate?.(value);\n    }\n  });\n}\nfunction lazyBcsType(cb) {\n  let lazyType = null;\n  function getType() {\n    if (!lazyType) {\n      lazyType = cb();\n    }\n    return lazyType;\n  }\n  return new BcsType({\n    name: \"lazy\",\n    read: (data) => getType().read(data),\n    serializedSize: (value) => getType().serializedSize(value),\n    write: (value, writer) => getType().write(value, writer),\n    serialize: (value, options) => getType().serialize(value, options).toBytes()\n  });\n}\n\n//# sourceMappingURL=bcs-type.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs-type.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs.js":
/*!******************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/bcs.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bcs: () => (/* binding */ bcs)\n/* harmony export */ });\n/* harmony import */ var _bcs_type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bcs-type.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs-type.js\");\n/* harmony import */ var _uleb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./uleb.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/uleb.js\");\n\n\nconst bcs = {\n  /**\n   * Creates a BcsType that can be used to read and write an 8-bit unsigned integer.\n   * @example\n   * bcs.u8().serialize(255).toBytes() // Uint8Array [ 255 ]\n   */\n  u8(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.uIntBcsType)({\n      name: \"u8\",\n      readMethod: \"read8\",\n      writeMethod: \"write8\",\n      size: 1,\n      maxValue: 2 ** 8 - 1,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 16-bit unsigned integer.\n   * @example\n   * bcs.u16().serialize(65535).toBytes() // Uint8Array [ 255, 255 ]\n   */\n  u16(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.uIntBcsType)({\n      name: \"u16\",\n      readMethod: \"read16\",\n      writeMethod: \"write16\",\n      size: 2,\n      maxValue: 2 ** 16 - 1,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 32-bit unsigned integer.\n   * @example\n   * bcs.u32().serialize(4294967295).toBytes() // Uint8Array [ 255, 255, 255, 255 ]\n   */\n  u32(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.uIntBcsType)({\n      name: \"u32\",\n      readMethod: \"read32\",\n      writeMethod: \"write32\",\n      size: 4,\n      maxValue: 2 ** 32 - 1,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 64-bit unsigned integer.\n   * @example\n   * bcs.u64().serialize(1).toBytes() // Uint8Array [ 1, 0, 0, 0, 0, 0, 0, 0 ]\n   */\n  u64(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.bigUIntBcsType)({\n      name: \"u64\",\n      readMethod: \"read64\",\n      writeMethod: \"write64\",\n      size: 8,\n      maxValue: 2n ** 64n - 1n,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 128-bit unsigned integer.\n   * @example\n   * bcs.u128().serialize(1).toBytes() // Uint8Array [ 1, ..., 0 ]\n   */\n  u128(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.bigUIntBcsType)({\n      name: \"u128\",\n      readMethod: \"read128\",\n      writeMethod: \"write128\",\n      size: 16,\n      maxValue: 2n ** 128n - 1n,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write a 256-bit unsigned integer.\n   * @example\n   * bcs.u256().serialize(1).toBytes() // Uint8Array [ 1, ..., 0 ]\n   */\n  u256(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.bigUIntBcsType)({\n      name: \"u256\",\n      readMethod: \"read256\",\n      writeMethod: \"write256\",\n      size: 32,\n      maxValue: 2n ** 256n - 1n,\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write boolean values.\n   * @example\n   * bcs.bool().serialize(true).toBytes() // Uint8Array [ 1 ]\n   */\n  bool(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.fixedSizeBcsType)({\n      name: \"bool\",\n      size: 1,\n      read: (reader) => reader.read8() === 1,\n      write: (value, writer) => writer.write8(value ? 1 : 0),\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (typeof value !== \"boolean\") {\n          throw new TypeError(`Expected boolean, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType that can be used to read and write unsigned LEB encoded integers\n   * @example\n   *\n   */\n  uleb128(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.dynamicSizeBcsType)({\n      name: \"uleb128\",\n      read: (reader) => reader.readULEB(),\n      serialize: (value) => {\n        return Uint8Array.from((0,_uleb_js__WEBPACK_IMPORTED_MODULE_1__.ulebEncode)(value));\n      },\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType representing a fixed length byte array\n   * @param size The number of bytes this types represents\n   * @example\n   * bcs.bytes(3).serialize(new Uint8Array([1, 2, 3])).toBytes() // Uint8Array [1, 2, 3]\n   */\n  bytes(size, options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.fixedSizeBcsType)({\n      name: `bytes[${size}]`,\n      size,\n      read: (reader) => reader.readBytes(size),\n      write: (value, writer) => {\n        for (let i = 0; i < size; i++) {\n          writer.write8(value[i] ?? 0);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n        if (value.length !== size) {\n          throw new TypeError(`Expected array of length ${size}, found ${value.length}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType that can ser/de string values.  Strings will be UTF-8 encoded\n   * @example\n   * bcs.string().serialize('a').toBytes() // Uint8Array [ 1, 97 ]\n   */\n  string(options) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.stringLikeBcsType)({\n      name: \"string\",\n      toBytes: (value) => new TextEncoder().encode(value),\n      fromBytes: (bytes) => new TextDecoder().decode(bytes),\n      ...options\n    });\n  },\n  /**\n   * Creates a BcsType that represents a fixed length array of a given type\n   * @param size The number of elements in the array\n   * @param type The BcsType of each element in the array\n   * @example\n   * bcs.fixedArray(3, bcs.u8()).serialize([1, 2, 3]).toBytes() // Uint8Array [ 1, 2, 3 ]\n   */\n  fixedArray(size, type, options) {\n    return new _bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.BcsType({\n      name: `${type.name}[${size}]`,\n      read: (reader) => {\n        const result = new Array(size);\n        for (let i = 0; i < size; i++) {\n          result[i] = type.read(reader);\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        for (const item of value) {\n          type.write(item, writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n        if (value.length !== size) {\n          throw new TypeError(`Expected array of length ${size}, found ${value.length}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing an optional value\n   * @param type The BcsType of the optional value\n   * @example\n   * bcs.option(bcs.u8()).serialize(null).toBytes() // Uint8Array [ 0 ]\n   * bcs.option(bcs.u8()).serialize(1).toBytes() // Uint8Array [ 1, 1 ]\n   */\n  option(type) {\n    return bcs.enum(`Option<${type.name}>`, {\n      None: null,\n      Some: type\n    }).transform({\n      input: (value) => {\n        if (value == null) {\n          return { None: true };\n        }\n        return { Some: value };\n      },\n      output: (value) => {\n        if (\"Some\" in value) {\n          return value.Some;\n        }\n        return null;\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a variable length vector of a given type\n   * @param type The BcsType of each element in the vector\n   *\n   * @example\n   * bcs.vector(bcs.u8()).toBytes([1, 2, 3]) // Uint8Array [ 3, 1, 2, 3 ]\n   */\n  vector(type, options) {\n    return new _bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.BcsType({\n      name: `vector<${type.name}>`,\n      read: (reader) => {\n        const length = reader.readULEB();\n        const result = new Array(length);\n        for (let i = 0; i < length; i++) {\n          result[i] = type.read(reader);\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        writer.writeULEB(value.length);\n        for (const item of value) {\n          type.write(item, writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!(\"length\" in value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a tuple of a given set of types\n   * @param types The BcsTypes for each element in the tuple\n   *\n   * @example\n   * const tuple = bcs.tuple([bcs.u8(), bcs.string(), bcs.bool()])\n   * tuple.serialize([1, 'a', true]).toBytes() // Uint8Array [ 1, 1, 97, 1 ]\n   */\n  tuple(types, options) {\n    return new _bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.BcsType({\n      name: `(${types.map((t) => t.name).join(\", \")})`,\n      serializedSize: (values) => {\n        let total = 0;\n        for (let i = 0; i < types.length; i++) {\n          const size = types[i].serializedSize(values[i]);\n          if (size == null) {\n            return null;\n          }\n          total += size;\n        }\n        return total;\n      },\n      read: (reader) => {\n        const result = [];\n        for (const type of types) {\n          result.push(type.read(reader));\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        for (let i = 0; i < types.length; i++) {\n          types[i].write(value[i], writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (!Array.isArray(value)) {\n          throw new TypeError(`Expected array, found ${typeof value}`);\n        }\n        if (value.length !== types.length) {\n          throw new TypeError(`Expected array of length ${types.length}, found ${value.length}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a struct of a given set of fields\n   * @param name The name of the struct\n   * @param fields The fields of the struct. The order of the fields affects how data is serialized and deserialized\n   *\n   * @example\n   * const struct = bcs.struct('MyStruct', {\n   *  a: bcs.u8(),\n   *  b: bcs.string(),\n   * })\n   * struct.serialize({ a: 1, b: 'a' }).toBytes() // Uint8Array [ 1, 1, 97 ]\n   */\n  struct(name, fields, options) {\n    const canonicalOrder = Object.entries(fields);\n    return new _bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.BcsType({\n      name,\n      serializedSize: (values) => {\n        let total = 0;\n        for (const [field, type] of canonicalOrder) {\n          const size = type.serializedSize(values[field]);\n          if (size == null) {\n            return null;\n          }\n          total += size;\n        }\n        return total;\n      },\n      read: (reader) => {\n        const result = {};\n        for (const [field, type] of canonicalOrder) {\n          result[field] = type.read(reader);\n        }\n        return result;\n      },\n      write: (value, writer) => {\n        for (const [field, type] of canonicalOrder) {\n          type.write(value[field], writer);\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (typeof value !== \"object\" || value == null) {\n          throw new TypeError(`Expected object, found ${typeof value}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing an enum of a given set of options\n   * @param name The name of the enum\n   * @param values The values of the enum. The order of the values affects how data is serialized and deserialized.\n   * null can be used to represent a variant with no data.\n   *\n   * @example\n   * const enum = bcs.enum('MyEnum', {\n   *   A: bcs.u8(),\n   *   B: bcs.string(),\n   *   C: null,\n   * })\n   * enum.serialize({ A: 1 }).toBytes() // Uint8Array [ 0, 1 ]\n   * enum.serialize({ B: 'a' }).toBytes() // Uint8Array [ 1, 1, 97 ]\n   * enum.serialize({ C: true }).toBytes() // Uint8Array [ 2 ]\n   */\n  enum(name, values, options) {\n    const canonicalOrder = Object.entries(values);\n    return new _bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.BcsType({\n      name,\n      read: (reader) => {\n        const index = reader.readULEB();\n        const [name2, type] = canonicalOrder[index];\n        return {\n          [name2]: type?.read(reader) ?? true\n        };\n      },\n      write: (value, writer) => {\n        const [name2, val] = Object.entries(value)[0];\n        for (let i = 0; i < canonicalOrder.length; i++) {\n          const [optionName, optionType] = canonicalOrder[i];\n          if (optionName === name2) {\n            writer.writeULEB(i);\n            optionType?.write(val, writer);\n            return;\n          }\n        }\n      },\n      ...options,\n      validate: (value) => {\n        options?.validate?.(value);\n        if (typeof value !== \"object\" || value == null) {\n          throw new TypeError(`Expected object, found ${typeof value}`);\n        }\n        const keys = Object.keys(value);\n        if (keys.length !== 1) {\n          throw new TypeError(`Expected object with one key, found ${keys.length}`);\n        }\n        const [name2] = keys;\n        if (!Object.hasOwn(values, name2)) {\n          throw new TypeError(`Invalid enum variant ${name2}`);\n        }\n      }\n    });\n  },\n  /**\n   * Creates a BcsType representing a map of a given key and value type\n   * @param keyType The BcsType of the key\n   * @param valueType The BcsType of the value\n   * @example\n   * const map = bcs.map(bcs.u8(), bcs.string())\n   * map.serialize(new Map([[2, 'a']])).toBytes() // Uint8Array [ 1, 2, 1, 97 ]\n   */\n  map(keyType, valueType) {\n    return bcs.vector(bcs.tuple([keyType, valueType])).transform({\n      name: `Map<${keyType.name}, ${valueType.name}>`,\n      input: (value) => {\n        return [...value.entries()];\n      },\n      output: (value) => {\n        const result = /* @__PURE__ */ new Map();\n        for (const [key, val] of value) {\n          result.set(key, val);\n        }\n        return result;\n      }\n    });\n  },\n  /**\n   * @deprecated\n   *\n   * Generics should be implemented as generic typescript functions instead:\n   *\n   * ```ts\n   * function VecMap<K, V>, (K: BcsType<K>, V: BcsType<V>) {\n   *   return bcs.struct('VecMap<K, V>', {\n   *     keys: bcs.vector(K),\n   *     values: bcs.vector(V),\n   *   })\n   * }\n   * ```\n   */\n  generic(_names, cb) {\n    return (...types) => {\n      return cb(...types).transform({\n        name: `${cb.name}<${types.map((t) => t.name).join(\", \")}>`,\n        input: (value) => value,\n        output: (value) => value\n      });\n    };\n  },\n  /**\n   * Creates a BcsType that wraps another BcsType which is lazily evaluated. This is useful for creating recursive types.\n   * @param cb A callback that returns the BcsType\n   */\n  lazy(cb) {\n    return (0,_bcs_type_js__WEBPACK_IMPORTED_MODULE_0__.lazyBcsType)(cb);\n  }\n};\n\n//# sourceMappingURL=bcs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js":
/*!******************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/hex.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromHEX: () => (/* binding */ fromHEX),\n/* harmony export */   toHEX: () => (/* binding */ toHEX)\n/* harmony export */ });\nfunction fromHEX(hexStr) {\n  const normalized = hexStr.startsWith(\"0x\") ? hexStr.slice(2) : hexStr;\n  const padded = normalized.length % 2 === 0 ? normalized : `0${normalized}}`;\n  const intArr = padded.match(/.{2}/g)?.map((byte) => parseInt(byte, 16)) ?? [];\n  return Uint8Array.from(intArr);\n}\nfunction toHEX(bytes) {\n  return bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, \"0\"), \"\");\n}\n\n//# sourceMappingURL=hex.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL2hleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxnRUFBZ0UsWUFBWTtBQUM1RSxpQ0FBaUMsRUFBRTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9iY3MvZGlzdC9lc20vaGV4LmpzP2M2ZjIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZnJvbUhFWChoZXhTdHIpIHtcbiAgY29uc3Qgbm9ybWFsaXplZCA9IGhleFN0ci5zdGFydHNXaXRoKFwiMHhcIikgPyBoZXhTdHIuc2xpY2UoMikgOiBoZXhTdHI7XG4gIGNvbnN0IHBhZGRlZCA9IG5vcm1hbGl6ZWQubGVuZ3RoICUgMiA9PT0gMCA/IG5vcm1hbGl6ZWQgOiBgMCR7bm9ybWFsaXplZH19YDtcbiAgY29uc3QgaW50QXJyID0gcGFkZGVkLm1hdGNoKC8uezJ9L2cpPy5tYXAoKGJ5dGUpID0+IHBhcnNlSW50KGJ5dGUsIDE2KSkgPz8gW107XG4gIHJldHVybiBVaW50OEFycmF5LmZyb20oaW50QXJyKTtcbn1cbmZ1bmN0aW9uIHRvSEVYKGJ5dGVzKSB7XG4gIHJldHVybiBieXRlcy5yZWR1Y2UoKHN0ciwgYnl0ZSkgPT4gc3RyICsgYnl0ZS50b1N0cmluZygxNikucGFkU3RhcnQoMiwgXCIwXCIpLCBcIlwiKTtcbn1cbmV4cG9ydCB7XG4gIGZyb21IRVgsXG4gIHRvSEVYXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/legacy-registry.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/legacy-registry.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BCS: () => (/* binding */ BCS),\n/* harmony export */   getRustConfig: () => (/* binding */ getRustConfig),\n/* harmony export */   getSuiMoveConfig: () => (/* binding */ getSuiMoveConfig),\n/* harmony export */   registerPrimitives: () => (/* binding */ registerPrimitives)\n/* harmony export */ });\n/* harmony import */ var _b58_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./b58.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var _b64_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./b64.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _bcs_type_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bcs-type.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs-type.js\");\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./hex.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var _reader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./reader.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/reader.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/utils.js\");\n/* harmony import */ var _writer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./writer.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/writer.js\");\n\n\n\n\n\n\n\nconst SUI_ADDRESS_LENGTH = 32;\nconst _BCS = class {\n  /**\n   * Construct a BCS instance with a prepared schema.\n   *\n   * @param schema A prepared schema with type definitions\n   * @param withPrimitives Whether to register primitive types by default\n   */\n  constructor(schema) {\n    /**\n     * Map of kind `TypeName => TypeInterface`. Holds all\n     * callbacks for (de)serialization of every registered type.\n     *\n     * If the value stored is a string, it is treated as an alias.\n     */\n    this.types = /* @__PURE__ */ new Map();\n    /**\n     * Count temp keys to generate a new one when requested.\n     */\n    this.counter = 0;\n    if (schema instanceof _BCS) {\n      this.schema = schema.schema;\n      this.types = new Map(schema.types);\n      return;\n    }\n    this.schema = schema;\n    this.registerAddressType(_BCS.ADDRESS, schema.addressLength, schema.addressEncoding);\n    this.registerVectorType(schema.vectorType);\n    if (schema.types && schema.types.structs) {\n      for (let name of Object.keys(schema.types.structs)) {\n        this.registerStructType(name, schema.types.structs[name]);\n      }\n    }\n    if (schema.types && schema.types.enums) {\n      for (let name of Object.keys(schema.types.enums)) {\n        this.registerEnumType(name, schema.types.enums[name]);\n      }\n    }\n    if (schema.types && schema.types.aliases) {\n      for (let name of Object.keys(schema.types.aliases)) {\n        this.registerAlias(name, schema.types.aliases[name]);\n      }\n    }\n    if (schema.withPrimitives !== false) {\n      registerPrimitives(this);\n    }\n  }\n  /**\n   * Name of the key to use for temporary struct definitions.\n   * Returns a temp key + index (for a case when multiple temp\n   * structs are processed).\n   */\n  tempKey() {\n    return `bcs-struct-${++this.counter}`;\n  }\n  /**\n   * Serialize data into bcs.\n   *\n   * @example\n   * bcs.registerVectorType('vector<u8>', 'u8');\n   *\n   * let serialized = BCS\n   *   .set('vector<u8>', [1,2,3,4,5,6])\n   *   .toBytes();\n   *\n   * console.assert(toHex(serialized) === '06010203040506');\n   *\n   * @param type Name of the type to serialize (must be registered) or a struct type.\n   * @param data Data to serialize.\n   * @param size Serialization buffer size. Default 1024 = 1KB.\n   * @return A BCS reader instance. Usually you'd want to call `.toBytes()`\n   */\n  ser(type, data, options) {\n    if (typeof type === \"string\" || Array.isArray(type)) {\n      const { name, params } = this.parseTypeName(type);\n      return this.getTypeInterface(name).encode(this, data, options, params);\n    }\n    if (typeof type === \"object\") {\n      const key = this.tempKey();\n      const temp = new _BCS(this);\n      return temp.registerStructType(key, type).ser(key, data, options);\n    }\n    throw new Error(`Incorrect type passed into the '.ser()' function. \n${JSON.stringify(type)}`);\n  }\n  /**\n   * Deserialize BCS into a JS type.\n   *\n   * @example\n   * let num = bcs.ser('u64', '4294967295').toString('hex');\n   * let deNum = bcs.de('u64', num, 'hex');\n   * console.assert(deNum.toString(10) === '4294967295');\n   *\n   * @param type Name of the type to deserialize (must be registered) or a struct type definition.\n   * @param data Data to deserialize.\n   * @param encoding Optional - encoding to use if data is of type String\n   * @return Deserialized data.\n   */\n  de(type, data, encoding) {\n    if (typeof data === \"string\") {\n      if (encoding) {\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.decodeStr)(data, encoding);\n      } else {\n        throw new Error(\"To pass a string to `bcs.de`, specify encoding\");\n      }\n    }\n    if (typeof type === \"string\" || Array.isArray(type)) {\n      const { name, params } = this.parseTypeName(type);\n      return this.getTypeInterface(name).decode(this, data, params);\n    }\n    if (typeof type === \"object\") {\n      const temp = new _BCS(this);\n      const key = this.tempKey();\n      return temp.registerStructType(key, type).de(key, data, encoding);\n    }\n    throw new Error(`Incorrect type passed into the '.de()' function. \n${JSON.stringify(type)}`);\n  }\n  /**\n   * Check whether a `TypeInterface` has been loaded for a `type`.\n   * @param type Name of the type to check.\n   * @returns\n   */\n  hasType(type) {\n    return this.types.has(type);\n  }\n  /**\n   * Create an alias for a type.\n   * WARNING: this can potentially lead to recursion\n   * @param name Alias to use\n   * @param forType Type to reference\n   * @returns\n   *\n   * @example\n   * ```\n   * let bcs = new BCS(getSuiMoveConfig());\n   * bcs.registerAlias('ObjectDigest', BCS.BASE58);\n   * let b58_digest = bcs.de('ObjectDigest', '<digest_bytes>', 'base64');\n   * ```\n   */\n  registerAlias(name, forType) {\n    this.types.set(name, forType);\n    return this;\n  }\n  /**\n   * Method to register new types for BCS internal representation.\n   * For each registered type 2 callbacks must be specified and one is optional:\n   *\n   * - encodeCb(writer, data) - write a way to serialize data with BcsWriter;\n   * - decodeCb(reader) - write a way to deserialize data with BcsReader;\n   * - validateCb(data) - validate data - either return bool or throw an error\n   *\n   * @example\n   * // our type would be a string that consists only of numbers\n   * bcs.registerType('number_string',\n   *    (writer, data) => writer.writeVec(data, (w, el) => w.write8(el)),\n   *    (reader) => reader.readVec((r) => r.read8()).join(''), // read each value as u8\n   *    (value) => /[0-9]+/.test(value) // test that it has at least one digit\n   * );\n   * console.log(Array.from(bcs.ser('number_string', '12345').toBytes()) == [5,1,2,3,4,5]);\n   *\n   * @param name\n   * @param encodeCb Callback to encode a value.\n   * @param decodeCb Callback to decode a value.\n   * @param validateCb Optional validator Callback to check type before serialization.\n   */\n  registerType(typeName, encodeCb, decodeCb, validateCb = () => true) {\n    const { name, params: generics } = this.parseTypeName(typeName);\n    this.types.set(name, {\n      encode(self, data, options, typeParams) {\n        const typeMap = generics.reduce((acc, value, index) => {\n          return Object.assign(acc, { [value]: typeParams[index] });\n        }, {});\n        return this._encodeRaw.call(self, new _writer_js__WEBPACK_IMPORTED_MODULE_1__.BcsWriter(options), data, typeParams, typeMap);\n      },\n      decode(self, data, typeParams) {\n        const typeMap = generics.reduce((acc, value, index) => {\n          return Object.assign(acc, { [value]: typeParams[index] });\n        }, {});\n        return this._decodeRaw.call(self, new _reader_js__WEBPACK_IMPORTED_MODULE_2__.BcsReader(data), typeParams, typeMap);\n      },\n      // these methods should always be used with caution as they require pre-defined\n      // reader and writer and mainly exist to allow multi-field (de)serialization;\n      _encodeRaw(writer, data, typeParams, typeMap) {\n        if (validateCb(data)) {\n          return encodeCb.call(this, writer, data, typeParams, typeMap);\n        } else {\n          throw new Error(`Validation failed for type ${name}, data: ${data}`);\n        }\n      },\n      _decodeRaw(reader, typeParams, typeMap) {\n        return decodeCb.call(this, reader, typeParams, typeMap);\n      }\n    });\n    return this;\n  }\n  /**\n  \t * Method to register BcsType instances to the registry\n  \t * Types are registered with a callback that provides BcsType instances for each generic\n  \t * passed to the type.\n  \t *\n  \t * - createType(...generics) - Return a BcsType instance\n  \t *\n  \t * @example\n  \t * // our type would be a string that consists only of numbers\n  \t * bcs.registerType('Box<T>', (T) => {\n  \t * \t\treturn bcs.struct({\n  \t * \t\t\tvalue: T\n  \t * \t\t});\n  \t * });\n  \n  \t * console.log(Array.from(bcs.ser('Box<string>', '12345').toBytes()) == [5,1,2,3,4,5]);\n  \t *\n  \t * @param name\n  \t * @param createType a Callback to create the BcsType with any passed in generics\n  \t */\n  registerBcsType(typeName, createType) {\n    this.registerType(\n      typeName,\n      (writer, data, typeParams) => {\n        const generics = typeParams.map(\n          (param) => new _bcs_type_js__WEBPACK_IMPORTED_MODULE_3__.BcsType({\n            name: String(param),\n            write: (data2, writer2) => {\n              const { name, params } = this.parseTypeName(param);\n              const typeInterface = this.getTypeInterface(name);\n              const typeMap = params.reduce((acc, value, index) => {\n                return Object.assign(acc, { [value]: typeParams[index] });\n              }, {});\n              return typeInterface._encodeRaw.call(this, writer2, data2, params, typeMap);\n            },\n            read: () => {\n              throw new Error(\"Not implemented\");\n            }\n          })\n        );\n        createType(...generics).write(data, writer);\n        return writer;\n      },\n      (reader, typeParams) => {\n        const generics = typeParams.map(\n          (param) => new _bcs_type_js__WEBPACK_IMPORTED_MODULE_3__.BcsType({\n            name: String(param),\n            write: (_data, _writer) => {\n              throw new Error(\"Not implemented\");\n            },\n            read: (reader2) => {\n              const { name, params } = this.parseTypeName(param);\n              const typeInterface = this.getTypeInterface(name);\n              const typeMap = params.reduce((acc, value, index) => {\n                return Object.assign(acc, { [value]: typeParams[index] });\n              }, {});\n              return typeInterface._decodeRaw.call(this, reader2, params, typeMap);\n            }\n          })\n        );\n        return createType(...generics).read(reader);\n      }\n    );\n    return this;\n  }\n  /**\n   * Register an address type which is a sequence of U8s of specified length.\n   * @example\n   * bcs.registerAddressType('address', SUI_ADDRESS_LENGTH);\n   * let addr = bcs.de('address', 'c3aca510c785c7094ac99aeaa1e69d493122444df50bb8a99dfa790c654a79af');\n   *\n   * @param name Name of the address type.\n   * @param length Byte length of the address.\n   * @param encoding Encoding to use for the address type\n   * @returns\n   */\n  registerAddressType(name, length, encoding = \"hex\") {\n    switch (encoding) {\n      case \"base64\":\n        return this.registerType(\n          name,\n          function encodeAddress(writer, data) {\n            return (0,_b64_js__WEBPACK_IMPORTED_MODULE_4__.fromB64)(data).reduce((writer2, el) => writer2.write8(el), writer);\n          },\n          function decodeAddress(reader) {\n            return (0,_b64_js__WEBPACK_IMPORTED_MODULE_4__.toB64)(reader.readBytes(length));\n          }\n        );\n      case \"hex\":\n        return this.registerType(\n          name,\n          function encodeAddress(writer, data) {\n            return (0,_hex_js__WEBPACK_IMPORTED_MODULE_5__.fromHEX)(data).reduce((writer2, el) => writer2.write8(el), writer);\n          },\n          function decodeAddress(reader) {\n            return (0,_hex_js__WEBPACK_IMPORTED_MODULE_5__.toHEX)(reader.readBytes(length));\n          }\n        );\n      default:\n        throw new Error(\"Unsupported encoding! Use either hex or base64\");\n    }\n  }\n  /**\n   * Register custom vector type inside the bcs.\n   *\n   * @example\n   * bcs.registerVectorType('vector<T>'); // generic registration\n   * let array = bcs.de('vector<u8>', '06010203040506', 'hex'); // [1,2,3,4,5,6];\n   * let again = bcs.ser('vector<u8>', [1,2,3,4,5,6]).toString('hex');\n   *\n   * @param name Name of the type to register\n   * @param elementType Optional name of the inner type of the vector\n   * @return Returns self for chaining.\n   */\n  registerVectorType(typeName) {\n    let { name, params } = this.parseTypeName(typeName);\n    if (params.length > 1) {\n      throw new Error(\"Vector can have only one type parameter; got \" + name);\n    }\n    return this.registerType(\n      typeName,\n      function encodeVector(writer, data, typeParams, typeMap) {\n        return writer.writeVec(data, (writer2, el) => {\n          let elementType = typeParams[0];\n          if (!elementType) {\n            throw new Error(`Incorrect number of type parameters passed a to vector '${typeName}'`);\n          }\n          let { name: name2, params: params2 } = this.parseTypeName(elementType);\n          if (this.hasType(name2)) {\n            return this.getTypeInterface(name2)._encodeRaw.call(this, writer2, el, params2, typeMap);\n          }\n          if (!(name2 in typeMap)) {\n            throw new Error(\n              `Unable to find a matching type definition for ${name2} in vector; make sure you passed a generic`\n            );\n          }\n          let { name: innerName, params: innerParams } = this.parseTypeName(typeMap[name2]);\n          return this.getTypeInterface(innerName)._encodeRaw.call(\n            this,\n            writer2,\n            el,\n            innerParams,\n            typeMap\n          );\n        });\n      },\n      function decodeVector(reader, typeParams, typeMap) {\n        return reader.readVec((reader2) => {\n          let elementType = typeParams[0];\n          if (!elementType) {\n            throw new Error(`Incorrect number of type parameters passed to a vector '${typeName}'`);\n          }\n          let { name: name2, params: params2 } = this.parseTypeName(elementType);\n          if (this.hasType(name2)) {\n            return this.getTypeInterface(name2)._decodeRaw.call(this, reader2, params2, typeMap);\n          }\n          if (!(name2 in typeMap)) {\n            throw new Error(\n              `Unable to find a matching type definition for ${name2} in vector; make sure you passed a generic`\n            );\n          }\n          let { name: innerName, params: innerParams } = this.parseTypeName(typeMap[name2]);\n          return this.getTypeInterface(innerName)._decodeRaw.call(\n            this,\n            reader2,\n            innerParams,\n            typeMap\n          );\n        });\n      }\n    );\n  }\n  /**\n   * Safe method to register a custom Move struct. The first argument is a name of the\n   * struct which is only used on the FrontEnd and has no affect on serialization results,\n   * and the second is a struct description passed as an Object.\n   *\n   * The description object MUST have the same order on all of the platforms (ie in Move\n   * or in Rust).\n   *\n   * @example\n   * // Move / Rust struct\n   * // struct Coin {\n   * //   value: u64,\n   * //   owner: vector<u8>, // name // Vec<u8> in Rust\n   * //   is_locked: bool,\n   * // }\n   *\n   * bcs.registerStructType('Coin', {\n   *   value: bcs.U64,\n   *   owner: bcs.STRING,\n   *   is_locked: bcs.BOOL\n   * });\n   *\n   * // Created in Rust with diem/bcs\n   * // let rust_bcs_str = '80d1b105600000000e4269672057616c6c65742047757900';\n   * let rust_bcs_str = [ // using an Array here as BCS works with Uint8Array\n   *  128, 209, 177,   5,  96,  0,  0,\n   *    0,  14,  66, 105, 103, 32, 87,\n   *   97, 108, 108, 101, 116, 32, 71,\n   *  117, 121,   0\n   * ];\n   *\n   * // Let's encode the value as well\n   * let test_set = bcs.ser('Coin', {\n   *   owner: 'Big Wallet Guy',\n   *   value: '412412400000',\n   *   is_locked: false,\n   * });\n   *\n   * console.assert(Array.from(test_set.toBytes()) === rust_bcs_str, 'Whoopsie, result mismatch');\n   *\n   * @param name Name of the type to register.\n   * @param fields Fields of the struct. Must be in the correct order.\n   * @return Returns BCS for chaining.\n   */\n  registerStructType(typeName, fields) {\n    for (let key in fields) {\n      let internalName = this.tempKey();\n      let value = fields[key];\n      if (!Array.isArray(value) && typeof value !== \"string\") {\n        fields[key] = internalName;\n        this.registerStructType(internalName, value);\n      }\n    }\n    let struct = Object.freeze(fields);\n    let canonicalOrder = Object.keys(struct);\n    let { name: structName, params: generics } = this.parseTypeName(typeName);\n    return this.registerType(\n      typeName,\n      function encodeStruct(writer, data, typeParams, typeMap) {\n        if (!data || data.constructor !== Object) {\n          throw new Error(`Expected ${structName} to be an Object, got: ${data}`);\n        }\n        if (typeParams.length !== generics.length) {\n          throw new Error(\n            `Incorrect number of generic parameters passed; expected: ${generics.length}, got: ${typeParams.length}`\n          );\n        }\n        for (let key of canonicalOrder) {\n          if (!(key in data)) {\n            throw new Error(`Struct ${structName} requires field ${key}:${struct[key]}`);\n          }\n          const { name: fieldType, params: fieldParams } = this.parseTypeName(\n            struct[key]\n          );\n          if (!generics.includes(fieldType)) {\n            this.getTypeInterface(fieldType)._encodeRaw.call(\n              this,\n              writer,\n              data[key],\n              fieldParams,\n              typeMap\n            );\n          } else {\n            const paramIdx = generics.indexOf(fieldType);\n            let { name, params } = this.parseTypeName(typeParams[paramIdx]);\n            if (this.hasType(name)) {\n              this.getTypeInterface(name)._encodeRaw.call(\n                this,\n                writer,\n                data[key],\n                params,\n                typeMap\n              );\n              continue;\n            }\n            if (!(name in typeMap)) {\n              throw new Error(\n                `Unable to find a matching type definition for ${name} in ${structName}; make sure you passed a generic`\n              );\n            }\n            let { name: innerName, params: innerParams } = this.parseTypeName(typeMap[name]);\n            this.getTypeInterface(innerName)._encodeRaw.call(\n              this,\n              writer,\n              data[key],\n              innerParams,\n              typeMap\n            );\n          }\n        }\n        return writer;\n      },\n      function decodeStruct(reader, typeParams, typeMap) {\n        if (typeParams.length !== generics.length) {\n          throw new Error(\n            `Incorrect number of generic parameters passed; expected: ${generics.length}, got: ${typeParams.length}`\n          );\n        }\n        let result = {};\n        for (let key of canonicalOrder) {\n          const { name: fieldName, params: fieldParams } = this.parseTypeName(\n            struct[key]\n          );\n          if (!generics.includes(fieldName)) {\n            result[key] = this.getTypeInterface(fieldName)._decodeRaw.call(\n              this,\n              reader,\n              fieldParams,\n              typeMap\n            );\n          } else {\n            const paramIdx = generics.indexOf(fieldName);\n            let { name, params } = this.parseTypeName(typeParams[paramIdx]);\n            if (this.hasType(name)) {\n              result[key] = this.getTypeInterface(name)._decodeRaw.call(\n                this,\n                reader,\n                params,\n                typeMap\n              );\n              continue;\n            }\n            if (!(name in typeMap)) {\n              throw new Error(\n                `Unable to find a matching type definition for ${name} in ${structName}; make sure you passed a generic`\n              );\n            }\n            let { name: innerName, params: innerParams } = this.parseTypeName(typeMap[name]);\n            result[key] = this.getTypeInterface(innerName)._decodeRaw.call(\n              this,\n              reader,\n              innerParams,\n              typeMap\n            );\n          }\n        }\n        return result;\n      }\n    );\n  }\n  /**\n   * Safe method to register custom enum type where each invariant holds the value of another type.\n   * @example\n   * bcs.registerStructType('Coin', { value: 'u64' });\n   * bcs.registerEnumType('MyEnum', {\n   *  single: 'Coin',\n   *  multi: 'vector<Coin>',\n   *  empty: null\n   * });\n   *\n   * console.log(\n   *  bcs.de('MyEnum', 'AICWmAAAAAAA', 'base64'), // { single: { value: 10000000 } }\n   *  bcs.de('MyEnum', 'AQIBAAAAAAAAAAIAAAAAAAAA', 'base64')  // { multi: [ { value: 1 }, { value: 2 } ] }\n   * )\n   *\n   * // and serialization\n   * bcs.ser('MyEnum', { single: { value: 10000000 } }).toBytes();\n   * bcs.ser('MyEnum', { multi: [ { value: 1 }, { value: 2 } ] });\n   *\n   * @param name\n   * @param variants\n   */\n  registerEnumType(typeName, variants) {\n    for (let key in variants) {\n      let internalName = this.tempKey();\n      let value = variants[key];\n      if (value !== null && !Array.isArray(value) && typeof value !== \"string\") {\n        variants[key] = internalName;\n        this.registerStructType(internalName, value);\n      }\n    }\n    let struct = Object.freeze(variants);\n    let canonicalOrder = Object.keys(struct);\n    let { name, params: canonicalTypeParams } = this.parseTypeName(typeName);\n    return this.registerType(\n      typeName,\n      function encodeEnum(writer, data, typeParams, typeMap) {\n        if (!data) {\n          throw new Error(`Unable to write enum \"${name}\", missing data.\nReceived: \"${data}\"`);\n        }\n        if (typeof data !== \"object\") {\n          throw new Error(\n            `Incorrect data passed into enum \"${name}\", expected object with properties: \"${canonicalOrder.join(\n              \" | \"\n            )}\".\nReceived: \"${JSON.stringify(data)}\"`\n          );\n        }\n        let key = Object.keys(data)[0];\n        if (key === void 0) {\n          throw new Error(`Empty object passed as invariant of the enum \"${name}\"`);\n        }\n        let orderByte = canonicalOrder.indexOf(key);\n        if (orderByte === -1) {\n          throw new Error(\n            `Unknown invariant of the enum \"${name}\", allowed values: \"${canonicalOrder.join(\n              \" | \"\n            )}\"; received \"${key}\"`\n          );\n        }\n        let invariant = canonicalOrder[orderByte];\n        let invariantType = struct[invariant];\n        writer.write8(orderByte);\n        if (invariantType === null) {\n          return writer;\n        }\n        let paramIndex = canonicalTypeParams.indexOf(invariantType);\n        let typeOrParam = paramIndex === -1 ? invariantType : typeParams[paramIndex];\n        {\n          let { name: name2, params } = this.parseTypeName(typeOrParam);\n          return this.getTypeInterface(name2)._encodeRaw.call(\n            this,\n            writer,\n            data[key],\n            params,\n            typeMap\n          );\n        }\n      },\n      function decodeEnum(reader, typeParams, typeMap) {\n        let orderByte = reader.readULEB();\n        let invariant = canonicalOrder[orderByte];\n        let invariantType = struct[invariant];\n        if (orderByte === -1) {\n          throw new Error(\n            `Decoding type mismatch, expected enum \"${name}\" invariant index, received \"${orderByte}\"`\n          );\n        }\n        if (invariantType === null) {\n          return { [invariant]: true };\n        }\n        let paramIndex = canonicalTypeParams.indexOf(invariantType);\n        let typeOrParam = paramIndex === -1 ? invariantType : typeParams[paramIndex];\n        {\n          let { name: name2, params } = this.parseTypeName(typeOrParam);\n          return {\n            [invariant]: this.getTypeInterface(name2)._decodeRaw.call(this, reader, params, typeMap)\n          };\n        }\n      }\n    );\n  }\n  /**\n   * Get a set of encoders/decoders for specific type.\n   * Mainly used to define custom type de/serialization logic.\n   *\n   * @param type\n   * @returns {TypeInterface}\n   */\n  getTypeInterface(type) {\n    let typeInterface = this.types.get(type);\n    if (typeof typeInterface === \"string\") {\n      let chain = [];\n      while (typeof typeInterface === \"string\") {\n        if (chain.includes(typeInterface)) {\n          throw new Error(`Recursive definition found: ${chain.join(\" -> \")} -> ${typeInterface}`);\n        }\n        chain.push(typeInterface);\n        typeInterface = this.types.get(typeInterface);\n      }\n    }\n    if (typeInterface === void 0) {\n      throw new Error(`Type ${type} is not registered`);\n    }\n    return typeInterface;\n  }\n  /**\n   * Parse a type name and get the type's generics.\n   * @example\n   * let { typeName, typeParams } = parseTypeName('Option<Coin<SUI>>');\n   * // typeName: Option\n   * // typeParams: [ 'Coin<SUI>' ]\n   *\n   * @param name Name of the type to process\n   * @returns Object with typeName and typeParams listed as Array\n   */\n  parseTypeName(name) {\n    if (Array.isArray(name)) {\n      let [typeName2, ...params2] = name;\n      return { name: typeName2, params: params2 };\n    }\n    if (typeof name !== \"string\") {\n      throw new Error(`Illegal type passed as a name of the type: ${name}`);\n    }\n    let [left, right] = this.schema.genericSeparators || [\"<\", \">\"];\n    let l_bound = name.indexOf(left);\n    let r_bound = Array.from(name).reverse().indexOf(right);\n    if (l_bound === -1 && r_bound === -1) {\n      return { name, params: [] };\n    }\n    if (l_bound === -1 || r_bound === -1) {\n      throw new Error(`Unclosed generic in name '${name}'`);\n    }\n    let typeName = name.slice(0, l_bound);\n    let params = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.splitGenericParameters)(\n      name.slice(l_bound + 1, name.length - r_bound - 1),\n      this.schema.genericSeparators\n    );\n    return { name: typeName, params };\n  }\n};\nlet BCS = _BCS;\n// Predefined types constants\nBCS.U8 = \"u8\";\nBCS.U16 = \"u16\";\nBCS.U32 = \"u32\";\nBCS.U64 = \"u64\";\nBCS.U128 = \"u128\";\nBCS.U256 = \"u256\";\nBCS.BOOL = \"bool\";\nBCS.VECTOR = \"vector\";\nBCS.ADDRESS = \"address\";\nBCS.STRING = \"string\";\nBCS.HEX = \"hex-string\";\nBCS.BASE58 = \"base58-string\";\nBCS.BASE64 = \"base64-string\";\nfunction registerPrimitives(bcs) {\n  bcs.registerType(\n    BCS.U8,\n    function(writer, data) {\n      return writer.write8(data);\n    },\n    function(reader) {\n      return reader.read8();\n    },\n    (u8) => u8 < 256\n  );\n  bcs.registerType(\n    BCS.U16,\n    function(writer, data) {\n      return writer.write16(data);\n    },\n    function(reader) {\n      return reader.read16();\n    },\n    (u16) => u16 < 65536\n  );\n  bcs.registerType(\n    BCS.U32,\n    function(writer, data) {\n      return writer.write32(data);\n    },\n    function(reader) {\n      return reader.read32();\n    },\n    (u32) => u32 <= 4294967296n\n  );\n  bcs.registerType(\n    BCS.U64,\n    function(writer, data) {\n      return writer.write64(data);\n    },\n    function(reader) {\n      return reader.read64();\n    }\n  );\n  bcs.registerType(\n    BCS.U128,\n    function(writer, data) {\n      return writer.write128(data);\n    },\n    function(reader) {\n      return reader.read128();\n    }\n  );\n  bcs.registerType(\n    BCS.U256,\n    function(writer, data) {\n      return writer.write256(data);\n    },\n    function(reader) {\n      return reader.read256();\n    }\n  );\n  bcs.registerType(\n    BCS.BOOL,\n    function(writer, data) {\n      return writer.write8(data);\n    },\n    function(reader) {\n      return reader.read8().toString(10) === \"1\";\n    }\n  );\n  bcs.registerType(\n    BCS.STRING,\n    function(writer, data) {\n      return writer.writeVec(Array.from(data), (writer2, el) => writer2.write8(el.charCodeAt(0)));\n    },\n    function(reader) {\n      return reader.readVec((reader2) => reader2.read8()).map((el) => String.fromCharCode(Number(el))).join(\"\");\n    },\n    (_str) => true\n  );\n  bcs.registerType(\n    BCS.HEX,\n    function(writer, data) {\n      return writer.writeVec(Array.from((0,_hex_js__WEBPACK_IMPORTED_MODULE_5__.fromHEX)(data)), (writer2, el) => writer2.write8(el));\n    },\n    function(reader) {\n      let bytes = reader.readVec((reader2) => reader2.read8());\n      return (0,_hex_js__WEBPACK_IMPORTED_MODULE_5__.toHEX)(new Uint8Array(bytes));\n    }\n  );\n  bcs.registerType(\n    BCS.BASE58,\n    function(writer, data) {\n      return writer.writeVec(Array.from((0,_b58_js__WEBPACK_IMPORTED_MODULE_6__.fromB58)(data)), (writer2, el) => writer2.write8(el));\n    },\n    function(reader) {\n      let bytes = reader.readVec((reader2) => reader2.read8());\n      return (0,_b58_js__WEBPACK_IMPORTED_MODULE_6__.toB58)(new Uint8Array(bytes));\n    }\n  );\n  bcs.registerType(\n    BCS.BASE64,\n    function(writer, data) {\n      return writer.writeVec(Array.from((0,_b64_js__WEBPACK_IMPORTED_MODULE_4__.fromB64)(data)), (writer2, el) => writer2.write8(el));\n    },\n    function(reader) {\n      let bytes = reader.readVec((reader2) => reader2.read8());\n      return (0,_b64_js__WEBPACK_IMPORTED_MODULE_4__.toB64)(new Uint8Array(bytes));\n    }\n  );\n}\nfunction getRustConfig() {\n  return {\n    genericSeparators: [\"<\", \">\"],\n    vectorType: \"Vec\",\n    addressLength: SUI_ADDRESS_LENGTH,\n    addressEncoding: \"hex\"\n  };\n}\nfunction getSuiMoveConfig() {\n  return {\n    genericSeparators: [\"<\", \">\"],\n    vectorType: \"vector\",\n    addressLength: SUI_ADDRESS_LENGTH,\n    addressEncoding: \"hex\"\n  };\n}\n\n//# sourceMappingURL=legacy-registry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/legacy-registry.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/reader.js":
/*!*********************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/reader.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BcsReader: () => (/* binding */ BcsReader)\n/* harmony export */ });\n/* harmony import */ var _uleb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uleb.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/uleb.js\");\n\nclass BcsReader {\n  /**\n   * @param {Uint8Array} data Data to use as a buffer.\n   */\n  constructor(data) {\n    this.bytePosition = 0;\n    this.dataView = new DataView(data.buffer);\n  }\n  /**\n   * Shift current cursor position by `bytes`.\n   *\n   * @param {Number} bytes Number of bytes to\n   * @returns {this} Self for possible chaining.\n   */\n  shift(bytes) {\n    this.bytePosition += bytes;\n    return this;\n  }\n  /**\n   * Read U8 value from the buffer and shift cursor by 1.\n   * @returns\n   */\n  read8() {\n    let value = this.dataView.getUint8(this.bytePosition);\n    this.shift(1);\n    return value;\n  }\n  /**\n   * Read U16 value from the buffer and shift cursor by 2.\n   * @returns\n   */\n  read16() {\n    let value = this.dataView.getUint16(this.bytePosition, true);\n    this.shift(2);\n    return value;\n  }\n  /**\n   * Read U32 value from the buffer and shift cursor by 4.\n   * @returns\n   */\n  read32() {\n    let value = this.dataView.getUint32(this.bytePosition, true);\n    this.shift(4);\n    return value;\n  }\n  /**\n   * Read U64 value from the buffer and shift cursor by 8.\n   * @returns\n   */\n  read64() {\n    let value1 = this.read32();\n    let value2 = this.read32();\n    let result = value2.toString(16) + value1.toString(16).padStart(8, \"0\");\n    return BigInt(\"0x\" + result).toString(10);\n  }\n  /**\n   * Read U128 value from the buffer and shift cursor by 16.\n   */\n  read128() {\n    let value1 = BigInt(this.read64());\n    let value2 = BigInt(this.read64());\n    let result = value2.toString(16) + value1.toString(16).padStart(16, \"0\");\n    return BigInt(\"0x\" + result).toString(10);\n  }\n  /**\n   * Read U128 value from the buffer and shift cursor by 32.\n   * @returns\n   */\n  read256() {\n    let value1 = BigInt(this.read128());\n    let value2 = BigInt(this.read128());\n    let result = value2.toString(16) + value1.toString(16).padStart(32, \"0\");\n    return BigInt(\"0x\" + result).toString(10);\n  }\n  /**\n   * Read `num` number of bytes from the buffer and shift cursor by `num`.\n   * @param num Number of bytes to read.\n   */\n  readBytes(num) {\n    let start = this.bytePosition + this.dataView.byteOffset;\n    let value = new Uint8Array(this.dataView.buffer, start, num);\n    this.shift(num);\n    return value;\n  }\n  /**\n   * Read ULEB value - an integer of varying size. Used for enum indexes and\n   * vector lengths.\n   * @returns {Number} The ULEB value.\n   */\n  readULEB() {\n    let start = this.bytePosition + this.dataView.byteOffset;\n    let buffer = new Uint8Array(this.dataView.buffer, start);\n    let { value, length } = (0,_uleb_js__WEBPACK_IMPORTED_MODULE_0__.ulebDecode)(buffer);\n    this.shift(length);\n    return value;\n  }\n  /**\n   * Read a BCS vector: read a length and then apply function `cb` X times\n   * where X is the length of the vector, defined as ULEB in BCS bytes.\n   * @param cb Callback to process elements of vector.\n   * @returns {Array<Any>} Array of the resulting values, returned by callback.\n   */\n  readVec(cb) {\n    let length = this.readULEB();\n    let result = [];\n    for (let i = 0; i < length; i++) {\n      result.push(cb(this, i, length));\n    }\n    return result;\n  }\n}\n\n//# sourceMappingURL=reader.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL3JlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUN2QztBQUNBO0FBQ0EsYUFBYSxZQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZSxNQUFNO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGdCQUFnQixFQUFFLG9EQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxZQUFZO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL3JlYWRlci5qcz8xMDk1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVsZWJEZWNvZGUgfSBmcm9tIFwiLi91bGViLmpzXCI7XG5jbGFzcyBCY3NSZWFkZXIge1xuICAvKipcbiAgICogQHBhcmFtIHtVaW50OEFycmF5fSBkYXRhIERhdGEgdG8gdXNlIGFzIGEgYnVmZmVyLlxuICAgKi9cbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIHRoaXMuYnl0ZVBvc2l0aW9uID0gMDtcbiAgICB0aGlzLmRhdGFWaWV3ID0gbmV3IERhdGFWaWV3KGRhdGEuYnVmZmVyKTtcbiAgfVxuICAvKipcbiAgICogU2hpZnQgY3VycmVudCBjdXJzb3IgcG9zaXRpb24gYnkgYGJ5dGVzYC5cbiAgICpcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGJ5dGVzIE51bWJlciBvZiBieXRlcyB0b1xuICAgKiBAcmV0dXJucyB7dGhpc30gU2VsZiBmb3IgcG9zc2libGUgY2hhaW5pbmcuXG4gICAqL1xuICBzaGlmdChieXRlcykge1xuICAgIHRoaXMuYnl0ZVBvc2l0aW9uICs9IGJ5dGVzO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG4gIC8qKlxuICAgKiBSZWFkIFU4IHZhbHVlIGZyb20gdGhlIGJ1ZmZlciBhbmQgc2hpZnQgY3Vyc29yIGJ5IDEuXG4gICAqIEByZXR1cm5zXG4gICAqL1xuICByZWFkOCgpIHtcbiAgICBsZXQgdmFsdWUgPSB0aGlzLmRhdGFWaWV3LmdldFVpbnQ4KHRoaXMuYnl0ZVBvc2l0aW9uKTtcbiAgICB0aGlzLnNoaWZ0KDEpO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICAvKipcbiAgICogUmVhZCBVMTYgdmFsdWUgZnJvbSB0aGUgYnVmZmVyIGFuZCBzaGlmdCBjdXJzb3IgYnkgMi5cbiAgICogQHJldHVybnNcbiAgICovXG4gIHJlYWQxNigpIHtcbiAgICBsZXQgdmFsdWUgPSB0aGlzLmRhdGFWaWV3LmdldFVpbnQxNih0aGlzLmJ5dGVQb3NpdGlvbiwgdHJ1ZSk7XG4gICAgdGhpcy5zaGlmdCgyKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgLyoqXG4gICAqIFJlYWQgVTMyIHZhbHVlIGZyb20gdGhlIGJ1ZmZlciBhbmQgc2hpZnQgY3Vyc29yIGJ5IDQuXG4gICAqIEByZXR1cm5zXG4gICAqL1xuICByZWFkMzIoKSB7XG4gICAgbGV0IHZhbHVlID0gdGhpcy5kYXRhVmlldy5nZXRVaW50MzIodGhpcy5ieXRlUG9zaXRpb24sIHRydWUpO1xuICAgIHRoaXMuc2hpZnQoNCk7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIC8qKlxuICAgKiBSZWFkIFU2NCB2YWx1ZSBmcm9tIHRoZSBidWZmZXIgYW5kIHNoaWZ0IGN1cnNvciBieSA4LlxuICAgKiBAcmV0dXJuc1xuICAgKi9cbiAgcmVhZDY0KCkge1xuICAgIGxldCB2YWx1ZTEgPSB0aGlzLnJlYWQzMigpO1xuICAgIGxldCB2YWx1ZTIgPSB0aGlzLnJlYWQzMigpO1xuICAgIGxldCByZXN1bHQgPSB2YWx1ZTIudG9TdHJpbmcoMTYpICsgdmFsdWUxLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg4LCBcIjBcIik7XG4gICAgcmV0dXJuIEJpZ0ludChcIjB4XCIgKyByZXN1bHQpLnRvU3RyaW5nKDEwKTtcbiAgfVxuICAvKipcbiAgICogUmVhZCBVMTI4IHZhbHVlIGZyb20gdGhlIGJ1ZmZlciBhbmQgc2hpZnQgY3Vyc29yIGJ5IDE2LlxuICAgKi9cbiAgcmVhZDEyOCgpIHtcbiAgICBsZXQgdmFsdWUxID0gQmlnSW50KHRoaXMucmVhZDY0KCkpO1xuICAgIGxldCB2YWx1ZTIgPSBCaWdJbnQodGhpcy5yZWFkNjQoKSk7XG4gICAgbGV0IHJlc3VsdCA9IHZhbHVlMi50b1N0cmluZygxNikgKyB2YWx1ZTEudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDE2LCBcIjBcIik7XG4gICAgcmV0dXJuIEJpZ0ludChcIjB4XCIgKyByZXN1bHQpLnRvU3RyaW5nKDEwKTtcbiAgfVxuICAvKipcbiAgICogUmVhZCBVMTI4IHZhbHVlIGZyb20gdGhlIGJ1ZmZlciBhbmQgc2hpZnQgY3Vyc29yIGJ5IDMyLlxuICAgKiBAcmV0dXJuc1xuICAgKi9cbiAgcmVhZDI1NigpIHtcbiAgICBsZXQgdmFsdWUxID0gQmlnSW50KHRoaXMucmVhZDEyOCgpKTtcbiAgICBsZXQgdmFsdWUyID0gQmlnSW50KHRoaXMucmVhZDEyOCgpKTtcbiAgICBsZXQgcmVzdWx0ID0gdmFsdWUyLnRvU3RyaW5nKDE2KSArIHZhbHVlMS50b1N0cmluZygxNikucGFkU3RhcnQoMzIsIFwiMFwiKTtcbiAgICByZXR1cm4gQmlnSW50KFwiMHhcIiArIHJlc3VsdCkudG9TdHJpbmcoMTApO1xuICB9XG4gIC8qKlxuICAgKiBSZWFkIGBudW1gIG51bWJlciBvZiBieXRlcyBmcm9tIHRoZSBidWZmZXIgYW5kIHNoaWZ0IGN1cnNvciBieSBgbnVtYC5cbiAgICogQHBhcmFtIG51bSBOdW1iZXIgb2YgYnl0ZXMgdG8gcmVhZC5cbiAgICovXG4gIHJlYWRCeXRlcyhudW0pIHtcbiAgICBsZXQgc3RhcnQgPSB0aGlzLmJ5dGVQb3NpdGlvbiArIHRoaXMuZGF0YVZpZXcuYnl0ZU9mZnNldDtcbiAgICBsZXQgdmFsdWUgPSBuZXcgVWludDhBcnJheSh0aGlzLmRhdGFWaWV3LmJ1ZmZlciwgc3RhcnQsIG51bSk7XG4gICAgdGhpcy5zaGlmdChudW0pO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICAvKipcbiAgICogUmVhZCBVTEVCIHZhbHVlIC0gYW4gaW50ZWdlciBvZiB2YXJ5aW5nIHNpemUuIFVzZWQgZm9yIGVudW0gaW5kZXhlcyBhbmRcbiAgICogdmVjdG9yIGxlbmd0aHMuXG4gICAqIEByZXR1cm5zIHtOdW1iZXJ9IFRoZSBVTEVCIHZhbHVlLlxuICAgKi9cbiAgcmVhZFVMRUIoKSB7XG4gICAgbGV0IHN0YXJ0ID0gdGhpcy5ieXRlUG9zaXRpb24gKyB0aGlzLmRhdGFWaWV3LmJ5dGVPZmZzZXQ7XG4gICAgbGV0IGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KHRoaXMuZGF0YVZpZXcuYnVmZmVyLCBzdGFydCk7XG4gICAgbGV0IHsgdmFsdWUsIGxlbmd0aCB9ID0gdWxlYkRlY29kZShidWZmZXIpO1xuICAgIHRoaXMuc2hpZnQobGVuZ3RoKTtcbiAgICByZXR1cm4gdmFsdWU7XG4gIH1cbiAgLyoqXG4gICAqIFJlYWQgYSBCQ1MgdmVjdG9yOiByZWFkIGEgbGVuZ3RoIGFuZCB0aGVuIGFwcGx5IGZ1bmN0aW9uIGBjYmAgWCB0aW1lc1xuICAgKiB3aGVyZSBYIGlzIHRoZSBsZW5ndGggb2YgdGhlIHZlY3RvciwgZGVmaW5lZCBhcyBVTEVCIGluIEJDUyBieXRlcy5cbiAgICogQHBhcmFtIGNiIENhbGxiYWNrIHRvIHByb2Nlc3MgZWxlbWVudHMgb2YgdmVjdG9yLlxuICAgKiBAcmV0dXJucyB7QXJyYXk8QW55Pn0gQXJyYXkgb2YgdGhlIHJlc3VsdGluZyB2YWx1ZXMsIHJldHVybmVkIGJ5IGNhbGxiYWNrLlxuICAgKi9cbiAgcmVhZFZlYyhjYikge1xuICAgIGxldCBsZW5ndGggPSB0aGlzLnJlYWRVTEVCKCk7XG4gICAgbGV0IHJlc3VsdCA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIHJlc3VsdC5wdXNoKGNiKHRoaXMsIGksIGxlbmd0aCkpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59XG5leHBvcnQge1xuICBCY3NSZWFkZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFkZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/reader.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/uleb.js":
/*!*******************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/uleb.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ulebDecode: () => (/* binding */ ulebDecode),\n/* harmony export */   ulebEncode: () => (/* binding */ ulebEncode)\n/* harmony export */ });\nfunction ulebEncode(num) {\n  let arr = [];\n  let len = 0;\n  if (num === 0) {\n    return [0];\n  }\n  while (num > 0) {\n    arr[len] = num & 127;\n    if (num >>= 7) {\n      arr[len] |= 128;\n    }\n    len += 1;\n  }\n  return arr;\n}\nfunction ulebDecode(arr) {\n  let total = 0;\n  let shift = 0;\n  let len = 0;\n  while (true) {\n    let byte = arr[len];\n    len += 1;\n    total |= (byte & 127) << shift;\n    if ((byte & 128) === 0) {\n      break;\n    }\n    shift += 7;\n  }\n  return {\n    value: total,\n    length: len\n  };\n}\n\n//# sourceMappingURL=uleb.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL3VsZWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL2Jjcy9kaXN0L2VzbS91bGViLmpzP2Y3ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gdWxlYkVuY29kZShudW0pIHtcbiAgbGV0IGFyciA9IFtdO1xuICBsZXQgbGVuID0gMDtcbiAgaWYgKG51bSA9PT0gMCkge1xuICAgIHJldHVybiBbMF07XG4gIH1cbiAgd2hpbGUgKG51bSA+IDApIHtcbiAgICBhcnJbbGVuXSA9IG51bSAmIDEyNztcbiAgICBpZiAobnVtID4+PSA3KSB7XG4gICAgICBhcnJbbGVuXSB8PSAxMjg7XG4gICAgfVxuICAgIGxlbiArPSAxO1xuICB9XG4gIHJldHVybiBhcnI7XG59XG5mdW5jdGlvbiB1bGViRGVjb2RlKGFycikge1xuICBsZXQgdG90YWwgPSAwO1xuICBsZXQgc2hpZnQgPSAwO1xuICBsZXQgbGVuID0gMDtcbiAgd2hpbGUgKHRydWUpIHtcbiAgICBsZXQgYnl0ZSA9IGFycltsZW5dO1xuICAgIGxlbiArPSAxO1xuICAgIHRvdGFsIHw9IChieXRlICYgMTI3KSA8PCBzaGlmdDtcbiAgICBpZiAoKGJ5dGUgJiAxMjgpID09PSAwKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgc2hpZnQgKz0gNztcbiAgfVxuICByZXR1cm4ge1xuICAgIHZhbHVlOiB0b3RhbCxcbiAgICBsZW5ndGg6IGxlblxuICB9O1xufVxuZXhwb3J0IHtcbiAgdWxlYkRlY29kZSxcbiAgdWxlYkVuY29kZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVsZWIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/uleb.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/utils.js":
/*!********************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeStr: () => (/* binding */ decodeStr),\n/* harmony export */   encodeStr: () => (/* binding */ encodeStr),\n/* harmony export */   splitGenericParameters: () => (/* binding */ splitGenericParameters)\n/* harmony export */ });\n/* harmony import */ var _b58_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./b58.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var _b64_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./b64.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _hex_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hex.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n\n\n\nfunction encodeStr(data, encoding) {\n  switch (encoding) {\n    case \"base58\":\n      return (0,_b58_js__WEBPACK_IMPORTED_MODULE_0__.toB58)(data);\n    case \"base64\":\n      return (0,_b64_js__WEBPACK_IMPORTED_MODULE_1__.toB64)(data);\n    case \"hex\":\n      return (0,_hex_js__WEBPACK_IMPORTED_MODULE_2__.toHEX)(data);\n    default:\n      throw new Error(\"Unsupported encoding, supported values are: base64, hex\");\n  }\n}\nfunction decodeStr(data, encoding) {\n  switch (encoding) {\n    case \"base58\":\n      return (0,_b58_js__WEBPACK_IMPORTED_MODULE_0__.fromB58)(data);\n    case \"base64\":\n      return (0,_b64_js__WEBPACK_IMPORTED_MODULE_1__.fromB64)(data);\n    case \"hex\":\n      return (0,_hex_js__WEBPACK_IMPORTED_MODULE_2__.fromHEX)(data);\n    default:\n      throw new Error(\"Unsupported encoding, supported values are: base64, hex\");\n  }\n}\nfunction splitGenericParameters(str, genericSeparators = [\"<\", \">\"]) {\n  const [left, right] = genericSeparators;\n  const tok = [];\n  let word = \"\";\n  let nestedAngleBrackets = 0;\n  for (let i = 0; i < str.length; i++) {\n    const char = str[i];\n    if (char === left) {\n      nestedAngleBrackets++;\n    }\n    if (char === right) {\n      nestedAngleBrackets--;\n    }\n    if (nestedAngleBrackets === 0 && char === \",\") {\n      tok.push(word.trim());\n      word = \"\";\n      continue;\n    }\n    word += char;\n  }\n  tok.push(word.trim());\n  return tok;\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQztBQUNBO0FBQ0E7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsYUFBYSw4Q0FBSztBQUNsQjtBQUNBLGFBQWEsOENBQUs7QUFDbEI7QUFDQSxhQUFhLDhDQUFLO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxnREFBTztBQUNwQjtBQUNBLGFBQWEsZ0RBQU87QUFDcEI7QUFDQSxhQUFhLGdEQUFPO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vYmNzL2Rpc3QvZXNtL3V0aWxzLmpzP2FmOTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUI1OCwgdG9CNTggfSBmcm9tIFwiLi9iNTguanNcIjtcbmltcG9ydCB7IGZyb21CNjQsIHRvQjY0IH0gZnJvbSBcIi4vYjY0LmpzXCI7XG5pbXBvcnQgeyBmcm9tSEVYLCB0b0hFWCB9IGZyb20gXCIuL2hleC5qc1wiO1xuZnVuY3Rpb24gZW5jb2RlU3RyKGRhdGEsIGVuY29kaW5nKSB7XG4gIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICBjYXNlIFwiYmFzZTU4XCI6XG4gICAgICByZXR1cm4gdG9CNTgoZGF0YSk7XG4gICAgY2FzZSBcImJhc2U2NFwiOlxuICAgICAgcmV0dXJuIHRvQjY0KGRhdGEpO1xuICAgIGNhc2UgXCJoZXhcIjpcbiAgICAgIHJldHVybiB0b0hFWChkYXRhKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgZW5jb2RpbmcsIHN1cHBvcnRlZCB2YWx1ZXMgYXJlOiBiYXNlNjQsIGhleFwiKTtcbiAgfVxufVxuZnVuY3Rpb24gZGVjb2RlU3RyKGRhdGEsIGVuY29kaW5nKSB7XG4gIHN3aXRjaCAoZW5jb2RpbmcpIHtcbiAgICBjYXNlIFwiYmFzZTU4XCI6XG4gICAgICByZXR1cm4gZnJvbUI1OChkYXRhKTtcbiAgICBjYXNlIFwiYmFzZTY0XCI6XG4gICAgICByZXR1cm4gZnJvbUI2NChkYXRhKTtcbiAgICBjYXNlIFwiaGV4XCI6XG4gICAgICByZXR1cm4gZnJvbUhFWChkYXRhKTtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgZW5jb2RpbmcsIHN1cHBvcnRlZCB2YWx1ZXMgYXJlOiBiYXNlNjQsIGhleFwiKTtcbiAgfVxufVxuZnVuY3Rpb24gc3BsaXRHZW5lcmljUGFyYW1ldGVycyhzdHIsIGdlbmVyaWNTZXBhcmF0b3JzID0gW1wiPFwiLCBcIj5cIl0pIHtcbiAgY29uc3QgW2xlZnQsIHJpZ2h0XSA9IGdlbmVyaWNTZXBhcmF0b3JzO1xuICBjb25zdCB0b2sgPSBbXTtcbiAgbGV0IHdvcmQgPSBcIlwiO1xuICBsZXQgbmVzdGVkQW5nbGVCcmFja2V0cyA9IDA7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY2hhciA9IHN0cltpXTtcbiAgICBpZiAoY2hhciA9PT0gbGVmdCkge1xuICAgICAgbmVzdGVkQW5nbGVCcmFja2V0cysrO1xuICAgIH1cbiAgICBpZiAoY2hhciA9PT0gcmlnaHQpIHtcbiAgICAgIG5lc3RlZEFuZ2xlQnJhY2tldHMtLTtcbiAgICB9XG4gICAgaWYgKG5lc3RlZEFuZ2xlQnJhY2tldHMgPT09IDAgJiYgY2hhciA9PT0gXCIsXCIpIHtcbiAgICAgIHRvay5wdXNoKHdvcmQudHJpbSgpKTtcbiAgICAgIHdvcmQgPSBcIlwiO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIHdvcmQgKz0gY2hhcjtcbiAgfVxuICB0b2sucHVzaCh3b3JkLnRyaW0oKSk7XG4gIHJldHVybiB0b2s7XG59XG5leHBvcnQge1xuICBkZWNvZGVTdHIsXG4gIGVuY29kZVN0cixcbiAgc3BsaXRHZW5lcmljUGFyYW1ldGVyc1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/bcs/dist/esm/writer.js":
/*!*********************************************************!*\
  !*** ../../node_modules/@mysten/bcs/dist/esm/writer.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BcsWriter: () => (/* binding */ BcsWriter)\n/* harmony export */ });\n/* harmony import */ var _uleb_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uleb.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/uleb.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/utils.js\");\n\n\nclass BcsWriter {\n  constructor({ size = 1024, maxSize, allocateSize = 1024 } = {}) {\n    this.bytePosition = 0;\n    this.size = size;\n    this.maxSize = maxSize || size;\n    this.allocateSize = allocateSize;\n    this.dataView = new DataView(new ArrayBuffer(size));\n  }\n  ensureSizeOrGrow(bytes) {\n    const requiredSize = this.bytePosition + bytes;\n    if (requiredSize > this.size) {\n      const nextSize = Math.min(this.maxSize, this.size + this.allocateSize);\n      if (requiredSize > nextSize) {\n        throw new Error(\n          `Attempting to serialize to BCS, but buffer does not have enough size. Allocated size: ${this.size}, Max size: ${this.maxSize}, Required size: ${requiredSize}`\n        );\n      }\n      this.size = nextSize;\n      const nextBuffer = new ArrayBuffer(this.size);\n      new Uint8Array(nextBuffer).set(new Uint8Array(this.dataView.buffer));\n      this.dataView = new DataView(nextBuffer);\n    }\n  }\n  /**\n   * Shift current cursor position by `bytes`.\n   *\n   * @param {Number} bytes Number of bytes to\n   * @returns {this} Self for possible chaining.\n   */\n  shift(bytes) {\n    this.bytePosition += bytes;\n    return this;\n  }\n  /**\n   * Write a U8 value into a buffer and shift cursor position by 1.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write8(value) {\n    this.ensureSizeOrGrow(1);\n    this.dataView.setUint8(this.bytePosition, Number(value));\n    return this.shift(1);\n  }\n  /**\n   * Write a U16 value into a buffer and shift cursor position by 2.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write16(value) {\n    this.ensureSizeOrGrow(2);\n    this.dataView.setUint16(this.bytePosition, Number(value), true);\n    return this.shift(2);\n  }\n  /**\n   * Write a U32 value into a buffer and shift cursor position by 4.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write32(value) {\n    this.ensureSizeOrGrow(4);\n    this.dataView.setUint32(this.bytePosition, Number(value), true);\n    return this.shift(4);\n  }\n  /**\n   * Write a U64 value into a buffer and shift cursor position by 8.\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write64(value) {\n    toLittleEndian(BigInt(value), 8).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a U128 value into a buffer and shift cursor position by 16.\n   *\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write128(value) {\n    toLittleEndian(BigInt(value), 16).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a U256 value into a buffer and shift cursor position by 16.\n   *\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write256(value) {\n    toLittleEndian(BigInt(value), 32).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a ULEB value into a buffer and shift cursor position by number of bytes\n   * written.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  writeULEB(value) {\n    (0,_uleb_js__WEBPACK_IMPORTED_MODULE_0__.ulebEncode)(value).forEach((el) => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a vector into a buffer by first writing the vector length and then calling\n   * a callback on each passed value.\n   *\n   * @param {Array<Any>} vector Array of elements to write.\n   * @param {WriteVecCb} cb Callback to call on each element of the vector.\n   * @returns {this}\n   */\n  writeVec(vector, cb) {\n    this.writeULEB(vector.length);\n    Array.from(vector).forEach((el, i) => cb(this, el, i, vector.length));\n    return this;\n  }\n  /**\n   * Adds support for iterations over the object.\n   * @returns {Uint8Array}\n   */\n  *[Symbol.iterator]() {\n    for (let i = 0; i < this.bytePosition; i++) {\n      yield this.dataView.getUint8(i);\n    }\n    return this.toBytes();\n  }\n  /**\n   * Get underlying buffer taking only value bytes (in case initial buffer size was bigger).\n   * @returns {Uint8Array} Resulting bcs.\n   */\n  toBytes() {\n    return new Uint8Array(this.dataView.buffer.slice(0, this.bytePosition));\n  }\n  /**\n   * Represent data as 'hex' or 'base64'\n   * @param encoding Encoding to use: 'base64' or 'hex'\n   */\n  toString(encoding) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.encodeStr)(this.toBytes(), encoding);\n  }\n}\nfunction toLittleEndian(bigint, size) {\n  let result = new Uint8Array(size);\n  let i = 0;\n  while (bigint > 0) {\n    result[i] = Number(bigint % BigInt(256));\n    bigint = bigint / BigInt(256);\n    i += 1;\n  }\n  return result;\n}\n\n//# sourceMappingURL=writer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/bcs/dist/esm/writer.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js":
/*!***************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeTagSerializer: () => (/* reexport safe */ _type_tag_serializer_js__WEBPACK_IMPORTED_MODULE_5__.TypeTagSerializer),\n/* harmony export */   bcs: () => (/* binding */ suiBcs),\n/* harmony export */   bcsRegistry: () => (/* binding */ bcsRegistry),\n/* harmony export */   isPureArg: () => (/* binding */ isPureArg)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/legacy-registry.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _type_tag_serializer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./type-tag-serializer.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/type-tag-serializer.js\");\n\n\n\n\nfunction isPureArg(arg) {\n  return arg.Pure !== void 0;\n}\nconst bcsRegistry = new _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.BCS({\n  ...(0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.getSuiMoveConfig)(),\n  types: {\n    enums: {\n      \"Option<T>\": {\n        None: null,\n        Some: \"T\"\n      }\n    }\n  }\n});\nfunction unsafe_u64(options) {\n  return _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u64({\n    name: \"unsafe_u64\",\n    ...options\n  }).transform({\n    input: (val) => val,\n    output: (val) => Number(val)\n  });\n}\nfunction optionEnum(type) {\n  return _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"Option\", {\n    None: null,\n    Some: type\n  });\n}\nfunction enumKind(type) {\n  return type.transform({\n    input: (val) => ({\n      [val.kind]: val\n    }),\n    output: (val) => {\n      const key = Object.keys(val)[0];\n      return { kind: key, ...val[key] };\n    }\n  });\n}\nconst Address = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.bytes(_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__.SUI_ADDRESS_LENGTH).transform({\n  input: (val) => typeof val === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_3__.fromHEX)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__.normalizeSuiAddress)(val)) : val,\n  output: (val) => (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__.normalizeSuiAddress)((0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_3__.toHEX)(val))\n});\nconst ObjectDigest = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()).transform({\n  name: \"ObjectDigest\",\n  input: (value) => (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.fromB58)(value),\n  output: (value) => (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.toB58)(new Uint8Array(value))\n});\nconst SuiObjectRef = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"SuiObjectRef\", {\n  objectId: Address,\n  version: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u64(),\n  digest: ObjectDigest\n});\nconst SharedObjectRef = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"SharedObjectRef\", {\n  objectId: Address,\n  initialSharedVersion: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u64(),\n  mutable: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.bool()\n});\nconst ObjectArg = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"ObjectArg\", {\n  ImmOrOwned: SuiObjectRef,\n  Shared: SharedObjectRef,\n  Receiving: SuiObjectRef\n});\nconst CallArg = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"CallArg\", {\n  Pure: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  Object: ObjectArg,\n  ObjVec: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(ObjectArg)\n});\nconst TypeTag = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"TypeTag\", {\n  bool: null,\n  u8: null,\n  u64: null,\n  u128: null,\n  address: null,\n  signer: null,\n  vector: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.lazy(() => TypeTag),\n  struct: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.lazy(() => StructTag),\n  u16: null,\n  u32: null,\n  u256: null\n});\nconst Argument = enumKind(\n  _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"Argument\", {\n    GasCoin: null,\n    Input: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"Input\", { index: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16() }),\n    Result: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"Result\", { index: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16() }),\n    NestedResult: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"NestedResult\", { index: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16(), resultIndex: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16() })\n  })\n);\nconst ProgrammableMoveCall = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"ProgrammableMoveCall\", {\n  package: Address,\n  module: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.string(),\n  function: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.string(),\n  type_arguments: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(TypeTag),\n  arguments: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Argument)\n}).transform({\n  input: (data) => {\n    const [pkg, module, fun] = data.target.split(\"::\");\n    const type_arguments = data.typeArguments.map(\n      (tag) => _type_tag_serializer_js__WEBPACK_IMPORTED_MODULE_5__.TypeTagSerializer.parseFromStr(tag, true)\n    );\n    return {\n      package: (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__.normalizeSuiAddress)(pkg),\n      module,\n      function: fun,\n      type_arguments,\n      arguments: data.arguments\n    };\n  },\n  output: (data) => {\n    return {\n      target: [data.package, data.module, data.function].join(\n        \"::\"\n      ),\n      arguments: data.arguments,\n      typeArguments: data.type_arguments.map(_type_tag_serializer_js__WEBPACK_IMPORTED_MODULE_5__.TypeTagSerializer.tagToString)\n    };\n  }\n});\nconst Transaction = enumKind(\n  _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"Transaction\", {\n    /**\n     * A Move Call - any public Move function can be called via\n     * this transaction. The results can be used that instant to pass\n     * into the next transaction.\n     */\n    MoveCall: ProgrammableMoveCall,\n    /**\n     * Transfer vector of objects to a receiver.\n     */\n    TransferObjects: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"TransferObjects\", {\n      objects: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Argument),\n      address: Argument\n    }),\n    /**\n     * Split `amount` from a `coin`.\n     */\n    SplitCoins: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"SplitCoins\", { coin: Argument, amounts: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Argument) }),\n    /**\n     * Merge Vector of Coins (`sources`) into a `destination`.\n     */\n    MergeCoins: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"MergeCoins\", { destination: Argument, sources: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Argument) }),\n    /**\n     * Publish a Move module.\n     */\n    Publish: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"Publish\", {\n      modules: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8())),\n      dependencies: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Address)\n    }),\n    /**\n     * Build a vector of objects using the input arguments.\n     * It is impossible to construct a `vector<T: key>` otherwise,\n     * so this call serves a utility function.\n     */\n    MakeMoveVec: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"MakeMoveVec\", {\n      type: optionEnum(TypeTag),\n      objects: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Argument)\n    }),\n    /**  */\n    Upgrade: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"Upgrade\", {\n      modules: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8())),\n      dependencies: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Address),\n      packageId: Address,\n      ticket: Argument\n    })\n  })\n);\nconst ProgrammableTransaction = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"ProgrammableTransaction\", {\n  inputs: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(CallArg),\n  transactions: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(Transaction)\n});\nconst TransactionKind = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"TransactionKind\", {\n  ProgrammableTransaction,\n  ChangeEpoch: null,\n  Genesis: null,\n  ConsensusCommitPrologue: null\n});\nconst TransactionExpiration = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"TransactionExpiration\", {\n  None: null,\n  Epoch: unsafe_u64()\n});\nconst StructTag = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"StructTag\", {\n  address: Address,\n  module: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.string(),\n  name: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.string(),\n  typeParams: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(TypeTag)\n});\nconst GasData = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"GasData\", {\n  payment: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(SuiObjectRef),\n  owner: Address,\n  price: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u64(),\n  budget: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u64()\n});\nconst TransactionDataV1 = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"TransactionDataV1\", {\n  kind: TransactionKind,\n  sender: Address,\n  gasData: GasData,\n  expiration: TransactionExpiration\n});\nconst TransactionData = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"TransactionData\", {\n  V1: TransactionDataV1\n});\nconst IntentScope = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"IntentScope\", {\n  TransactionData: null,\n  TransactionEffects: null,\n  CheckpointSummary: null,\n  PersonalMessage: null\n});\nconst IntentVersion = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"IntentVersion\", {\n  V0: null\n});\nconst AppId = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"AppId\", {\n  Sui: null\n});\nconst Intent = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"Intent\", {\n  scope: IntentScope,\n  version: IntentVersion,\n  appId: AppId\n});\nconst IntentMessage = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.generic(\n  [\"T\"],\n  (T) => _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"IntentMessage<T>\", {\n    intent: Intent,\n    value: T\n  })\n);\nconst CompressedSignature = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"CompressedSignature\", {\n  ED25519: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.fixedArray(64, _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  Secp256k1: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.fixedArray(64, _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  Secp256r1: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.fixedArray(64, _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  ZkLogin: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8())\n});\nconst PublicKey = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.enum(\"PublicKey\", {\n  ED25519: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.fixedArray(32, _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  Secp256k1: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.fixedArray(33, _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  Secp256r1: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.fixedArray(33, _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()),\n  ZkLogin: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8())\n});\nconst MultiSigPkMap = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"MultiSigPkMap\", {\n  pubKey: PublicKey,\n  weight: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()\n});\nconst MultiSigPublicKey = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"MultiSigPublicKey\", {\n  pk_map: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(MultiSigPkMap),\n  threshold: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16()\n});\nconst MultiSig = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"MultiSig\", {\n  sigs: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(CompressedSignature),\n  bitmap: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16(),\n  multisig_pk: MultiSigPublicKey\n});\nconst base64String = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8()).transform({\n  input: (val) => typeof val === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_6__.fromB64)(val) : val,\n  output: (val) => (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_6__.toB64)(new Uint8Array(val))\n});\nconst SenderSignedTransaction = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.struct(\"SenderSignedTransaction\", {\n  intentMessage: IntentMessage(TransactionData),\n  txSignatures: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(base64String)\n});\nconst SenderSignedData = _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.vector(SenderSignedTransaction, {\n  name: \"SenderSignedData\"\n});\nconst suiBcs = {\n  ..._mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs,\n  U8: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u8(),\n  U16: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u16(),\n  U32: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u32(),\n  U64: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u64(),\n  U128: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u128(),\n  U256: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.u256(),\n  ULEB128: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.uleb128(),\n  Bool: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.bool(),\n  String: _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.string(),\n  Address,\n  Argument,\n  CallArg,\n  CompressedSignature,\n  GasData,\n  MultiSig,\n  MultiSigPkMap,\n  MultiSigPublicKey,\n  ObjectArg,\n  ObjectDigest,\n  ProgrammableMoveCall,\n  ProgrammableTransaction,\n  PublicKey,\n  SenderSignedData,\n  SenderSignedTransaction,\n  SharedObjectRef,\n  StructTag,\n  SuiObjectRef,\n  Transaction,\n  TransactionData,\n  TransactionDataV1,\n  TransactionExpiration,\n  TransactionKind,\n  TypeTag,\n  // preserve backwards compatibility with old bcs export\n  ser: bcsRegistry.ser.bind(bcsRegistry),\n  de: bcsRegistry.de.bind(bcsRegistry),\n  getTypeInterface: bcsRegistry.getTypeInterface.bind(bcsRegistry),\n  hasType: bcsRegistry.hasType.bind(bcsRegistry),\n  parseTypeName: bcsRegistry.parseTypeName.bind(bcsRegistry),\n  registerAddressType: bcsRegistry.registerAddressType.bind(bcsRegistry),\n  registerAlias: bcsRegistry.registerAlias.bind(bcsRegistry),\n  registerBcsType: bcsRegistry.registerBcsType.bind(bcsRegistry),\n  registerEnumType: bcsRegistry.registerEnumType.bind(bcsRegistry),\n  registerStructType: bcsRegistry.registerStructType.bind(bcsRegistry),\n  registerType: bcsRegistry.registerType.bind(bcsRegistry),\n  types: bcsRegistry.types\n};\nbcsRegistry.registerBcsType(\"utf8string\", () => _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.bcs.string({ name: \"utf8string\" }));\nbcsRegistry.registerBcsType(\"unsafe_u64\", () => unsafe_u64());\nbcsRegistry.registerBcsType(\"enumKind\", (T) => enumKind(T));\n[\n  Address,\n  Argument,\n  CallArg,\n  CompressedSignature,\n  GasData,\n  MultiSig,\n  MultiSigPkMap,\n  MultiSigPublicKey,\n  ObjectArg,\n  ObjectDigest,\n  ProgrammableMoveCall,\n  ProgrammableTransaction,\n  PublicKey,\n  SenderSignedData,\n  SharedObjectRef,\n  StructTag,\n  SuiObjectRef,\n  Transaction,\n  TransactionData,\n  TransactionDataV1,\n  TransactionExpiration,\n  TransactionKind,\n  TypeTag\n].forEach((type) => {\n  bcsRegistry.registerBcsType(type.name, () => type);\n});\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2Jjcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQVVxQjtBQUMyRDtBQUNuQjtBQUNzQjtBQUNuRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNENBQVc7QUFDbkMsS0FBSyw2REFBZ0I7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLFNBQVMsNENBQUc7QUFDWjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFNBQVMsNENBQUc7QUFDWjtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBLEdBQUc7QUFDSDtBQUNBLGdCQUFnQiw0Q0FBRyxPQUFPLG1FQUFrQjtBQUM1Qyw0Q0FBNEMsb0RBQU8sQ0FBQyx3RUFBbUI7QUFDdkUsbUJBQW1CLHdFQUFtQixDQUFDLGtEQUFLO0FBQzVDLENBQUM7QUFDRCxxQkFBcUIsNENBQUcsUUFBUSw0Q0FBRztBQUNuQztBQUNBLG9CQUFvQixvREFBTztBQUMzQixxQkFBcUIsa0RBQUs7QUFDMUIsQ0FBQztBQUNELHFCQUFxQiw0Q0FBRztBQUN4QjtBQUNBLFdBQVcsNENBQUc7QUFDZDtBQUNBLENBQUM7QUFDRCx3QkFBd0IsNENBQUc7QUFDM0I7QUFDQSx3QkFBd0IsNENBQUc7QUFDM0IsV0FBVyw0Q0FBRztBQUNkLENBQUM7QUFDRCxrQkFBa0IsNENBQUc7QUFDckI7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGdCQUFnQiw0Q0FBRztBQUNuQixRQUFRLDRDQUFHLFFBQVEsNENBQUc7QUFDdEI7QUFDQSxVQUFVLDRDQUFHO0FBQ2IsQ0FBQztBQUNELGdCQUFnQiw0Q0FBRztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDRDQUFHO0FBQ2IsVUFBVSw0Q0FBRztBQUNiO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLEVBQUUsNENBQUc7QUFDTDtBQUNBLFdBQVcsNENBQUcsbUJBQW1CLE9BQU8sNENBQUcsUUFBUTtBQUNuRCxZQUFZLDRDQUFHLG9CQUFvQixPQUFPLDRDQUFHLFFBQVE7QUFDckQsa0JBQWtCLDRDQUFHLDBCQUEwQixPQUFPLDRDQUFHLHFCQUFxQiw0Q0FBRyxRQUFRO0FBQ3pGLEdBQUc7QUFDSDtBQUNBLDZCQUE2Qiw0Q0FBRztBQUNoQztBQUNBLFVBQVUsNENBQUc7QUFDYixZQUFZLDRDQUFHO0FBQ2Ysa0JBQWtCLDRDQUFHO0FBQ3JCLGFBQWEsNENBQUc7QUFDaEIsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0VBQWlCO0FBQ2hDO0FBQ0E7QUFDQSxlQUFlLHdFQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QyxzRUFBaUI7QUFDOUQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLEVBQUUsNENBQUc7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsNENBQUc7QUFDeEIsZUFBZSw0Q0FBRztBQUNsQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNENBQUcsd0JBQXdCLHlCQUF5Qiw0Q0FBRyxtQkFBbUI7QUFDMUY7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDRDQUFHLHdCQUF3QixnQ0FBZ0MsNENBQUcsbUJBQW1CO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBLGFBQWEsNENBQUc7QUFDaEIsZUFBZSw0Q0FBRyxRQUFRLDRDQUFHLFFBQVEsNENBQUc7QUFDeEMsb0JBQW9CLDRDQUFHO0FBQ3ZCLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDRDQUFHO0FBQ3BCO0FBQ0EsZUFBZSw0Q0FBRztBQUNsQixLQUFLO0FBQ0w7QUFDQSxhQUFhLDRDQUFHO0FBQ2hCLGVBQWUsNENBQUcsUUFBUSw0Q0FBRyxRQUFRLDRDQUFHO0FBQ3hDLG9CQUFvQiw0Q0FBRztBQUN2QjtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBLGdDQUFnQyw0Q0FBRztBQUNuQyxVQUFVLDRDQUFHO0FBQ2IsZ0JBQWdCLDRDQUFHO0FBQ25CLENBQUM7QUFDRCx3QkFBd0IsNENBQUc7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsOEJBQThCLDRDQUFHO0FBQ2pDO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsa0JBQWtCLDRDQUFHO0FBQ3JCO0FBQ0EsVUFBVSw0Q0FBRztBQUNiLFFBQVEsNENBQUc7QUFDWCxjQUFjLDRDQUFHO0FBQ2pCLENBQUM7QUFDRCxnQkFBZ0IsNENBQUc7QUFDbkIsV0FBVyw0Q0FBRztBQUNkO0FBQ0EsU0FBUyw0Q0FBRztBQUNaLFVBQVUsNENBQUc7QUFDYixDQUFDO0FBQ0QsMEJBQTBCLDRDQUFHO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELHdCQUF3Qiw0Q0FBRztBQUMzQjtBQUNBLENBQUM7QUFDRCxvQkFBb0IsNENBQUc7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0JBQXNCLDRDQUFHO0FBQ3pCO0FBQ0EsQ0FBQztBQUNELGNBQWMsNENBQUc7QUFDakI7QUFDQSxDQUFDO0FBQ0QsZUFBZSw0Q0FBRztBQUNsQjtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsc0JBQXNCLDRDQUFHO0FBQ3pCO0FBQ0EsU0FBUyw0Q0FBRztBQUNaO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSw0QkFBNEIsNENBQUc7QUFDL0IsV0FBVyw0Q0FBRyxnQkFBZ0IsNENBQUc7QUFDakMsYUFBYSw0Q0FBRyxnQkFBZ0IsNENBQUc7QUFDbkMsYUFBYSw0Q0FBRyxnQkFBZ0IsNENBQUc7QUFDbkMsV0FBVyw0Q0FBRyxRQUFRLDRDQUFHO0FBQ3pCLENBQUM7QUFDRCxrQkFBa0IsNENBQUc7QUFDckIsV0FBVyw0Q0FBRyxnQkFBZ0IsNENBQUc7QUFDakMsYUFBYSw0Q0FBRyxnQkFBZ0IsNENBQUc7QUFDbkMsYUFBYSw0Q0FBRyxnQkFBZ0IsNENBQUc7QUFDbkMsV0FBVyw0Q0FBRyxRQUFRLDRDQUFHO0FBQ3pCLENBQUM7QUFDRCxzQkFBc0IsNENBQUc7QUFDekI7QUFDQSxVQUFVLDRDQUFHO0FBQ2IsQ0FBQztBQUNELDBCQUEwQiw0Q0FBRztBQUM3QixVQUFVLDRDQUFHO0FBQ2IsYUFBYSw0Q0FBRztBQUNoQixDQUFDO0FBQ0QsaUJBQWlCLDRDQUFHO0FBQ3BCLFFBQVEsNENBQUc7QUFDWCxVQUFVLDRDQUFHO0FBQ2I7QUFDQSxDQUFDO0FBQ0QscUJBQXFCLDRDQUFHLFFBQVEsNENBQUc7QUFDbkMsNENBQTRDLG9EQUFPO0FBQ25ELG1CQUFtQixrREFBSztBQUN4QixDQUFDO0FBQ0QsZ0NBQWdDLDRDQUFHO0FBQ25DO0FBQ0EsZ0JBQWdCLDRDQUFHO0FBQ25CLENBQUM7QUFDRCx5QkFBeUIsNENBQUc7QUFDNUI7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxLQUFLLDRDQUFHO0FBQ1IsTUFBTSw0Q0FBRztBQUNULE9BQU8sNENBQUc7QUFDVixPQUFPLDRDQUFHO0FBQ1YsT0FBTyw0Q0FBRztBQUNWLFFBQVEsNENBQUc7QUFDWCxRQUFRLDRDQUFHO0FBQ1gsV0FBVyw0Q0FBRztBQUNkLFFBQVEsNENBQUc7QUFDWCxVQUFVLDRDQUFHO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCw0Q0FBRyxVQUFVLG9CQUFvQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFNQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS9iY3MvaW5kZXguanM/Yjg4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBiY3MsXG4gIEJDUyBhcyBCY3NSZWdpc3RyeSxcbiAgZnJvbUI1OCxcbiAgZnJvbUI2NCxcbiAgZnJvbUhFWCxcbiAgZ2V0U3VpTW92ZUNvbmZpZyxcbiAgdG9CNTgsXG4gIHRvQjY0LFxuICB0b0hFWFxufSBmcm9tIFwiQG15c3Rlbi9iY3NcIjtcbmltcG9ydCB7IG5vcm1hbGl6ZVN1aUFkZHJlc3MsIFNVSV9BRERSRVNTX0xFTkdUSCB9IGZyb20gXCIuLi91dGlscy9zdWktdHlwZXMuanNcIjtcbmltcG9ydCB7IFR5cGVUYWdTZXJpYWxpemVyIH0gZnJvbSBcIi4vdHlwZS10YWctc2VyaWFsaXplci5qc1wiO1xuaW1wb3J0IHsgVHlwZVRhZ1NlcmlhbGl6ZXIgYXMgVHlwZVRhZ1NlcmlhbGl6ZXIyIH0gZnJvbSBcIi4vdHlwZS10YWctc2VyaWFsaXplci5qc1wiO1xuZnVuY3Rpb24gaXNQdXJlQXJnKGFyZykge1xuICByZXR1cm4gYXJnLlB1cmUgIT09IHZvaWQgMDtcbn1cbmNvbnN0IGJjc1JlZ2lzdHJ5ID0gbmV3IEJjc1JlZ2lzdHJ5KHtcbiAgLi4uZ2V0U3VpTW92ZUNvbmZpZygpLFxuICB0eXBlczoge1xuICAgIGVudW1zOiB7XG4gICAgICBcIk9wdGlvbjxUPlwiOiB7XG4gICAgICAgIE5vbmU6IG51bGwsXG4gICAgICAgIFNvbWU6IFwiVFwiXG4gICAgICB9XG4gICAgfVxuICB9XG59KTtcbmZ1bmN0aW9uIHVuc2FmZV91NjQob3B0aW9ucykge1xuICByZXR1cm4gYmNzLnU2NCh7XG4gICAgbmFtZTogXCJ1bnNhZmVfdTY0XCIsXG4gICAgLi4ub3B0aW9uc1xuICB9KS50cmFuc2Zvcm0oe1xuICAgIGlucHV0OiAodmFsKSA9PiB2YWwsXG4gICAgb3V0cHV0OiAodmFsKSA9PiBOdW1iZXIodmFsKVxuICB9KTtcbn1cbmZ1bmN0aW9uIG9wdGlvbkVudW0odHlwZSkge1xuICByZXR1cm4gYmNzLmVudW0oXCJPcHRpb25cIiwge1xuICAgIE5vbmU6IG51bGwsXG4gICAgU29tZTogdHlwZVxuICB9KTtcbn1cbmZ1bmN0aW9uIGVudW1LaW5kKHR5cGUpIHtcbiAgcmV0dXJuIHR5cGUudHJhbnNmb3JtKHtcbiAgICBpbnB1dDogKHZhbCkgPT4gKHtcbiAgICAgIFt2YWwua2luZF06IHZhbFxuICAgIH0pLFxuICAgIG91dHB1dDogKHZhbCkgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gT2JqZWN0LmtleXModmFsKVswXTtcbiAgICAgIHJldHVybiB7IGtpbmQ6IGtleSwgLi4udmFsW2tleV0gfTtcbiAgICB9XG4gIH0pO1xufVxuY29uc3QgQWRkcmVzcyA9IGJjcy5ieXRlcyhTVUlfQUREUkVTU19MRU5HVEgpLnRyYW5zZm9ybSh7XG4gIGlucHV0OiAodmFsKSA9PiB0eXBlb2YgdmFsID09PSBcInN0cmluZ1wiID8gZnJvbUhFWChub3JtYWxpemVTdWlBZGRyZXNzKHZhbCkpIDogdmFsLFxuICBvdXRwdXQ6ICh2YWwpID0+IG5vcm1hbGl6ZVN1aUFkZHJlc3ModG9IRVgodmFsKSlcbn0pO1xuY29uc3QgT2JqZWN0RGlnZXN0ID0gYmNzLnZlY3RvcihiY3MudTgoKSkudHJhbnNmb3JtKHtcbiAgbmFtZTogXCJPYmplY3REaWdlc3RcIixcbiAgaW5wdXQ6ICh2YWx1ZSkgPT4gZnJvbUI1OCh2YWx1ZSksXG4gIG91dHB1dDogKHZhbHVlKSA9PiB0b0I1OChuZXcgVWludDhBcnJheSh2YWx1ZSkpXG59KTtcbmNvbnN0IFN1aU9iamVjdFJlZiA9IGJjcy5zdHJ1Y3QoXCJTdWlPYmplY3RSZWZcIiwge1xuICBvYmplY3RJZDogQWRkcmVzcyxcbiAgdmVyc2lvbjogYmNzLnU2NCgpLFxuICBkaWdlc3Q6IE9iamVjdERpZ2VzdFxufSk7XG5jb25zdCBTaGFyZWRPYmplY3RSZWYgPSBiY3Muc3RydWN0KFwiU2hhcmVkT2JqZWN0UmVmXCIsIHtcbiAgb2JqZWN0SWQ6IEFkZHJlc3MsXG4gIGluaXRpYWxTaGFyZWRWZXJzaW9uOiBiY3MudTY0KCksXG4gIG11dGFibGU6IGJjcy5ib29sKClcbn0pO1xuY29uc3QgT2JqZWN0QXJnID0gYmNzLmVudW0oXCJPYmplY3RBcmdcIiwge1xuICBJbW1Pck93bmVkOiBTdWlPYmplY3RSZWYsXG4gIFNoYXJlZDogU2hhcmVkT2JqZWN0UmVmLFxuICBSZWNlaXZpbmc6IFN1aU9iamVjdFJlZlxufSk7XG5jb25zdCBDYWxsQXJnID0gYmNzLmVudW0oXCJDYWxsQXJnXCIsIHtcbiAgUHVyZTogYmNzLnZlY3RvcihiY3MudTgoKSksXG4gIE9iamVjdDogT2JqZWN0QXJnLFxuICBPYmpWZWM6IGJjcy52ZWN0b3IoT2JqZWN0QXJnKVxufSk7XG5jb25zdCBUeXBlVGFnID0gYmNzLmVudW0oXCJUeXBlVGFnXCIsIHtcbiAgYm9vbDogbnVsbCxcbiAgdTg6IG51bGwsXG4gIHU2NDogbnVsbCxcbiAgdTEyODogbnVsbCxcbiAgYWRkcmVzczogbnVsbCxcbiAgc2lnbmVyOiBudWxsLFxuICB2ZWN0b3I6IGJjcy5sYXp5KCgpID0+IFR5cGVUYWcpLFxuICBzdHJ1Y3Q6IGJjcy5sYXp5KCgpID0+IFN0cnVjdFRhZyksXG4gIHUxNjogbnVsbCxcbiAgdTMyOiBudWxsLFxuICB1MjU2OiBudWxsXG59KTtcbmNvbnN0IEFyZ3VtZW50ID0gZW51bUtpbmQoXG4gIGJjcy5lbnVtKFwiQXJndW1lbnRcIiwge1xuICAgIEdhc0NvaW46IG51bGwsXG4gICAgSW5wdXQ6IGJjcy5zdHJ1Y3QoXCJJbnB1dFwiLCB7IGluZGV4OiBiY3MudTE2KCkgfSksXG4gICAgUmVzdWx0OiBiY3Muc3RydWN0KFwiUmVzdWx0XCIsIHsgaW5kZXg6IGJjcy51MTYoKSB9KSxcbiAgICBOZXN0ZWRSZXN1bHQ6IGJjcy5zdHJ1Y3QoXCJOZXN0ZWRSZXN1bHRcIiwgeyBpbmRleDogYmNzLnUxNigpLCByZXN1bHRJbmRleDogYmNzLnUxNigpIH0pXG4gIH0pXG4pO1xuY29uc3QgUHJvZ3JhbW1hYmxlTW92ZUNhbGwgPSBiY3Muc3RydWN0KFwiUHJvZ3JhbW1hYmxlTW92ZUNhbGxcIiwge1xuICBwYWNrYWdlOiBBZGRyZXNzLFxuICBtb2R1bGU6IGJjcy5zdHJpbmcoKSxcbiAgZnVuY3Rpb246IGJjcy5zdHJpbmcoKSxcbiAgdHlwZV9hcmd1bWVudHM6IGJjcy52ZWN0b3IoVHlwZVRhZyksXG4gIGFyZ3VtZW50czogYmNzLnZlY3RvcihBcmd1bWVudClcbn0pLnRyYW5zZm9ybSh7XG4gIGlucHV0OiAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IFtwa2csIG1vZHVsZSwgZnVuXSA9IGRhdGEudGFyZ2V0LnNwbGl0KFwiOjpcIik7XG4gICAgY29uc3QgdHlwZV9hcmd1bWVudHMgPSBkYXRhLnR5cGVBcmd1bWVudHMubWFwKFxuICAgICAgKHRhZykgPT4gVHlwZVRhZ1NlcmlhbGl6ZXIucGFyc2VGcm9tU3RyKHRhZywgdHJ1ZSlcbiAgICApO1xuICAgIHJldHVybiB7XG4gICAgICBwYWNrYWdlOiBub3JtYWxpemVTdWlBZGRyZXNzKHBrZyksXG4gICAgICBtb2R1bGUsXG4gICAgICBmdW5jdGlvbjogZnVuLFxuICAgICAgdHlwZV9hcmd1bWVudHMsXG4gICAgICBhcmd1bWVudHM6IGRhdGEuYXJndW1lbnRzXG4gICAgfTtcbiAgfSxcbiAgb3V0cHV0OiAoZGF0YSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICB0YXJnZXQ6IFtkYXRhLnBhY2thZ2UsIGRhdGEubW9kdWxlLCBkYXRhLmZ1bmN0aW9uXS5qb2luKFxuICAgICAgICBcIjo6XCJcbiAgICAgICksXG4gICAgICBhcmd1bWVudHM6IGRhdGEuYXJndW1lbnRzLFxuICAgICAgdHlwZUFyZ3VtZW50czogZGF0YS50eXBlX2FyZ3VtZW50cy5tYXAoVHlwZVRhZ1NlcmlhbGl6ZXIudGFnVG9TdHJpbmcpXG4gICAgfTtcbiAgfVxufSk7XG5jb25zdCBUcmFuc2FjdGlvbiA9IGVudW1LaW5kKFxuICBiY3MuZW51bShcIlRyYW5zYWN0aW9uXCIsIHtcbiAgICAvKipcbiAgICAgKiBBIE1vdmUgQ2FsbCAtIGFueSBwdWJsaWMgTW92ZSBmdW5jdGlvbiBjYW4gYmUgY2FsbGVkIHZpYVxuICAgICAqIHRoaXMgdHJhbnNhY3Rpb24uIFRoZSByZXN1bHRzIGNhbiBiZSB1c2VkIHRoYXQgaW5zdGFudCB0byBwYXNzXG4gICAgICogaW50byB0aGUgbmV4dCB0cmFuc2FjdGlvbi5cbiAgICAgKi9cbiAgICBNb3ZlQ2FsbDogUHJvZ3JhbW1hYmxlTW92ZUNhbGwsXG4gICAgLyoqXG4gICAgICogVHJhbnNmZXIgdmVjdG9yIG9mIG9iamVjdHMgdG8gYSByZWNlaXZlci5cbiAgICAgKi9cbiAgICBUcmFuc2Zlck9iamVjdHM6IGJjcy5zdHJ1Y3QoXCJUcmFuc2Zlck9iamVjdHNcIiwge1xuICAgICAgb2JqZWN0czogYmNzLnZlY3RvcihBcmd1bWVudCksXG4gICAgICBhZGRyZXNzOiBBcmd1bWVudFxuICAgIH0pLFxuICAgIC8qKlxuICAgICAqIFNwbGl0IGBhbW91bnRgIGZyb20gYSBgY29pbmAuXG4gICAgICovXG4gICAgU3BsaXRDb2luczogYmNzLnN0cnVjdChcIlNwbGl0Q29pbnNcIiwgeyBjb2luOiBBcmd1bWVudCwgYW1vdW50czogYmNzLnZlY3RvcihBcmd1bWVudCkgfSksXG4gICAgLyoqXG4gICAgICogTWVyZ2UgVmVjdG9yIG9mIENvaW5zIChgc291cmNlc2ApIGludG8gYSBgZGVzdGluYXRpb25gLlxuICAgICAqL1xuICAgIE1lcmdlQ29pbnM6IGJjcy5zdHJ1Y3QoXCJNZXJnZUNvaW5zXCIsIHsgZGVzdGluYXRpb246IEFyZ3VtZW50LCBzb3VyY2VzOiBiY3MudmVjdG9yKEFyZ3VtZW50KSB9KSxcbiAgICAvKipcbiAgICAgKiBQdWJsaXNoIGEgTW92ZSBtb2R1bGUuXG4gICAgICovXG4gICAgUHVibGlzaDogYmNzLnN0cnVjdChcIlB1Ymxpc2hcIiwge1xuICAgICAgbW9kdWxlczogYmNzLnZlY3RvcihiY3MudmVjdG9yKGJjcy51OCgpKSksXG4gICAgICBkZXBlbmRlbmNpZXM6IGJjcy52ZWN0b3IoQWRkcmVzcylcbiAgICB9KSxcbiAgICAvKipcbiAgICAgKiBCdWlsZCBhIHZlY3RvciBvZiBvYmplY3RzIHVzaW5nIHRoZSBpbnB1dCBhcmd1bWVudHMuXG4gICAgICogSXQgaXMgaW1wb3NzaWJsZSB0byBjb25zdHJ1Y3QgYSBgdmVjdG9yPFQ6IGtleT5gIG90aGVyd2lzZSxcbiAgICAgKiBzbyB0aGlzIGNhbGwgc2VydmVzIGEgdXRpbGl0eSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBNYWtlTW92ZVZlYzogYmNzLnN0cnVjdChcIk1ha2VNb3ZlVmVjXCIsIHtcbiAgICAgIHR5cGU6IG9wdGlvbkVudW0oVHlwZVRhZyksXG4gICAgICBvYmplY3RzOiBiY3MudmVjdG9yKEFyZ3VtZW50KVxuICAgIH0pLFxuICAgIC8qKiAgKi9cbiAgICBVcGdyYWRlOiBiY3Muc3RydWN0KFwiVXBncmFkZVwiLCB7XG4gICAgICBtb2R1bGVzOiBiY3MudmVjdG9yKGJjcy52ZWN0b3IoYmNzLnU4KCkpKSxcbiAgICAgIGRlcGVuZGVuY2llczogYmNzLnZlY3RvcihBZGRyZXNzKSxcbiAgICAgIHBhY2thZ2VJZDogQWRkcmVzcyxcbiAgICAgIHRpY2tldDogQXJndW1lbnRcbiAgICB9KVxuICB9KVxuKTtcbmNvbnN0IFByb2dyYW1tYWJsZVRyYW5zYWN0aW9uID0gYmNzLnN0cnVjdChcIlByb2dyYW1tYWJsZVRyYW5zYWN0aW9uXCIsIHtcbiAgaW5wdXRzOiBiY3MudmVjdG9yKENhbGxBcmcpLFxuICB0cmFuc2FjdGlvbnM6IGJjcy52ZWN0b3IoVHJhbnNhY3Rpb24pXG59KTtcbmNvbnN0IFRyYW5zYWN0aW9uS2luZCA9IGJjcy5lbnVtKFwiVHJhbnNhY3Rpb25LaW5kXCIsIHtcbiAgUHJvZ3JhbW1hYmxlVHJhbnNhY3Rpb24sXG4gIENoYW5nZUVwb2NoOiBudWxsLFxuICBHZW5lc2lzOiBudWxsLFxuICBDb25zZW5zdXNDb21taXRQcm9sb2d1ZTogbnVsbFxufSk7XG5jb25zdCBUcmFuc2FjdGlvbkV4cGlyYXRpb24gPSBiY3MuZW51bShcIlRyYW5zYWN0aW9uRXhwaXJhdGlvblwiLCB7XG4gIE5vbmU6IG51bGwsXG4gIEVwb2NoOiB1bnNhZmVfdTY0KClcbn0pO1xuY29uc3QgU3RydWN0VGFnID0gYmNzLnN0cnVjdChcIlN0cnVjdFRhZ1wiLCB7XG4gIGFkZHJlc3M6IEFkZHJlc3MsXG4gIG1vZHVsZTogYmNzLnN0cmluZygpLFxuICBuYW1lOiBiY3Muc3RyaW5nKCksXG4gIHR5cGVQYXJhbXM6IGJjcy52ZWN0b3IoVHlwZVRhZylcbn0pO1xuY29uc3QgR2FzRGF0YSA9IGJjcy5zdHJ1Y3QoXCJHYXNEYXRhXCIsIHtcbiAgcGF5bWVudDogYmNzLnZlY3RvcihTdWlPYmplY3RSZWYpLFxuICBvd25lcjogQWRkcmVzcyxcbiAgcHJpY2U6IGJjcy51NjQoKSxcbiAgYnVkZ2V0OiBiY3MudTY0KClcbn0pO1xuY29uc3QgVHJhbnNhY3Rpb25EYXRhVjEgPSBiY3Muc3RydWN0KFwiVHJhbnNhY3Rpb25EYXRhVjFcIiwge1xuICBraW5kOiBUcmFuc2FjdGlvbktpbmQsXG4gIHNlbmRlcjogQWRkcmVzcyxcbiAgZ2FzRGF0YTogR2FzRGF0YSxcbiAgZXhwaXJhdGlvbjogVHJhbnNhY3Rpb25FeHBpcmF0aW9uXG59KTtcbmNvbnN0IFRyYW5zYWN0aW9uRGF0YSA9IGJjcy5lbnVtKFwiVHJhbnNhY3Rpb25EYXRhXCIsIHtcbiAgVjE6IFRyYW5zYWN0aW9uRGF0YVYxXG59KTtcbmNvbnN0IEludGVudFNjb3BlID0gYmNzLmVudW0oXCJJbnRlbnRTY29wZVwiLCB7XG4gIFRyYW5zYWN0aW9uRGF0YTogbnVsbCxcbiAgVHJhbnNhY3Rpb25FZmZlY3RzOiBudWxsLFxuICBDaGVja3BvaW50U3VtbWFyeTogbnVsbCxcbiAgUGVyc29uYWxNZXNzYWdlOiBudWxsXG59KTtcbmNvbnN0IEludGVudFZlcnNpb24gPSBiY3MuZW51bShcIkludGVudFZlcnNpb25cIiwge1xuICBWMDogbnVsbFxufSk7XG5jb25zdCBBcHBJZCA9IGJjcy5lbnVtKFwiQXBwSWRcIiwge1xuICBTdWk6IG51bGxcbn0pO1xuY29uc3QgSW50ZW50ID0gYmNzLnN0cnVjdChcIkludGVudFwiLCB7XG4gIHNjb3BlOiBJbnRlbnRTY29wZSxcbiAgdmVyc2lvbjogSW50ZW50VmVyc2lvbixcbiAgYXBwSWQ6IEFwcElkXG59KTtcbmNvbnN0IEludGVudE1lc3NhZ2UgPSBiY3MuZ2VuZXJpYyhcbiAgW1wiVFwiXSxcbiAgKFQpID0+IGJjcy5zdHJ1Y3QoXCJJbnRlbnRNZXNzYWdlPFQ+XCIsIHtcbiAgICBpbnRlbnQ6IEludGVudCxcbiAgICB2YWx1ZTogVFxuICB9KVxuKTtcbmNvbnN0IENvbXByZXNzZWRTaWduYXR1cmUgPSBiY3MuZW51bShcIkNvbXByZXNzZWRTaWduYXR1cmVcIiwge1xuICBFRDI1NTE5OiBiY3MuZml4ZWRBcnJheSg2NCwgYmNzLnU4KCkpLFxuICBTZWNwMjU2azE6IGJjcy5maXhlZEFycmF5KDY0LCBiY3MudTgoKSksXG4gIFNlY3AyNTZyMTogYmNzLmZpeGVkQXJyYXkoNjQsIGJjcy51OCgpKSxcbiAgWmtMb2dpbjogYmNzLnZlY3RvcihiY3MudTgoKSlcbn0pO1xuY29uc3QgUHVibGljS2V5ID0gYmNzLmVudW0oXCJQdWJsaWNLZXlcIiwge1xuICBFRDI1NTE5OiBiY3MuZml4ZWRBcnJheSgzMiwgYmNzLnU4KCkpLFxuICBTZWNwMjU2azE6IGJjcy5maXhlZEFycmF5KDMzLCBiY3MudTgoKSksXG4gIFNlY3AyNTZyMTogYmNzLmZpeGVkQXJyYXkoMzMsIGJjcy51OCgpKSxcbiAgWmtMb2dpbjogYmNzLnZlY3RvcihiY3MudTgoKSlcbn0pO1xuY29uc3QgTXVsdGlTaWdQa01hcCA9IGJjcy5zdHJ1Y3QoXCJNdWx0aVNpZ1BrTWFwXCIsIHtcbiAgcHViS2V5OiBQdWJsaWNLZXksXG4gIHdlaWdodDogYmNzLnU4KClcbn0pO1xuY29uc3QgTXVsdGlTaWdQdWJsaWNLZXkgPSBiY3Muc3RydWN0KFwiTXVsdGlTaWdQdWJsaWNLZXlcIiwge1xuICBwa19tYXA6IGJjcy52ZWN0b3IoTXVsdGlTaWdQa01hcCksXG4gIHRocmVzaG9sZDogYmNzLnUxNigpXG59KTtcbmNvbnN0IE11bHRpU2lnID0gYmNzLnN0cnVjdChcIk11bHRpU2lnXCIsIHtcbiAgc2lnczogYmNzLnZlY3RvcihDb21wcmVzc2VkU2lnbmF0dXJlKSxcbiAgYml0bWFwOiBiY3MudTE2KCksXG4gIG11bHRpc2lnX3BrOiBNdWx0aVNpZ1B1YmxpY0tleVxufSk7XG5jb25zdCBiYXNlNjRTdHJpbmcgPSBiY3MudmVjdG9yKGJjcy51OCgpKS50cmFuc2Zvcm0oe1xuICBpbnB1dDogKHZhbCkgPT4gdHlwZW9mIHZhbCA9PT0gXCJzdHJpbmdcIiA/IGZyb21CNjQodmFsKSA6IHZhbCxcbiAgb3V0cHV0OiAodmFsKSA9PiB0b0I2NChuZXcgVWludDhBcnJheSh2YWwpKVxufSk7XG5jb25zdCBTZW5kZXJTaWduZWRUcmFuc2FjdGlvbiA9IGJjcy5zdHJ1Y3QoXCJTZW5kZXJTaWduZWRUcmFuc2FjdGlvblwiLCB7XG4gIGludGVudE1lc3NhZ2U6IEludGVudE1lc3NhZ2UoVHJhbnNhY3Rpb25EYXRhKSxcbiAgdHhTaWduYXR1cmVzOiBiY3MudmVjdG9yKGJhc2U2NFN0cmluZylcbn0pO1xuY29uc3QgU2VuZGVyU2lnbmVkRGF0YSA9IGJjcy52ZWN0b3IoU2VuZGVyU2lnbmVkVHJhbnNhY3Rpb24sIHtcbiAgbmFtZTogXCJTZW5kZXJTaWduZWREYXRhXCJcbn0pO1xuY29uc3Qgc3VpQmNzID0ge1xuICAuLi5iY3MsXG4gIFU4OiBiY3MudTgoKSxcbiAgVTE2OiBiY3MudTE2KCksXG4gIFUzMjogYmNzLnUzMigpLFxuICBVNjQ6IGJjcy51NjQoKSxcbiAgVTEyODogYmNzLnUxMjgoKSxcbiAgVTI1NjogYmNzLnUyNTYoKSxcbiAgVUxFQjEyODogYmNzLnVsZWIxMjgoKSxcbiAgQm9vbDogYmNzLmJvb2woKSxcbiAgU3RyaW5nOiBiY3Muc3RyaW5nKCksXG4gIEFkZHJlc3MsXG4gIEFyZ3VtZW50LFxuICBDYWxsQXJnLFxuICBDb21wcmVzc2VkU2lnbmF0dXJlLFxuICBHYXNEYXRhLFxuICBNdWx0aVNpZyxcbiAgTXVsdGlTaWdQa01hcCxcbiAgTXVsdGlTaWdQdWJsaWNLZXksXG4gIE9iamVjdEFyZyxcbiAgT2JqZWN0RGlnZXN0LFxuICBQcm9ncmFtbWFibGVNb3ZlQ2FsbCxcbiAgUHJvZ3JhbW1hYmxlVHJhbnNhY3Rpb24sXG4gIFB1YmxpY0tleSxcbiAgU2VuZGVyU2lnbmVkRGF0YSxcbiAgU2VuZGVyU2lnbmVkVHJhbnNhY3Rpb24sXG4gIFNoYXJlZE9iamVjdFJlZixcbiAgU3RydWN0VGFnLFxuICBTdWlPYmplY3RSZWYsXG4gIFRyYW5zYWN0aW9uLFxuICBUcmFuc2FjdGlvbkRhdGEsXG4gIFRyYW5zYWN0aW9uRGF0YVYxLFxuICBUcmFuc2FjdGlvbkV4cGlyYXRpb24sXG4gIFRyYW5zYWN0aW9uS2luZCxcbiAgVHlwZVRhZyxcbiAgLy8gcHJlc2VydmUgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgd2l0aCBvbGQgYmNzIGV4cG9ydFxuICBzZXI6IGJjc1JlZ2lzdHJ5LnNlci5iaW5kKGJjc1JlZ2lzdHJ5KSxcbiAgZGU6IGJjc1JlZ2lzdHJ5LmRlLmJpbmQoYmNzUmVnaXN0cnkpLFxuICBnZXRUeXBlSW50ZXJmYWNlOiBiY3NSZWdpc3RyeS5nZXRUeXBlSW50ZXJmYWNlLmJpbmQoYmNzUmVnaXN0cnkpLFxuICBoYXNUeXBlOiBiY3NSZWdpc3RyeS5oYXNUeXBlLmJpbmQoYmNzUmVnaXN0cnkpLFxuICBwYXJzZVR5cGVOYW1lOiBiY3NSZWdpc3RyeS5wYXJzZVR5cGVOYW1lLmJpbmQoYmNzUmVnaXN0cnkpLFxuICByZWdpc3RlckFkZHJlc3NUeXBlOiBiY3NSZWdpc3RyeS5yZWdpc3RlckFkZHJlc3NUeXBlLmJpbmQoYmNzUmVnaXN0cnkpLFxuICByZWdpc3RlckFsaWFzOiBiY3NSZWdpc3RyeS5yZWdpc3RlckFsaWFzLmJpbmQoYmNzUmVnaXN0cnkpLFxuICByZWdpc3RlckJjc1R5cGU6IGJjc1JlZ2lzdHJ5LnJlZ2lzdGVyQmNzVHlwZS5iaW5kKGJjc1JlZ2lzdHJ5KSxcbiAgcmVnaXN0ZXJFbnVtVHlwZTogYmNzUmVnaXN0cnkucmVnaXN0ZXJFbnVtVHlwZS5iaW5kKGJjc1JlZ2lzdHJ5KSxcbiAgcmVnaXN0ZXJTdHJ1Y3RUeXBlOiBiY3NSZWdpc3RyeS5yZWdpc3RlclN0cnVjdFR5cGUuYmluZChiY3NSZWdpc3RyeSksXG4gIHJlZ2lzdGVyVHlwZTogYmNzUmVnaXN0cnkucmVnaXN0ZXJUeXBlLmJpbmQoYmNzUmVnaXN0cnkpLFxuICB0eXBlczogYmNzUmVnaXN0cnkudHlwZXNcbn07XG5iY3NSZWdpc3RyeS5yZWdpc3RlckJjc1R5cGUoXCJ1dGY4c3RyaW5nXCIsICgpID0+IGJjcy5zdHJpbmcoeyBuYW1lOiBcInV0ZjhzdHJpbmdcIiB9KSk7XG5iY3NSZWdpc3RyeS5yZWdpc3RlckJjc1R5cGUoXCJ1bnNhZmVfdTY0XCIsICgpID0+IHVuc2FmZV91NjQoKSk7XG5iY3NSZWdpc3RyeS5yZWdpc3RlckJjc1R5cGUoXCJlbnVtS2luZFwiLCAoVCkgPT4gZW51bUtpbmQoVCkpO1xuW1xuICBBZGRyZXNzLFxuICBBcmd1bWVudCxcbiAgQ2FsbEFyZyxcbiAgQ29tcHJlc3NlZFNpZ25hdHVyZSxcbiAgR2FzRGF0YSxcbiAgTXVsdGlTaWcsXG4gIE11bHRpU2lnUGtNYXAsXG4gIE11bHRpU2lnUHVibGljS2V5LFxuICBPYmplY3RBcmcsXG4gIE9iamVjdERpZ2VzdCxcbiAgUHJvZ3JhbW1hYmxlTW92ZUNhbGwsXG4gIFByb2dyYW1tYWJsZVRyYW5zYWN0aW9uLFxuICBQdWJsaWNLZXksXG4gIFNlbmRlclNpZ25lZERhdGEsXG4gIFNoYXJlZE9iamVjdFJlZixcbiAgU3RydWN0VGFnLFxuICBTdWlPYmplY3RSZWYsXG4gIFRyYW5zYWN0aW9uLFxuICBUcmFuc2FjdGlvbkRhdGEsXG4gIFRyYW5zYWN0aW9uRGF0YVYxLFxuICBUcmFuc2FjdGlvbkV4cGlyYXRpb24sXG4gIFRyYW5zYWN0aW9uS2luZCxcbiAgVHlwZVRhZ1xuXS5mb3JFYWNoKCh0eXBlKSA9PiB7XG4gIGJjc1JlZ2lzdHJ5LnJlZ2lzdGVyQmNzVHlwZSh0eXBlLm5hbWUsICgpID0+IHR5cGUpO1xufSk7XG5leHBvcnQge1xuICBUeXBlVGFnU2VyaWFsaXplcjIgYXMgVHlwZVRhZ1NlcmlhbGl6ZXIsXG4gIHN1aUJjcyBhcyBiY3MsXG4gIGJjc1JlZ2lzdHJ5LFxuICBpc1B1cmVBcmdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/type-tag-serializer.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/bcs/type-tag-serializer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeTagSerializer: () => (/* binding */ TypeTagSerializer)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/utils.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n\n\nconst VECTOR_REGEX = /^vector<(.+)>$/;\nconst STRUCT_REGEX = /^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;\nclass TypeTagSerializer {\n  static parseFromStr(str, normalizeAddress = false) {\n    if (str === \"address\") {\n      return { address: null };\n    } else if (str === \"bool\") {\n      return { bool: null };\n    } else if (str === \"u8\") {\n      return { u8: null };\n    } else if (str === \"u16\") {\n      return { u16: null };\n    } else if (str === \"u32\") {\n      return { u32: null };\n    } else if (str === \"u64\") {\n      return { u64: null };\n    } else if (str === \"u128\") {\n      return { u128: null };\n    } else if (str === \"u256\") {\n      return { u256: null };\n    } else if (str === \"signer\") {\n      return { signer: null };\n    }\n    const vectorMatch = str.match(VECTOR_REGEX);\n    if (vectorMatch) {\n      return {\n        vector: TypeTagSerializer.parseFromStr(vectorMatch[1], normalizeAddress)\n      };\n    }\n    const structMatch = str.match(STRUCT_REGEX);\n    if (structMatch) {\n      const address = normalizeAddress ? (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_0__.normalizeSuiAddress)(structMatch[1]) : structMatch[1];\n      return {\n        struct: {\n          address,\n          module: structMatch[2],\n          name: structMatch[3],\n          typeParams: structMatch[5] === void 0 ? [] : TypeTagSerializer.parseStructTypeArgs(structMatch[5], normalizeAddress)\n        }\n      };\n    }\n    throw new Error(`Encountered unexpected token when parsing type args for ${str}`);\n  }\n  static parseStructTypeArgs(str, normalizeAddress = false) {\n    return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.splitGenericParameters)(str).map(\n      (tok) => TypeTagSerializer.parseFromStr(tok, normalizeAddress)\n    );\n  }\n  static tagToString(tag) {\n    if (\"bool\" in tag) {\n      return \"bool\";\n    }\n    if (\"u8\" in tag) {\n      return \"u8\";\n    }\n    if (\"u16\" in tag) {\n      return \"u16\";\n    }\n    if (\"u32\" in tag) {\n      return \"u32\";\n    }\n    if (\"u64\" in tag) {\n      return \"u64\";\n    }\n    if (\"u128\" in tag) {\n      return \"u128\";\n    }\n    if (\"u256\" in tag) {\n      return \"u256\";\n    }\n    if (\"address\" in tag) {\n      return \"address\";\n    }\n    if (\"signer\" in tag) {\n      return \"signer\";\n    }\n    if (\"vector\" in tag) {\n      return `vector<${TypeTagSerializer.tagToString(tag.vector)}>`;\n    }\n    if (\"struct\" in tag) {\n      const struct = tag.struct;\n      const typeParams = struct.typeParams.map(TypeTagSerializer.tagToString).join(\", \");\n      return `${struct.address}::${struct.module}::${struct.name}${typeParams ? `<${typeParams}>` : \"\"}`;\n    }\n    throw new Error(\"Invalid TypeTag\");\n  }\n}\n\n//# sourceMappingURL=type-tag-serializer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2Jjcy90eXBlLXRhZy1zZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNPO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsTUFBTTtBQUNOLGVBQWU7QUFDZixNQUFNO0FBQ04sZUFBZTtBQUNmLE1BQU07QUFDTixlQUFlO0FBQ2YsTUFBTTtBQUNOLGVBQWU7QUFDZixNQUFNO0FBQ04sZUFBZTtBQUNmLE1BQU07QUFDTixlQUFlO0FBQ2YsTUFBTTtBQUNOLGVBQWU7QUFDZixNQUFNO0FBQ04sZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx3RUFBbUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0VBQStFLElBQUk7QUFDbkY7QUFDQTtBQUNBLFdBQVcsbUVBQXNCO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMENBQTBDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWUsSUFBSSxjQUFjLElBQUksWUFBWSxFQUFFLGlCQUFpQixXQUFXLFFBQVE7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS9iY3MvdHlwZS10YWctc2VyaWFsaXplci5qcz83ZDYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNwbGl0R2VuZXJpY1BhcmFtZXRlcnMgfSBmcm9tIFwiQG15c3Rlbi9iY3NcIjtcbmltcG9ydCB7IG5vcm1hbGl6ZVN1aUFkZHJlc3MgfSBmcm9tIFwiLi4vdXRpbHMvc3VpLXR5cGVzLmpzXCI7XG5jb25zdCBWRUNUT1JfUkVHRVggPSAvXnZlY3RvcjwoLispPiQvO1xuY29uc3QgU1RSVUNUX1JFR0VYID0gL14oW146XSspOjooW146XSspOjooW148XSspKDwoLispPik/LztcbmNsYXNzIFR5cGVUYWdTZXJpYWxpemVyIHtcbiAgc3RhdGljIHBhcnNlRnJvbVN0cihzdHIsIG5vcm1hbGl6ZUFkZHJlc3MgPSBmYWxzZSkge1xuICAgIGlmIChzdHIgPT09IFwiYWRkcmVzc1wiKSB7XG4gICAgICByZXR1cm4geyBhZGRyZXNzOiBudWxsIH07XG4gICAgfSBlbHNlIGlmIChzdHIgPT09IFwiYm9vbFwiKSB7XG4gICAgICByZXR1cm4geyBib29sOiBudWxsIH07XG4gICAgfSBlbHNlIGlmIChzdHIgPT09IFwidThcIikge1xuICAgICAgcmV0dXJuIHsgdTg6IG51bGwgfTtcbiAgICB9IGVsc2UgaWYgKHN0ciA9PT0gXCJ1MTZcIikge1xuICAgICAgcmV0dXJuIHsgdTE2OiBudWxsIH07XG4gICAgfSBlbHNlIGlmIChzdHIgPT09IFwidTMyXCIpIHtcbiAgICAgIHJldHVybiB7IHUzMjogbnVsbCB9O1xuICAgIH0gZWxzZSBpZiAoc3RyID09PSBcInU2NFwiKSB7XG4gICAgICByZXR1cm4geyB1NjQ6IG51bGwgfTtcbiAgICB9IGVsc2UgaWYgKHN0ciA9PT0gXCJ1MTI4XCIpIHtcbiAgICAgIHJldHVybiB7IHUxMjg6IG51bGwgfTtcbiAgICB9IGVsc2UgaWYgKHN0ciA9PT0gXCJ1MjU2XCIpIHtcbiAgICAgIHJldHVybiB7IHUyNTY6IG51bGwgfTtcbiAgICB9IGVsc2UgaWYgKHN0ciA9PT0gXCJzaWduZXJcIikge1xuICAgICAgcmV0dXJuIHsgc2lnbmVyOiBudWxsIH07XG4gICAgfVxuICAgIGNvbnN0IHZlY3Rvck1hdGNoID0gc3RyLm1hdGNoKFZFQ1RPUl9SRUdFWCk7XG4gICAgaWYgKHZlY3Rvck1hdGNoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICB2ZWN0b3I6IFR5cGVUYWdTZXJpYWxpemVyLnBhcnNlRnJvbVN0cih2ZWN0b3JNYXRjaFsxXSwgbm9ybWFsaXplQWRkcmVzcylcbiAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHN0cnVjdE1hdGNoID0gc3RyLm1hdGNoKFNUUlVDVF9SRUdFWCk7XG4gICAgaWYgKHN0cnVjdE1hdGNoKSB7XG4gICAgICBjb25zdCBhZGRyZXNzID0gbm9ybWFsaXplQWRkcmVzcyA/IG5vcm1hbGl6ZVN1aUFkZHJlc3Moc3RydWN0TWF0Y2hbMV0pIDogc3RydWN0TWF0Y2hbMV07XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdHJ1Y3Q6IHtcbiAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICAgIG1vZHVsZTogc3RydWN0TWF0Y2hbMl0sXG4gICAgICAgICAgbmFtZTogc3RydWN0TWF0Y2hbM10sXG4gICAgICAgICAgdHlwZVBhcmFtczogc3RydWN0TWF0Y2hbNV0gPT09IHZvaWQgMCA/IFtdIDogVHlwZVRhZ1NlcmlhbGl6ZXIucGFyc2VTdHJ1Y3RUeXBlQXJncyhzdHJ1Y3RNYXRjaFs1XSwgbm9ybWFsaXplQWRkcmVzcylcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBFbmNvdW50ZXJlZCB1bmV4cGVjdGVkIHRva2VuIHdoZW4gcGFyc2luZyB0eXBlIGFyZ3MgZm9yICR7c3RyfWApO1xuICB9XG4gIHN0YXRpYyBwYXJzZVN0cnVjdFR5cGVBcmdzKHN0ciwgbm9ybWFsaXplQWRkcmVzcyA9IGZhbHNlKSB7XG4gICAgcmV0dXJuIHNwbGl0R2VuZXJpY1BhcmFtZXRlcnMoc3RyKS5tYXAoXG4gICAgICAodG9rKSA9PiBUeXBlVGFnU2VyaWFsaXplci5wYXJzZUZyb21TdHIodG9rLCBub3JtYWxpemVBZGRyZXNzKVxuICAgICk7XG4gIH1cbiAgc3RhdGljIHRhZ1RvU3RyaW5nKHRhZykge1xuICAgIGlmIChcImJvb2xcIiBpbiB0YWcpIHtcbiAgICAgIHJldHVybiBcImJvb2xcIjtcbiAgICB9XG4gICAgaWYgKFwidThcIiBpbiB0YWcpIHtcbiAgICAgIHJldHVybiBcInU4XCI7XG4gICAgfVxuICAgIGlmIChcInUxNlwiIGluIHRhZykge1xuICAgICAgcmV0dXJuIFwidTE2XCI7XG4gICAgfVxuICAgIGlmIChcInUzMlwiIGluIHRhZykge1xuICAgICAgcmV0dXJuIFwidTMyXCI7XG4gICAgfVxuICAgIGlmIChcInU2NFwiIGluIHRhZykge1xuICAgICAgcmV0dXJuIFwidTY0XCI7XG4gICAgfVxuICAgIGlmIChcInUxMjhcIiBpbiB0YWcpIHtcbiAgICAgIHJldHVybiBcInUxMjhcIjtcbiAgICB9XG4gICAgaWYgKFwidTI1NlwiIGluIHRhZykge1xuICAgICAgcmV0dXJuIFwidTI1NlwiO1xuICAgIH1cbiAgICBpZiAoXCJhZGRyZXNzXCIgaW4gdGFnKSB7XG4gICAgICByZXR1cm4gXCJhZGRyZXNzXCI7XG4gICAgfVxuICAgIGlmIChcInNpZ25lclwiIGluIHRhZykge1xuICAgICAgcmV0dXJuIFwic2lnbmVyXCI7XG4gICAgfVxuICAgIGlmIChcInZlY3RvclwiIGluIHRhZykge1xuICAgICAgcmV0dXJuIGB2ZWN0b3I8JHtUeXBlVGFnU2VyaWFsaXplci50YWdUb1N0cmluZyh0YWcudmVjdG9yKX0+YDtcbiAgICB9XG4gICAgaWYgKFwic3RydWN0XCIgaW4gdGFnKSB7XG4gICAgICBjb25zdCBzdHJ1Y3QgPSB0YWcuc3RydWN0O1xuICAgICAgY29uc3QgdHlwZVBhcmFtcyA9IHN0cnVjdC50eXBlUGFyYW1zLm1hcChUeXBlVGFnU2VyaWFsaXplci50YWdUb1N0cmluZykuam9pbihcIiwgXCIpO1xuICAgICAgcmV0dXJuIGAke3N0cnVjdC5hZGRyZXNzfTo6JHtzdHJ1Y3QubW9kdWxlfTo6JHtzdHJ1Y3QubmFtZX0ke3R5cGVQYXJhbXMgPyBgPCR7dHlwZVBhcmFtc30+YCA6IFwiXCJ9YDtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBUeXBlVGFnXCIpO1xuICB9XG59XG5leHBvcnQge1xuICBUeXBlVGFnU2VyaWFsaXplclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGUtdGFnLXNlcmlhbGl6ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/type-tag-serializer.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/client.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/client/client.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUI_CLIENT_BRAND: () => (/* binding */ SUI_CLIENT_BRAND),\n/* harmony export */   SuiClient: () => (/* binding */ SuiClient),\n/* harmony export */   isSuiClient: () => (/* binding */ isSuiClient)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var _transactions_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../transactions/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlock.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _utils_suins_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/suins.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/suins.js\");\n/* harmony import */ var _http_transport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http-transport.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/http-transport.js\");\n\n\n\n\n\nconst SUI_CLIENT_BRAND = Symbol.for(\"@mysten/SuiClient\");\nfunction isSuiClient(client) {\n  return typeof client === \"object\" && client !== null && client[SUI_CLIENT_BRAND] === true;\n}\nclass SuiClient {\n  get [SUI_CLIENT_BRAND]() {\n    return true;\n  }\n  /**\n   * Establish a connection to a Sui RPC endpoint\n   *\n   * @param options configuration options for the API Client\n   */\n  constructor(options) {\n    this.transport = options.transport ?? new _http_transport_js__WEBPACK_IMPORTED_MODULE_0__.SuiHTTPTransport({ url: options.url });\n  }\n  async getRpcApiVersion() {\n    const resp = await this.transport.request({\n      method: \"rpc.discover\",\n      params: []\n    });\n    return resp.info.version;\n  }\n  /**\n   * Get all Coin<`coin_type`> objects owned by an address.\n   */\n  async getCoins(input) {\n    if (!input.owner || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiAddress)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiAddress)(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getCoins\",\n      params: [input.owner, input.coinType, input.cursor, input.limit]\n    });\n  }\n  /**\n   * Get all Coin objects owned by an address.\n   */\n  async getAllCoins(input) {\n    if (!input.owner || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiAddress)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiAddress)(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getAllCoins\",\n      params: [input.owner, input.cursor, input.limit]\n    });\n  }\n  /**\n   * Get the total coin balance for one coin type, owned by the address owner.\n   */\n  async getBalance(input) {\n    if (!input.owner || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiAddress)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiAddress)(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getBalance\",\n      params: [input.owner, input.coinType]\n    });\n  }\n  /**\n   * Get the total coin balance for all coin types, owned by the address owner.\n   */\n  async getAllBalances(input) {\n    if (!input.owner || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiAddress)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiAddress)(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({ method: \"suix_getAllBalances\", params: [input.owner] });\n  }\n  /**\n   * Fetch CoinMetadata for a given coin type\n   */\n  async getCoinMetadata(input) {\n    return await this.transport.request({\n      method: \"suix_getCoinMetadata\",\n      params: [input.coinType]\n    });\n  }\n  /**\n   *  Fetch total supply for a coin\n   */\n  async getTotalSupply(input) {\n    return await this.transport.request({\n      method: \"suix_getTotalSupply\",\n      params: [input.coinType]\n    });\n  }\n  /**\n   * Invoke any RPC method\n   * @param method the method to be invoked\n   * @param args the arguments to be passed to the RPC request\n   */\n  async call(method, params) {\n    return await this.transport.request({ method, params });\n  }\n  /**\n   * Get Move function argument types like read, write and full access\n   */\n  async getMoveFunctionArgTypes(input) {\n    return await this.transport.request({\n      method: \"sui_getMoveFunctionArgTypes\",\n      params: [input.package, input.module, input.function]\n    });\n  }\n  /**\n   * Get a map from module name to\n   * structured representations of Move modules\n   */\n  async getNormalizedMoveModulesByPackage(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveModulesByPackage\",\n      params: [input.package]\n    });\n  }\n  /**\n   * Get a structured representation of Move module\n   */\n  async getNormalizedMoveModule(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveModule\",\n      params: [input.package, input.module]\n    });\n  }\n  /**\n   * Get a structured representation of Move function\n   */\n  async getNormalizedMoveFunction(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveFunction\",\n      params: [input.package, input.module, input.function]\n    });\n  }\n  /**\n   * Get a structured representation of Move struct\n   */\n  async getNormalizedMoveStruct(input) {\n    return await this.transport.request({\n      method: \"sui_getNormalizedMoveStruct\",\n      params: [input.package, input.module, input.struct]\n    });\n  }\n  /**\n   * Get all objects owned by an address\n   */\n  async getOwnedObjects(input) {\n    if (!input.owner || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiAddress)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiAddress)(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({\n      method: \"suix_getOwnedObjects\",\n      params: [\n        input.owner,\n        {\n          filter: input.filter,\n          options: input.options\n        },\n        input.cursor,\n        input.limit\n      ]\n    });\n  }\n  /**\n   * Get details about an object\n   */\n  async getObject(input) {\n    if (!input.id || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiObjectId)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiObjectId)(input.id))) {\n      throw new Error(\"Invalid Sui Object id\");\n    }\n    return await this.transport.request({\n      method: \"sui_getObject\",\n      params: [input.id, input.options]\n    });\n  }\n  async tryGetPastObject(input) {\n    return await this.transport.request({\n      method: \"sui_tryGetPastObject\",\n      params: [input.id, input.version, input.options]\n    });\n  }\n  /**\n   * Batch get details about a list of objects. If any of the object ids are duplicates the call will fail\n   */\n  async multiGetObjects(input) {\n    input.ids.forEach((id) => {\n      if (!id || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiObjectId)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiObjectId)(id))) {\n        throw new Error(`Invalid Sui Object id ${id}`);\n      }\n    });\n    const hasDuplicates = input.ids.length !== new Set(input.ids).size;\n    if (hasDuplicates) {\n      throw new Error(`Duplicate object ids in batch call ${input.ids}`);\n    }\n    return await this.transport.request({\n      method: \"sui_multiGetObjects\",\n      params: [input.ids, input.options]\n    });\n  }\n  /**\n   * Get transaction blocks for a given query criteria\n   */\n  async queryTransactionBlocks(input) {\n    return await this.transport.request({\n      method: \"suix_queryTransactionBlocks\",\n      params: [\n        {\n          filter: input.filter,\n          options: input.options\n        },\n        input.cursor,\n        input.limit,\n        (input.order || \"descending\") === \"descending\"\n      ]\n    });\n  }\n  async getTransactionBlock(input) {\n    if (!(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidTransactionDigest)(input.digest)) {\n      throw new Error(\"Invalid Transaction digest\");\n    }\n    return await this.transport.request({\n      method: \"sui_getTransactionBlock\",\n      params: [input.digest, input.options]\n    });\n  }\n  async multiGetTransactionBlocks(input) {\n    input.digests.forEach((d) => {\n      if (!(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidTransactionDigest)(d)) {\n        throw new Error(`Invalid Transaction digest ${d}`);\n      }\n    });\n    const hasDuplicates = input.digests.length !== new Set(input.digests).size;\n    if (hasDuplicates) {\n      throw new Error(`Duplicate digests in batch call ${input.digests}`);\n    }\n    return await this.transport.request({\n      method: \"sui_multiGetTransactionBlocks\",\n      params: [input.digests, input.options]\n    });\n  }\n  async executeTransactionBlock(input) {\n    return await this.transport.request({\n      method: \"sui_executeTransactionBlock\",\n      params: [\n        typeof input.transactionBlock === \"string\" ? input.transactionBlock : (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.toB64)(input.transactionBlock),\n        Array.isArray(input.signature) ? input.signature : [input.signature],\n        input.options,\n        input.requestType\n      ]\n    });\n  }\n  async signAndExecuteTransactionBlock({\n    transactionBlock,\n    signer,\n    ...input\n  }) {\n    let transactionBytes;\n    if (transactionBlock instanceof Uint8Array) {\n      transactionBytes = transactionBlock;\n    } else {\n      transactionBlock.setSenderIfNotSet(signer.toSuiAddress());\n      transactionBytes = await transactionBlock.build({ client: this });\n    }\n    const { signature, bytes } = await signer.signTransactionBlock(transactionBytes);\n    return this.executeTransactionBlock({\n      transactionBlock: bytes,\n      signature,\n      ...input\n    });\n  }\n  /**\n   * Get total number of transactions\n   */\n  async getTotalTransactionBlocks() {\n    const resp = await this.transport.request({\n      method: \"sui_getTotalTransactionBlocks\",\n      params: []\n    });\n    return BigInt(resp);\n  }\n  /**\n   * Getting the reference gas price for the network\n   */\n  async getReferenceGasPrice() {\n    const resp = await this.transport.request({\n      method: \"suix_getReferenceGasPrice\",\n      params: []\n    });\n    return BigInt(resp);\n  }\n  /**\n   * Return the delegated stakes for an address\n   */\n  async getStakes(input) {\n    if (!input.owner || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiAddress)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiAddress)(input.owner))) {\n      throw new Error(\"Invalid Sui address\");\n    }\n    return await this.transport.request({ method: \"suix_getStakes\", params: [input.owner] });\n  }\n  /**\n   * Return the delegated stakes queried by id.\n   */\n  async getStakesByIds(input) {\n    input.stakedSuiIds.forEach((id) => {\n      if (!id || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiObjectId)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiObjectId)(id))) {\n        throw new Error(`Invalid Sui Stake id ${id}`);\n      }\n    });\n    return await this.transport.request({\n      method: \"suix_getStakesByIds\",\n      params: [input.stakedSuiIds]\n    });\n  }\n  /**\n   * Return the latest system state content.\n   */\n  async getLatestSuiSystemState() {\n    return await this.transport.request({ method: \"suix_getLatestSuiSystemState\", params: [] });\n  }\n  /**\n   * Get events for a given query criteria\n   */\n  async queryEvents(input) {\n    return await this.transport.request({\n      method: \"suix_queryEvents\",\n      params: [\n        input.query,\n        input.cursor,\n        input.limit,\n        (input.order || \"descending\") === \"descending\"\n      ]\n    });\n  }\n  /**\n   * Subscribe to get notifications whenever an event matching the filter occurs\n   */\n  async subscribeEvent(input) {\n    return this.transport.subscribe({\n      method: \"suix_subscribeEvent\",\n      unsubscribe: \"suix_unsubscribeEvent\",\n      params: [input.filter],\n      onMessage: input.onMessage\n    });\n  }\n  async subscribeTransaction(input) {\n    return this.transport.subscribe({\n      method: \"suix_subscribeTransaction\",\n      unsubscribe: \"suix_unsubscribeTransaction\",\n      params: [input.filter],\n      onMessage: input.onMessage\n    });\n  }\n  /**\n   * Runs the transaction block in dev-inspect mode. Which allows for nearly any\n   * transaction (or Move call) with any arguments. Detailed results are\n   * provided, including both the transaction effects and any return values.\n   */\n  async devInspectTransactionBlock(input) {\n    let devInspectTxBytes;\n    if ((0,_transactions_index_js__WEBPACK_IMPORTED_MODULE_3__.isTransactionBlock)(input.transactionBlock)) {\n      input.transactionBlock.setSenderIfNotSet(input.sender);\n      devInspectTxBytes = (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.toB64)(\n        await input.transactionBlock.build({\n          client: this,\n          onlyTransactionKind: true\n        })\n      );\n    } else if (typeof input.transactionBlock === \"string\") {\n      devInspectTxBytes = input.transactionBlock;\n    } else if (input.transactionBlock instanceof Uint8Array) {\n      devInspectTxBytes = (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.toB64)(input.transactionBlock);\n    } else {\n      throw new Error(\"Unknown transaction block format.\");\n    }\n    return await this.transport.request({\n      method: \"sui_devInspectTransactionBlock\",\n      params: [input.sender, devInspectTxBytes, input.gasPrice?.toString(), input.epoch]\n    });\n  }\n  /**\n   * Dry run a transaction block and return the result.\n   */\n  async dryRunTransactionBlock(input) {\n    return await this.transport.request({\n      method: \"sui_dryRunTransactionBlock\",\n      params: [\n        typeof input.transactionBlock === \"string\" ? input.transactionBlock : (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.toB64)(input.transactionBlock)\n      ]\n    });\n  }\n  /**\n   * Return the list of dynamic field objects owned by an object\n   */\n  async getDynamicFields(input) {\n    if (!input.parentId || !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.isValidSuiObjectId)((0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_1__.normalizeSuiObjectId)(input.parentId))) {\n      throw new Error(\"Invalid Sui Object id\");\n    }\n    return await this.transport.request({\n      method: \"suix_getDynamicFields\",\n      params: [input.parentId, input.cursor, input.limit]\n    });\n  }\n  /**\n   * Return the dynamic field object information for a specified object\n   */\n  async getDynamicFieldObject(input) {\n    return await this.transport.request({\n      method: \"suix_getDynamicFieldObject\",\n      params: [input.parentId, input.name]\n    });\n  }\n  /**\n   * Get the sequence number of the latest checkpoint that has been executed\n   */\n  async getLatestCheckpointSequenceNumber() {\n    const resp = await this.transport.request({\n      method: \"sui_getLatestCheckpointSequenceNumber\",\n      params: []\n    });\n    return String(resp);\n  }\n  /**\n   * Returns information about a given checkpoint\n   */\n  async getCheckpoint(input) {\n    return await this.transport.request({ method: \"sui_getCheckpoint\", params: [input.id] });\n  }\n  /**\n   * Returns historical checkpoints paginated\n   */\n  async getCheckpoints(input) {\n    return await this.transport.request({\n      method: \"sui_getCheckpoints\",\n      params: [input.cursor, input?.limit, input.descendingOrder]\n    });\n  }\n  /**\n   * Return the committee information for the asked epoch\n   */\n  async getCommitteeInfo(input) {\n    return await this.transport.request({\n      method: \"suix_getCommitteeInfo\",\n      params: [input?.epoch]\n    });\n  }\n  async getNetworkMetrics() {\n    return await this.transport.request({ method: \"suix_getNetworkMetrics\", params: [] });\n  }\n  async getAddressMetrics() {\n    return await this.transport.request({ method: \"suix_getLatestAddressMetrics\", params: [] });\n  }\n  async getEpochMetrics(input) {\n    return await this.transport.request({\n      method: \"suix_getEpochMetrics\",\n      params: [input?.cursor, input?.limit, input?.descendingOrder]\n    });\n  }\n  async getAllEpochAddressMetrics(input) {\n    return await this.transport.request({\n      method: \"suix_getAllEpochAddressMetrics\",\n      params: [input?.descendingOrder]\n    });\n  }\n  /**\n   * Return the committee information for the asked epoch\n   */\n  async getEpochs(input) {\n    return await this.transport.request({\n      method: \"suix_getEpochs\",\n      params: [input?.cursor, input?.limit, input?.descendingOrder]\n    });\n  }\n  /**\n   * Returns list of top move calls by usage\n   */\n  async getMoveCallMetrics() {\n    return await this.transport.request({ method: \"suix_getMoveCallMetrics\", params: [] });\n  }\n  /**\n   * Return the committee information for the asked epoch\n   */\n  async getCurrentEpoch() {\n    return await this.transport.request({ method: \"suix_getCurrentEpoch\", params: [] });\n  }\n  /**\n   * Return the Validators APYs\n   */\n  async getValidatorsApy() {\n    return await this.transport.request({ method: \"suix_getValidatorsApy\", params: [] });\n  }\n  // TODO: Migrate this to `sui_getChainIdentifier` once it is widely available.\n  async getChainIdentifier() {\n    const checkpoint = await this.getCheckpoint({ id: \"0\" });\n    const bytes = (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.fromB58)(checkpoint.digest);\n    return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_5__.toHEX)(bytes.slice(0, 4));\n  }\n  async resolveNameServiceAddress(input) {\n    return await this.transport.request({\n      method: \"suix_resolveNameServiceAddress\",\n      params: [input.name]\n    });\n  }\n  async resolveNameServiceNames({\n    format = \"dot\",\n    ...input\n  }) {\n    const { nextCursor, hasNextPage, data } = await this.transport.request({\n      method: \"suix_resolveNameServiceNames\",\n      params: [input.address, input.cursor, input.limit]\n    });\n    return {\n      hasNextPage,\n      nextCursor,\n      data: data.map((name) => (0,_utils_suins_js__WEBPACK_IMPORTED_MODULE_6__.normalizeSuiNSName)(name, format))\n    };\n  }\n  async getProtocolConfig(input) {\n    return await this.transport.request({\n      method: \"sui_getProtocolConfig\",\n      params: [input?.version]\n    });\n  }\n  /**\n   * Wait for a transaction block result to be available over the API.\n   * This can be used in conjunction with `executeTransactionBlock` to wait for the transaction to\n   * be available via the API.\n   * This currently polls the `getTransactionBlock` API to check for the transaction.\n   */\n  async waitForTransactionBlock({\n    signal,\n    timeout = 60 * 1e3,\n    pollInterval = 2 * 1e3,\n    ...input\n  }) {\n    const timeoutSignal = AbortSignal.timeout(timeout);\n    const timeoutPromise = new Promise((_, reject) => {\n      timeoutSignal.addEventListener(\"abort\", () => reject(timeoutSignal.reason));\n    });\n    timeoutPromise.catch(() => {\n    });\n    while (!timeoutSignal.aborted) {\n      signal?.throwIfAborted();\n      try {\n        return await this.getTransactionBlock(input);\n      } catch (e) {\n        await Promise.race([\n          new Promise((resolve) => setTimeout(resolve, pollInterval)),\n          timeoutPromise\n        ]);\n      }\n    }\n    timeoutSignal.throwIfAborted();\n    throw new Error(\"Unexpected error while waiting for transaction block.\");\n  }\n}\n\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/client.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/errors.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/client/errors.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcError: () => (/* binding */ JsonRpcError),\n/* harmony export */   SuiHTTPStatusError: () => (/* binding */ SuiHTTPStatusError),\n/* harmony export */   SuiHTTPTransportError: () => (/* binding */ SuiHTTPTransportError)\n/* harmony export */ });\nconst CODE_TO_ERROR_TYPE = {\n  \"-32700\": \"ParseError\",\n  \"-32600\": \"InvalidRequest\",\n  \"-32601\": \"MethodNotFound\",\n  \"-32602\": \"InvalidParams\",\n  \"-32603\": \"InternalError\"\n};\nclass SuiHTTPTransportError extends Error {\n}\nclass JsonRpcError extends SuiHTTPTransportError {\n  constructor(message, code) {\n    super(message);\n    this.code = code;\n    this.type = CODE_TO_ERROR_TYPE[code] ?? \"ServerError\";\n  }\n}\nclass SuiHTTPStatusError extends SuiHTTPTransportError {\n  constructor(message, status, statusText) {\n    super(message);\n    this.status = status;\n    this.statusText = statusText;\n  }\n}\n\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NsaWVudC9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NsaWVudC9lcnJvcnMuanM/NDZiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDT0RFX1RPX0VSUk9SX1RZUEUgPSB7XG4gIFwiLTMyNzAwXCI6IFwiUGFyc2VFcnJvclwiLFxuICBcIi0zMjYwMFwiOiBcIkludmFsaWRSZXF1ZXN0XCIsXG4gIFwiLTMyNjAxXCI6IFwiTWV0aG9kTm90Rm91bmRcIixcbiAgXCItMzI2MDJcIjogXCJJbnZhbGlkUGFyYW1zXCIsXG4gIFwiLTMyNjAzXCI6IFwiSW50ZXJuYWxFcnJvclwiXG59O1xuY2xhc3MgU3VpSFRUUFRyYW5zcG9ydEVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuY2xhc3MgSnNvblJwY0Vycm9yIGV4dGVuZHMgU3VpSFRUUFRyYW5zcG9ydEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgdGhpcy50eXBlID0gQ09ERV9UT19FUlJPUl9UWVBFW2NvZGVdID8/IFwiU2VydmVyRXJyb3JcIjtcbiAgfVxufVxuY2xhc3MgU3VpSFRUUFN0YXR1c0Vycm9yIGV4dGVuZHMgU3VpSFRUUFRyYW5zcG9ydEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZSwgc3RhdHVzLCBzdGF0dXNUZXh0KSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICAgdGhpcy5zdGF0dXNUZXh0ID0gc3RhdHVzVGV4dDtcbiAgfVxufVxuZXhwb3J0IHtcbiAgSnNvblJwY0Vycm9yLFxuICBTdWlIVFRQU3RhdHVzRXJyb3IsXG4gIFN1aUhUVFBUcmFuc3BvcnRFcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/errors.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/http-transport.js":
/*!***************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/client/http-transport.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SuiHTTPTransport: () => (/* binding */ SuiHTTPTransport)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/version.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/errors.js\");\n/* harmony import */ var _rpc_websocket_client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rpc-websocket-client.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/rpc-websocket-client.js\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar _requestId, _options, _websocketClient, _getWebsocketClient, getWebsocketClient_fn;\n\n\n\nclass SuiHTTPTransport {\n  constructor(options) {\n    __privateAdd(this, _getWebsocketClient);\n    __privateAdd(this, _requestId, 0);\n    __privateAdd(this, _options, void 0);\n    __privateAdd(this, _websocketClient, void 0);\n    __privateSet(this, _options, options);\n  }\n  fetch(input, init) {\n    const fetch = __privateGet(this, _options).fetch ?? globalThis.fetch;\n    if (!fetch) {\n      throw new Error(\n        \"The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.\"\n      );\n    }\n    return fetch(input, init);\n  }\n  async request(input) {\n    __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);\n    const res = await this.fetch(__privateGet(this, _options).rpc?.url ?? __privateGet(this, _options).url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Client-Sdk-Type\": \"typescript\",\n        \"Client-Sdk-Version\": _version_js__WEBPACK_IMPORTED_MODULE_0__.PACKAGE_VERSION,\n        \"Client-Target-Api-Version\": _version_js__WEBPACK_IMPORTED_MODULE_0__.TARGETED_RPC_VERSION,\n        ...__privateGet(this, _options).rpc?.headers\n      },\n      body: JSON.stringify({\n        jsonrpc: \"2.0\",\n        id: __privateGet(this, _requestId),\n        method: input.method,\n        params: input.params\n      })\n    });\n    if (!res.ok) {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.SuiHTTPStatusError(\n        `Unexpected status code: ${res.status}`,\n        res.status,\n        res.statusText\n      );\n    }\n    const data = await res.json();\n    if (\"error\" in data && data.error != null) {\n      throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.JsonRpcError(data.error.message, data.error.code);\n    }\n    return data.result;\n  }\n  async subscribe(input) {\n    const unsubscribe = await __privateMethod(this, _getWebsocketClient, getWebsocketClient_fn).call(this).subscribe(input);\n    return async () => !!await unsubscribe();\n  }\n}\n_requestId = new WeakMap();\n_options = new WeakMap();\n_websocketClient = new WeakMap();\n_getWebsocketClient = new WeakSet();\ngetWebsocketClient_fn = function() {\n  if (!__privateGet(this, _websocketClient)) {\n    const WebSocketConstructor = __privateGet(this, _options).WebSocketConstructor ?? globalThis.WebSocket;\n    if (!WebSocketConstructor) {\n      throw new Error(\n        \"The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.\"\n      );\n    }\n    __privateSet(this, _websocketClient, new _rpc_websocket_client_js__WEBPACK_IMPORTED_MODULE_2__.WebsocketClient(\n      __privateGet(this, _options).websocket?.url ?? __privateGet(this, _options).url,\n      {\n        WebSocketConstructor,\n        ...__privateGet(this, _options).websocket\n      }\n    ));\n  }\n  return __privateGet(this, _websocketClient);\n};\n\n//# sourceMappingURL=http-transport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NsaWVudC9odHRwLXRyYW5zcG9ydC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNzRTtBQUNQO0FBQ0g7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHdEQUFlO0FBQzdDLHFDQUFxQyw2REFBb0I7QUFDekQ7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQSxnQkFBZ0IsMERBQWtCO0FBQ2xDLG1DQUFtQyxXQUFXO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvREFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHFFQUFlO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NsaWVudC9odHRwLXRyYW5zcG9ydC5qcz8xMWZmIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2FjY2Vzc0NoZWNrID0gKG9iaiwgbWVtYmVyLCBtc2cpID0+IHtcbiAgaWYgKCFtZW1iZXIuaGFzKG9iaikpXG4gICAgdGhyb3cgVHlwZUVycm9yKFwiQ2Fubm90IFwiICsgbXNnKTtcbn07XG52YXIgX19wcml2YXRlR2V0ID0gKG9iaiwgbWVtYmVyLCBnZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJyZWFkIGZyb20gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgcmV0dXJuIGdldHRlciA/IGdldHRlci5jYWxsKG9iaikgOiBtZW1iZXIuZ2V0KG9iaik7XG59O1xudmFyIF9fcHJpdmF0ZUFkZCA9IChvYmosIG1lbWJlciwgdmFsdWUpID0+IHtcbiAgaWYgKG1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgYWRkIHRoZSBzYW1lIHByaXZhdGUgbWVtYmVyIG1vcmUgdGhhbiBvbmNlXCIpO1xuICBtZW1iZXIgaW5zdGFuY2VvZiBXZWFrU2V0ID8gbWVtYmVyLmFkZChvYmopIDogbWVtYmVyLnNldChvYmosIHZhbHVlKTtcbn07XG52YXIgX19wcml2YXRlU2V0ID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSwgc2V0dGVyKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwid3JpdGUgdG8gcHJpdmF0ZSBmaWVsZFwiKTtcbiAgc2V0dGVyID8gc2V0dGVyLmNhbGwob2JqLCB2YWx1ZSkgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59O1xudmFyIF9fcHJpdmF0ZU1ldGhvZCA9IChvYmosIG1lbWJlciwgbWV0aG9kKSA9PiB7XG4gIF9fYWNjZXNzQ2hlY2sob2JqLCBtZW1iZXIsIFwiYWNjZXNzIHByaXZhdGUgbWV0aG9kXCIpO1xuICByZXR1cm4gbWV0aG9kO1xufTtcbnZhciBfcmVxdWVzdElkLCBfb3B0aW9ucywgX3dlYnNvY2tldENsaWVudCwgX2dldFdlYnNvY2tldENsaWVudCwgZ2V0V2Vic29ja2V0Q2xpZW50X2ZuO1xuaW1wb3J0IHsgUEFDS0FHRV9WRVJTSU9OLCBUQVJHRVRFRF9SUENfVkVSU0lPTiB9IGZyb20gXCIuLi92ZXJzaW9uLmpzXCI7XG5pbXBvcnQgeyBKc29uUnBjRXJyb3IsIFN1aUhUVFBTdGF0dXNFcnJvciB9IGZyb20gXCIuL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgV2Vic29ja2V0Q2xpZW50IH0gZnJvbSBcIi4vcnBjLXdlYnNvY2tldC1jbGllbnQuanNcIjtcbmNsYXNzIFN1aUhUVFBUcmFuc3BvcnQge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9nZXRXZWJzb2NrZXRDbGllbnQpO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfcmVxdWVzdElkLCAwKTtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX29wdGlvbnMsIHZvaWQgMCk7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF93ZWJzb2NrZXRDbGllbnQsIHZvaWQgMCk7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF9vcHRpb25zLCBvcHRpb25zKTtcbiAgfVxuICBmZXRjaChpbnB1dCwgaW5pdCkge1xuICAgIGNvbnN0IGZldGNoID0gX19wcml2YXRlR2V0KHRoaXMsIF9vcHRpb25zKS5mZXRjaCA/PyBnbG9iYWxUaGlzLmZldGNoO1xuICAgIGlmICghZmV0Y2gpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJUaGUgY3VycmVudCBlbnZpcm9ubWVudCBkb2VzIG5vdCBzdXBwb3J0IGZldGNoLCB5b3UgY2FuIHByb3ZpZGUgYSBmZXRjaCBpbXBsZW1lbnRhdGlvbiBpbiB0aGUgb3B0aW9ucyBmb3IgU3VpSFRUUFRyYW5zcG9ydC5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIGZldGNoKGlucHV0LCBpbml0KTtcbiAgfVxuICBhc3luYyByZXF1ZXN0KGlucHV0KSB7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF9yZXF1ZXN0SWQsIF9fcHJpdmF0ZUdldCh0aGlzLCBfcmVxdWVzdElkKSArIDEpO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuZmV0Y2goX19wcml2YXRlR2V0KHRoaXMsIF9vcHRpb25zKS5ycGM/LnVybCA/PyBfX3ByaXZhdGVHZXQodGhpcywgX29wdGlvbnMpLnVybCwge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgIFwiQ2xpZW50LVNkay1UeXBlXCI6IFwidHlwZXNjcmlwdFwiLFxuICAgICAgICBcIkNsaWVudC1TZGstVmVyc2lvblwiOiBQQUNLQUdFX1ZFUlNJT04sXG4gICAgICAgIFwiQ2xpZW50LVRhcmdldC1BcGktVmVyc2lvblwiOiBUQVJHRVRFRF9SUENfVkVSU0lPTixcbiAgICAgICAgLi4uX19wcml2YXRlR2V0KHRoaXMsIF9vcHRpb25zKS5ycGM/LmhlYWRlcnNcbiAgICAgIH0sXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIGlkOiBfX3ByaXZhdGVHZXQodGhpcywgX3JlcXVlc3RJZCksXG4gICAgICAgIG1ldGhvZDogaW5wdXQubWV0aG9kLFxuICAgICAgICBwYXJhbXM6IGlucHV0LnBhcmFtc1xuICAgICAgfSlcbiAgICB9KTtcbiAgICBpZiAoIXJlcy5vaykge1xuICAgICAgdGhyb3cgbmV3IFN1aUhUVFBTdGF0dXNFcnJvcihcbiAgICAgICAgYFVuZXhwZWN0ZWQgc3RhdHVzIGNvZGU6ICR7cmVzLnN0YXR1c31gLFxuICAgICAgICByZXMuc3RhdHVzLFxuICAgICAgICByZXMuc3RhdHVzVGV4dFxuICAgICAgKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgaWYgKFwiZXJyb3JcIiBpbiBkYXRhICYmIGRhdGEuZXJyb3IgIT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEpzb25ScGNFcnJvcihkYXRhLmVycm9yLm1lc3NhZ2UsIGRhdGEuZXJyb3IuY29kZSk7XG4gICAgfVxuICAgIHJldHVybiBkYXRhLnJlc3VsdDtcbiAgfVxuICBhc3luYyBzdWJzY3JpYmUoaW5wdXQpIHtcbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IGF3YWl0IF9fcHJpdmF0ZU1ldGhvZCh0aGlzLCBfZ2V0V2Vic29ja2V0Q2xpZW50LCBnZXRXZWJzb2NrZXRDbGllbnRfZm4pLmNhbGwodGhpcykuc3Vic2NyaWJlKGlucHV0KTtcbiAgICByZXR1cm4gYXN5bmMgKCkgPT4gISFhd2FpdCB1bnN1YnNjcmliZSgpO1xuICB9XG59XG5fcmVxdWVzdElkID0gbmV3IFdlYWtNYXAoKTtcbl9vcHRpb25zID0gbmV3IFdlYWtNYXAoKTtcbl93ZWJzb2NrZXRDbGllbnQgPSBuZXcgV2Vha01hcCgpO1xuX2dldFdlYnNvY2tldENsaWVudCA9IG5ldyBXZWFrU2V0KCk7XG5nZXRXZWJzb2NrZXRDbGllbnRfZm4gPSBmdW5jdGlvbigpIHtcbiAgaWYgKCFfX3ByaXZhdGVHZXQodGhpcywgX3dlYnNvY2tldENsaWVudCkpIHtcbiAgICBjb25zdCBXZWJTb2NrZXRDb25zdHJ1Y3RvciA9IF9fcHJpdmF0ZUdldCh0aGlzLCBfb3B0aW9ucykuV2ViU29ja2V0Q29uc3RydWN0b3IgPz8gZ2xvYmFsVGhpcy5XZWJTb2NrZXQ7XG4gICAgaWYgKCFXZWJTb2NrZXRDb25zdHJ1Y3Rvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcIlRoZSBjdXJyZW50IGVudmlyb25tZW50IGRvZXMgbm90IHN1cHBvcnQgV2ViU29ja2V0LCB5b3UgY2FuIHByb3ZpZGUgYSBXZWJTb2NrZXRDb25zdHJ1Y3RvciBpbiB0aGUgb3B0aW9ucyBmb3IgU3VpSFRUUFRyYW5zcG9ydC5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF93ZWJzb2NrZXRDbGllbnQsIG5ldyBXZWJzb2NrZXRDbGllbnQoXG4gICAgICBfX3ByaXZhdGVHZXQodGhpcywgX29wdGlvbnMpLndlYnNvY2tldD8udXJsID8/IF9fcHJpdmF0ZUdldCh0aGlzLCBfb3B0aW9ucykudXJsLFxuICAgICAge1xuICAgICAgICBXZWJTb2NrZXRDb25zdHJ1Y3RvcixcbiAgICAgICAgLi4uX19wcml2YXRlR2V0KHRoaXMsIF9vcHRpb25zKS53ZWJzb2NrZXRcbiAgICAgIH1cbiAgICApKTtcbiAgfVxuICByZXR1cm4gX19wcml2YXRlR2V0KHRoaXMsIF93ZWJzb2NrZXRDbGllbnQpO1xufTtcbmV4cG9ydCB7XG4gIFN1aUhUVFBUcmFuc3BvcnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLXRyYW5zcG9ydC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/http-transport.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/network.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/client/network.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFullnodeUrl: () => (/* binding */ getFullnodeUrl)\n/* harmony export */ });\nfunction getFullnodeUrl(network) {\n  switch (network) {\n    case \"mainnet\":\n      return \"https://fullnode.mainnet.sui.io:443\";\n    case \"testnet\":\n      return \"https://fullnode.testnet.sui.io:443\";\n    case \"devnet\":\n      return \"https://fullnode.devnet.sui.io:443\";\n    case \"localnet\":\n      return \"http://127.0.0.1:9000\";\n    default:\n      throw new Error(`Unknown network: ${network}`);\n  }\n}\n\n//# sourceMappingURL=network.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NsaWVudC9uZXR3b3JrLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFFBQVE7QUFDbEQ7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NsaWVudC9uZXR3b3JrLmpzP2FkYjciXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gZ2V0RnVsbG5vZGVVcmwobmV0d29yaykge1xuICBzd2l0Y2ggKG5ldHdvcmspIHtcbiAgICBjYXNlIFwibWFpbm5ldFwiOlxuICAgICAgcmV0dXJuIFwiaHR0cHM6Ly9mdWxsbm9kZS5tYWlubmV0LnN1aS5pbzo0NDNcIjtcbiAgICBjYXNlIFwidGVzdG5ldFwiOlxuICAgICAgcmV0dXJuIFwiaHR0cHM6Ly9mdWxsbm9kZS50ZXN0bmV0LnN1aS5pbzo0NDNcIjtcbiAgICBjYXNlIFwiZGV2bmV0XCI6XG4gICAgICByZXR1cm4gXCJodHRwczovL2Z1bGxub2RlLmRldm5ldC5zdWkuaW86NDQzXCI7XG4gICAgY2FzZSBcImxvY2FsbmV0XCI6XG4gICAgICByZXR1cm4gXCJodHRwOi8vMTI3LjAuMC4xOjkwMDBcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIG5ldHdvcms6ICR7bmV0d29ya31gKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgZ2V0RnVsbG5vZGVVcmxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1uZXR3b3JrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/network.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/rpc-websocket-client.js":
/*!*********************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/client/rpc-websocket-client.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLIENT_OPTIONS: () => (/* binding */ DEFAULT_CLIENT_OPTIONS),\n/* harmony export */   WebsocketClient: () => (/* binding */ WebsocketClient)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/errors.js\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateWrapper = (obj, member, setter, getter) => ({\n  set _(value) {\n    __privateSet(obj, member, value, setter);\n  },\n  get _() {\n    return __privateGet(obj, member, getter);\n  }\n});\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar _requestId, _disconnects, _webSocket, _connectionPromise, _subscriptions, _pendingRequests, _setupWebSocket, setupWebSocket_fn, _reconnect, reconnect_fn;\n\nfunction getWebsocketUrl(httpUrl) {\n  const url = new URL(httpUrl);\n  url.protocol = url.protocol.replace(\"http\", \"ws\");\n  return url.toString();\n}\nconst DEFAULT_CLIENT_OPTIONS = {\n  // We fudge the typing because we also check for undefined in the constructor:\n  WebSocketConstructor: typeof WebSocket !== \"undefined\" ? WebSocket : void 0,\n  callTimeout: 3e4,\n  reconnectTimeout: 3e3,\n  maxReconnects: 5\n};\nclass WebsocketClient {\n  constructor(endpoint, options = {}) {\n    __privateAdd(this, _setupWebSocket);\n    __privateAdd(this, _reconnect);\n    __privateAdd(this, _requestId, 0);\n    __privateAdd(this, _disconnects, 0);\n    __privateAdd(this, _webSocket, null);\n    __privateAdd(this, _connectionPromise, null);\n    __privateAdd(this, _subscriptions, /* @__PURE__ */ new Set());\n    __privateAdd(this, _pendingRequests, /* @__PURE__ */ new Map());\n    this.endpoint = endpoint;\n    this.options = { ...DEFAULT_CLIENT_OPTIONS, ...options };\n    if (!this.options.WebSocketConstructor) {\n      throw new Error(\"Missing WebSocket constructor\");\n    }\n    if (this.endpoint.startsWith(\"http\")) {\n      this.endpoint = getWebsocketUrl(this.endpoint);\n    }\n  }\n  async makeRequest(method, params) {\n    const webSocket = await __privateMethod(this, _setupWebSocket, setupWebSocket_fn).call(this);\n    return new Promise((resolve, reject) => {\n      __privateSet(this, _requestId, __privateGet(this, _requestId) + 1);\n      __privateGet(this, _pendingRequests).set(__privateGet(this, _requestId), {\n        resolve,\n        reject,\n        timeout: setTimeout(() => {\n          __privateGet(this, _pendingRequests).delete(__privateGet(this, _requestId));\n          reject(new Error(`Request timeout: ${method}`));\n        }, this.options.callTimeout)\n      });\n      webSocket.send(JSON.stringify({ jsonrpc: \"2.0\", id: __privateGet(this, _requestId), method, params }));\n    }).then(({ error, result }) => {\n      if (error) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.JsonRpcError(error.message, error.code);\n      }\n      return result;\n    });\n  }\n  async subscribe(input) {\n    const subscription = new RpcSubscription(input);\n    __privateGet(this, _subscriptions).add(subscription);\n    await subscription.subscribe(this);\n    return () => subscription.unsubscribe(this);\n  }\n}\n_requestId = new WeakMap();\n_disconnects = new WeakMap();\n_webSocket = new WeakMap();\n_connectionPromise = new WeakMap();\n_subscriptions = new WeakMap();\n_pendingRequests = new WeakMap();\n_setupWebSocket = new WeakSet();\nsetupWebSocket_fn = function() {\n  if (__privateGet(this, _connectionPromise)) {\n    return __privateGet(this, _connectionPromise);\n  }\n  __privateSet(this, _connectionPromise, new Promise((resolve) => {\n    __privateGet(this, _webSocket)?.close();\n    __privateSet(this, _webSocket, new this.options.WebSocketConstructor(this.endpoint));\n    __privateGet(this, _webSocket).addEventListener(\"open\", () => {\n      __privateSet(this, _disconnects, 0);\n      resolve(__privateGet(this, _webSocket));\n    });\n    __privateGet(this, _webSocket).addEventListener(\"close\", () => {\n      __privateWrapper(this, _disconnects)._++;\n      if (__privateGet(this, _disconnects) <= this.options.maxReconnects) {\n        setTimeout(() => {\n          __privateMethod(this, _reconnect, reconnect_fn).call(this);\n        }, this.options.reconnectTimeout);\n      }\n    });\n    __privateGet(this, _webSocket).addEventListener(\"message\", ({ data }) => {\n      let json;\n      try {\n        json = JSON.parse(data);\n      } catch (error) {\n        console.error(new Error(`Failed to parse RPC message: ${data}`, { cause: error }));\n        return;\n      }\n      if (\"id\" in json && json.id != null && __privateGet(this, _pendingRequests).has(json.id)) {\n        const { resolve: resolve2, timeout } = __privateGet(this, _pendingRequests).get(json.id);\n        clearTimeout(timeout);\n        resolve2(json);\n      } else if (\"params\" in json) {\n        const { params } = json;\n        __privateGet(this, _subscriptions).forEach((subscription) => {\n          if (subscription.subscriptionId === params.subscription) {\n            if (params.subscription === subscription.subscriptionId) {\n              subscription.onMessage(params.result);\n            }\n          }\n        });\n      }\n    });\n  }));\n  return __privateGet(this, _connectionPromise);\n};\n_reconnect = new WeakSet();\nreconnect_fn = async function() {\n  __privateGet(this, _webSocket)?.close();\n  __privateSet(this, _connectionPromise, null);\n  return Promise.allSettled(\n    [...__privateGet(this, _subscriptions)].map((subscription) => subscription.subscribe(this))\n  );\n};\nclass RpcSubscription {\n  constructor(input) {\n    this.subscriptionId = null;\n    this.subscribed = false;\n    this.input = input;\n  }\n  onMessage(message) {\n    if (this.subscribed) {\n      this.input.onMessage(message);\n    }\n  }\n  async unsubscribe(client) {\n    const { subscriptionId } = this;\n    this.subscribed = false;\n    if (subscriptionId == null)\n      return false;\n    this.subscriptionId = null;\n    return client.makeRequest(this.input.unsubscribe, [subscriptionId]);\n  }\n  async subscribe(client) {\n    this.subscriptionId = null;\n    this.subscribed = true;\n    const newSubscriptionId = await client.makeRequest(\n      this.input.method,\n      this.input.params\n    );\n    if (this.subscribed) {\n      this.subscriptionId = newSubscriptionId;\n    }\n  }\n}\n\n//# sourceMappingURL=rpc-websocket-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/client/rpc-websocket-client.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/intent.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/cryptography/intent.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppId: () => (/* binding */ AppId),\n/* harmony export */   IntentScope: () => (/* binding */ IntentScope),\n/* harmony export */   IntentVersion: () => (/* binding */ IntentVersion),\n/* harmony export */   messageWithIntent: () => (/* binding */ messageWithIntent)\n/* harmony export */ });\nvar AppId = /* @__PURE__ */ ((AppId2) => {\n  AppId2[AppId2[\"Sui\"] = 0] = \"Sui\";\n  return AppId2;\n})(AppId || {});\nvar IntentVersion = /* @__PURE__ */ ((IntentVersion2) => {\n  IntentVersion2[IntentVersion2[\"V0\"] = 0] = \"V0\";\n  return IntentVersion2;\n})(IntentVersion || {});\nvar IntentScope = /* @__PURE__ */ ((IntentScope2) => {\n  IntentScope2[IntentScope2[\"TransactionData\"] = 0] = \"TransactionData\";\n  IntentScope2[IntentScope2[\"TransactionEffects\"] = 1] = \"TransactionEffects\";\n  IntentScope2[IntentScope2[\"CheckpointSummary\"] = 2] = \"CheckpointSummary\";\n  IntentScope2[IntentScope2[\"PersonalMessage\"] = 3] = \"PersonalMessage\";\n  return IntentScope2;\n})(IntentScope || {});\nfunction intentWithScope(scope) {\n  return [scope, 0 /* V0 */, 0 /* Sui */];\n}\nfunction messageWithIntent(scope, message) {\n  const intent = intentWithScope(scope);\n  const intentMessage = new Uint8Array(intent.length + message.length);\n  intentMessage.set(intent);\n  intentMessage.set(message, intent.length);\n  return intentMessage;\n}\n\n//# sourceMappingURL=intent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9pbnRlbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLENBQUMsYUFBYTtBQUNkO0FBQ0E7QUFDQTtBQUNBLENBQUMscUJBQXFCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsbUJBQW1CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L2ludGVudC5qcz9hNmE1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBBcHBJZCA9IC8qIEBfX1BVUkVfXyAqLyAoKEFwcElkMikgPT4ge1xuICBBcHBJZDJbQXBwSWQyW1wiU3VpXCJdID0gMF0gPSBcIlN1aVwiO1xuICByZXR1cm4gQXBwSWQyO1xufSkoQXBwSWQgfHwge30pO1xudmFyIEludGVudFZlcnNpb24gPSAvKiBAX19QVVJFX18gKi8gKChJbnRlbnRWZXJzaW9uMikgPT4ge1xuICBJbnRlbnRWZXJzaW9uMltJbnRlbnRWZXJzaW9uMltcIlYwXCJdID0gMF0gPSBcIlYwXCI7XG4gIHJldHVybiBJbnRlbnRWZXJzaW9uMjtcbn0pKEludGVudFZlcnNpb24gfHwge30pO1xudmFyIEludGVudFNjb3BlID0gLyogQF9fUFVSRV9fICovICgoSW50ZW50U2NvcGUyKSA9PiB7XG4gIEludGVudFNjb3BlMltJbnRlbnRTY29wZTJbXCJUcmFuc2FjdGlvbkRhdGFcIl0gPSAwXSA9IFwiVHJhbnNhY3Rpb25EYXRhXCI7XG4gIEludGVudFNjb3BlMltJbnRlbnRTY29wZTJbXCJUcmFuc2FjdGlvbkVmZmVjdHNcIl0gPSAxXSA9IFwiVHJhbnNhY3Rpb25FZmZlY3RzXCI7XG4gIEludGVudFNjb3BlMltJbnRlbnRTY29wZTJbXCJDaGVja3BvaW50U3VtbWFyeVwiXSA9IDJdID0gXCJDaGVja3BvaW50U3VtbWFyeVwiO1xuICBJbnRlbnRTY29wZTJbSW50ZW50U2NvcGUyW1wiUGVyc29uYWxNZXNzYWdlXCJdID0gM10gPSBcIlBlcnNvbmFsTWVzc2FnZVwiO1xuICByZXR1cm4gSW50ZW50U2NvcGUyO1xufSkoSW50ZW50U2NvcGUgfHwge30pO1xuZnVuY3Rpb24gaW50ZW50V2l0aFNjb3BlKHNjb3BlKSB7XG4gIHJldHVybiBbc2NvcGUsIDAgLyogVjAgKi8sIDAgLyogU3VpICovXTtcbn1cbmZ1bmN0aW9uIG1lc3NhZ2VXaXRoSW50ZW50KHNjb3BlLCBtZXNzYWdlKSB7XG4gIGNvbnN0IGludGVudCA9IGludGVudFdpdGhTY29wZShzY29wZSk7XG4gIGNvbnN0IGludGVudE1lc3NhZ2UgPSBuZXcgVWludDhBcnJheShpbnRlbnQubGVuZ3RoICsgbWVzc2FnZS5sZW5ndGgpO1xuICBpbnRlbnRNZXNzYWdlLnNldChpbnRlbnQpO1xuICBpbnRlbnRNZXNzYWdlLnNldChtZXNzYWdlLCBpbnRlbnQubGVuZ3RoKTtcbiAgcmV0dXJuIGludGVudE1lc3NhZ2U7XG59XG5leHBvcnQge1xuICBBcHBJZCxcbiAgSW50ZW50U2NvcGUsXG4gIEludGVudFZlcnNpb24sXG4gIG1lc3NhZ2VXaXRoSW50ZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZW50LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/intent.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/keypair.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/cryptography/keypair.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keypair: () => (/* binding */ Keypair),\n/* harmony export */   LEGACY_PRIVATE_KEY_SIZE: () => (/* binding */ LEGACY_PRIVATE_KEY_SIZE),\n/* harmony export */   PRIVATE_KEY_SIZE: () => (/* binding */ PRIVATE_KEY_SIZE),\n/* harmony export */   SUI_PRIVATE_KEY_PREFIX: () => (/* binding */ SUI_PRIVATE_KEY_PREFIX),\n/* harmony export */   Signer: () => (/* binding */ Signer),\n/* harmony export */   decodeSuiPrivateKey: () => (/* binding */ decodeSuiPrivateKey),\n/* harmony export */   encodeSuiPrivateKey: () => (/* binding */ encodeSuiPrivateKey)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs.js\");\n/* harmony import */ var _noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/blake2b */ \"(ssr)/../../node_modules/@noble/hashes/esm/blake2b.js\");\n/* harmony import */ var bech32__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bech32 */ \"(ssr)/../../node_modules/bech32/dist/index.js\");\n/* harmony import */ var _intent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intent.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/intent.js\");\n/* harmony import */ var _signature_scheme_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./signature-scheme.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js\");\n/* harmony import */ var _signature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signature.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature.js\");\n\n\n\n\n\n\nconst PRIVATE_KEY_SIZE = 32;\nconst LEGACY_PRIVATE_KEY_SIZE = 64;\nconst SUI_PRIVATE_KEY_PREFIX = \"suiprivkey\";\nclass Signer {\n  /**\n   * Sign messages with a specific intent. By combining the message bytes with the intent before hashing and signing,\n   * it ensures that a signed message is tied to a specific purpose and domain separator is provided\n   */\n  async signWithIntent(bytes, intent) {\n    const intentMessage = (0,_intent_js__WEBPACK_IMPORTED_MODULE_1__.messageWithIntent)(intent, bytes);\n    const digest = (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_2__.blake2b)(intentMessage, { dkLen: 32 });\n    const signature = (0,_signature_js__WEBPACK_IMPORTED_MODULE_3__.toSerializedSignature)({\n      signature: await this.sign(digest),\n      signatureScheme: this.getKeyScheme(),\n      publicKey: this.getPublicKey()\n    });\n    return {\n      signature,\n      bytes: (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.toB64)(bytes)\n    };\n  }\n  /**\n   * Signs provided transaction block by calling `signWithIntent()` with a `TransactionData` provided as intent scope\n   */\n  async signTransactionBlock(bytes) {\n    return this.signWithIntent(bytes, _intent_js__WEBPACK_IMPORTED_MODULE_1__.IntentScope.TransactionData);\n  }\n  /**\n   * Signs provided personal message by calling `signWithIntent()` with a `PersonalMessage` provided as intent scope\n   */\n  async signPersonalMessage(bytes) {\n    return this.signWithIntent(\n      _mysten_bcs__WEBPACK_IMPORTED_MODULE_5__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_5__.bcs.u8()).serialize(bytes).toBytes(),\n      _intent_js__WEBPACK_IMPORTED_MODULE_1__.IntentScope.PersonalMessage\n    );\n  }\n  toSuiAddress() {\n    return this.getPublicKey().toSuiAddress();\n  }\n}\nclass Keypair extends Signer {\n  /**\n   * @deprecated use {@link Keypair.getSecretKey} instead\n   * This returns an exported keypair object, schema is the signature\n   * scheme name, and the private key field is a Bech32 encoded string\n   * of 33-byte `flag || private_key` that starts with `suiprivkey`.\n   */\n  export() {\n    return {\n      schema: this.getKeyScheme(),\n      privateKey: this.getSecretKey()\n    };\n  }\n}\nfunction decodeSuiPrivateKey(value) {\n  const { prefix, words } = bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.decode(value);\n  if (prefix !== SUI_PRIVATE_KEY_PREFIX) {\n    throw new Error(\"invalid private key prefix\");\n  }\n  const extendedSecretKey = new Uint8Array(bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.fromWords(words));\n  const secretKey = extendedSecretKey.slice(1);\n  const signatureScheme = _signature_scheme_js__WEBPACK_IMPORTED_MODULE_6__.SIGNATURE_FLAG_TO_SCHEME[extendedSecretKey[0]];\n  return {\n    schema: signatureScheme,\n    secretKey\n  };\n}\nfunction encodeSuiPrivateKey(bytes, scheme) {\n  if (bytes.length !== PRIVATE_KEY_SIZE) {\n    throw new Error(\"Invalid bytes length\");\n  }\n  const flag = _signature_scheme_js__WEBPACK_IMPORTED_MODULE_6__.SIGNATURE_SCHEME_TO_FLAG[scheme];\n  const privKeyBytes = new Uint8Array(bytes.length + 1);\n  privKeyBytes.set([flag]);\n  privKeyBytes.set(bytes, 1);\n  return bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.encode(SUI_PRIVATE_KEY_PREFIX, bech32__WEBPACK_IMPORTED_MODULE_0__.bech32.toWords(privKeyBytes));\n}\n\n//# sourceMappingURL=keypair.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlDO0FBQ087QUFDaEI7QUFDNkI7QUFDOEI7QUFDcEM7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDZEQUFpQjtBQUMzQyxtQkFBbUIsOERBQU8sa0JBQWtCLFdBQVc7QUFDdkQsc0JBQXNCLG9FQUFxQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGFBQWEsa0RBQUs7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLG1EQUFXO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNENBQUcsUUFBUSw0Q0FBRztBQUNwQixNQUFNLG1EQUFXO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNEJBQTRCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0JBQWdCLEVBQUUsMENBQU07QUFDbEM7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLDBDQUFNO0FBQ2pEO0FBQ0EsMEJBQTBCLDBFQUF3QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBFQUF3QjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxTQUFTLDBDQUFNLGdDQUFnQywwQ0FBTTtBQUNyRDtBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9rZXlwYWlyLmpzPzZlNDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmNzLCB0b0I2NCB9IGZyb20gXCJAbXlzdGVuL2Jjc1wiO1xuaW1wb3J0IHsgYmxha2UyYiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL2JsYWtlMmJcIjtcbmltcG9ydCB7IGJlY2gzMiB9IGZyb20gXCJiZWNoMzJcIjtcbmltcG9ydCB7IEludGVudFNjb3BlLCBtZXNzYWdlV2l0aEludGVudCB9IGZyb20gXCIuL2ludGVudC5qc1wiO1xuaW1wb3J0IHsgU0lHTkFUVVJFX0ZMQUdfVE9fU0NIRU1FLCBTSUdOQVRVUkVfU0NIRU1FX1RPX0ZMQUcgfSBmcm9tIFwiLi9zaWduYXR1cmUtc2NoZW1lLmpzXCI7XG5pbXBvcnQgeyB0b1NlcmlhbGl6ZWRTaWduYXR1cmUgfSBmcm9tIFwiLi9zaWduYXR1cmUuanNcIjtcbmNvbnN0IFBSSVZBVEVfS0VZX1NJWkUgPSAzMjtcbmNvbnN0IExFR0FDWV9QUklWQVRFX0tFWV9TSVpFID0gNjQ7XG5jb25zdCBTVUlfUFJJVkFURV9LRVlfUFJFRklYID0gXCJzdWlwcml2a2V5XCI7XG5jbGFzcyBTaWduZXIge1xuICAvKipcbiAgICogU2lnbiBtZXNzYWdlcyB3aXRoIGEgc3BlY2lmaWMgaW50ZW50LiBCeSBjb21iaW5pbmcgdGhlIG1lc3NhZ2UgYnl0ZXMgd2l0aCB0aGUgaW50ZW50IGJlZm9yZSBoYXNoaW5nIGFuZCBzaWduaW5nLFxuICAgKiBpdCBlbnN1cmVzIHRoYXQgYSBzaWduZWQgbWVzc2FnZSBpcyB0aWVkIHRvIGEgc3BlY2lmaWMgcHVycG9zZSBhbmQgZG9tYWluIHNlcGFyYXRvciBpcyBwcm92aWRlZFxuICAgKi9cbiAgYXN5bmMgc2lnbldpdGhJbnRlbnQoYnl0ZXMsIGludGVudCkge1xuICAgIGNvbnN0IGludGVudE1lc3NhZ2UgPSBtZXNzYWdlV2l0aEludGVudChpbnRlbnQsIGJ5dGVzKTtcbiAgICBjb25zdCBkaWdlc3QgPSBibGFrZTJiKGludGVudE1lc3NhZ2UsIHsgZGtMZW46IDMyIH0pO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRvU2VyaWFsaXplZFNpZ25hdHVyZSh7XG4gICAgICBzaWduYXR1cmU6IGF3YWl0IHRoaXMuc2lnbihkaWdlc3QpLFxuICAgICAgc2lnbmF0dXJlU2NoZW1lOiB0aGlzLmdldEtleVNjaGVtZSgpLFxuICAgICAgcHVibGljS2V5OiB0aGlzLmdldFB1YmxpY0tleSgpXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNpZ25hdHVyZSxcbiAgICAgIGJ5dGVzOiB0b0I2NChieXRlcylcbiAgICB9O1xuICB9XG4gIC8qKlxuICAgKiBTaWducyBwcm92aWRlZCB0cmFuc2FjdGlvbiBibG9jayBieSBjYWxsaW5nIGBzaWduV2l0aEludGVudCgpYCB3aXRoIGEgYFRyYW5zYWN0aW9uRGF0YWAgcHJvdmlkZWQgYXMgaW50ZW50IHNjb3BlXG4gICAqL1xuICBhc3luYyBzaWduVHJhbnNhY3Rpb25CbG9jayhieXRlcykge1xuICAgIHJldHVybiB0aGlzLnNpZ25XaXRoSW50ZW50KGJ5dGVzLCBJbnRlbnRTY29wZS5UcmFuc2FjdGlvbkRhdGEpO1xuICB9XG4gIC8qKlxuICAgKiBTaWducyBwcm92aWRlZCBwZXJzb25hbCBtZXNzYWdlIGJ5IGNhbGxpbmcgYHNpZ25XaXRoSW50ZW50KClgIHdpdGggYSBgUGVyc29uYWxNZXNzYWdlYCBwcm92aWRlZCBhcyBpbnRlbnQgc2NvcGVcbiAgICovXG4gIGFzeW5jIHNpZ25QZXJzb25hbE1lc3NhZ2UoYnl0ZXMpIHtcbiAgICByZXR1cm4gdGhpcy5zaWduV2l0aEludGVudChcbiAgICAgIGJjcy52ZWN0b3IoYmNzLnU4KCkpLnNlcmlhbGl6ZShieXRlcykudG9CeXRlcygpLFxuICAgICAgSW50ZW50U2NvcGUuUGVyc29uYWxNZXNzYWdlXG4gICAgKTtcbiAgfVxuICB0b1N1aUFkZHJlc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0UHVibGljS2V5KCkudG9TdWlBZGRyZXNzKCk7XG4gIH1cbn1cbmNsYXNzIEtleXBhaXIgZXh0ZW5kcyBTaWduZXIge1xuICAvKipcbiAgICogQGRlcHJlY2F0ZWQgdXNlIHtAbGluayBLZXlwYWlyLmdldFNlY3JldEtleX0gaW5zdGVhZFxuICAgKiBUaGlzIHJldHVybnMgYW4gZXhwb3J0ZWQga2V5cGFpciBvYmplY3QsIHNjaGVtYSBpcyB0aGUgc2lnbmF0dXJlXG4gICAqIHNjaGVtZSBuYW1lLCBhbmQgdGhlIHByaXZhdGUga2V5IGZpZWxkIGlzIGEgQmVjaDMyIGVuY29kZWQgc3RyaW5nXG4gICAqIG9mIDMzLWJ5dGUgYGZsYWcgfHwgcHJpdmF0ZV9rZXlgIHRoYXQgc3RhcnRzIHdpdGggYHN1aXByaXZrZXlgLlxuICAgKi9cbiAgZXhwb3J0KCkge1xuICAgIHJldHVybiB7XG4gICAgICBzY2hlbWE6IHRoaXMuZ2V0S2V5U2NoZW1lKCksXG4gICAgICBwcml2YXRlS2V5OiB0aGlzLmdldFNlY3JldEtleSgpXG4gICAgfTtcbiAgfVxufVxuZnVuY3Rpb24gZGVjb2RlU3VpUHJpdmF0ZUtleSh2YWx1ZSkge1xuICBjb25zdCB7IHByZWZpeCwgd29yZHMgfSA9IGJlY2gzMi5kZWNvZGUodmFsdWUpO1xuICBpZiAocHJlZml4ICE9PSBTVUlfUFJJVkFURV9LRVlfUFJFRklYKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwcml2YXRlIGtleSBwcmVmaXhcIik7XG4gIH1cbiAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShiZWNoMzIuZnJvbVdvcmRzKHdvcmRzKSk7XG4gIGNvbnN0IHNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5LnNsaWNlKDEpO1xuICBjb25zdCBzaWduYXR1cmVTY2hlbWUgPSBTSUdOQVRVUkVfRkxBR19UT19TQ0hFTUVbZXh0ZW5kZWRTZWNyZXRLZXlbMF1dO1xuICByZXR1cm4ge1xuICAgIHNjaGVtYTogc2lnbmF0dXJlU2NoZW1lLFxuICAgIHNlY3JldEtleVxuICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlU3VpUHJpdmF0ZUtleShieXRlcywgc2NoZW1lKSB7XG4gIGlmIChieXRlcy5sZW5ndGggIT09IFBSSVZBVEVfS0VZX1NJWkUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGJ5dGVzIGxlbmd0aFwiKTtcbiAgfVxuICBjb25zdCBmbGFnID0gU0lHTkFUVVJFX1NDSEVNRV9UT19GTEFHW3NjaGVtZV07XG4gIGNvbnN0IHByaXZLZXlCeXRlcyA9IG5ldyBVaW50OEFycmF5KGJ5dGVzLmxlbmd0aCArIDEpO1xuICBwcml2S2V5Qnl0ZXMuc2V0KFtmbGFnXSk7XG4gIHByaXZLZXlCeXRlcy5zZXQoYnl0ZXMsIDEpO1xuICByZXR1cm4gYmVjaDMyLmVuY29kZShTVUlfUFJJVkFURV9LRVlfUFJFRklYLCBiZWNoMzIudG9Xb3Jkcyhwcml2S2V5Qnl0ZXMpKTtcbn1cbmV4cG9ydCB7XG4gIEtleXBhaXIsXG4gIExFR0FDWV9QUklWQVRFX0tFWV9TSVpFLFxuICBQUklWQVRFX0tFWV9TSVpFLFxuICBTVUlfUFJJVkFURV9LRVlfUFJFRklYLFxuICBTaWduZXIsXG4gIGRlY29kZVN1aVByaXZhdGVLZXksXG4gIGVuY29kZVN1aVByaXZhdGVLZXlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1rZXlwYWlyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/keypair.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/mnemonics.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/cryptography/mnemonics.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidBIP32Path: () => (/* binding */ isValidBIP32Path),\n/* harmony export */   isValidHardenedPath: () => (/* binding */ isValidHardenedPath),\n/* harmony export */   mnemonicToSeed: () => (/* binding */ mnemonicToSeed),\n/* harmony export */   mnemonicToSeedHex: () => (/* binding */ mnemonicToSeedHex)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var _scure_bip39__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @scure/bip39 */ \"(ssr)/../../node_modules/@scure/bip39/esm/index.js\");\n\n\nfunction isValidHardenedPath(path) {\n  if (!new RegExp(\"^m\\\\/44'\\\\/784'\\\\/[0-9]+'\\\\/[0-9]+'\\\\/[0-9]+'+$\").test(path)) {\n    return false;\n  }\n  return true;\n}\nfunction isValidBIP32Path(path) {\n  if (!new RegExp(\"^m\\\\/(54|74)'\\\\/784'\\\\/[0-9]+'\\\\/[0-9]+\\\\/[0-9]+$\").test(path)) {\n    return false;\n  }\n  return true;\n}\nfunction mnemonicToSeed(mnemonics) {\n  return (0,_scure_bip39__WEBPACK_IMPORTED_MODULE_0__.mnemonicToSeedSync)(mnemonics, \"\");\n}\nfunction mnemonicToSeedHex(mnemonics) {\n  return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.toHEX)(mnemonicToSeed(mnemonics));\n}\n\n//# sourceMappingURL=mnemonics.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9tbmVtb25pY3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9DO0FBQ3lDO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxnRUFBdUI7QUFDaEM7QUFDQTtBQUNBLFNBQVMsa0RBQUs7QUFDZDtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9tbmVtb25pY3MuanM/OTdiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0hFWCB9IGZyb20gXCJAbXlzdGVuL2Jjc1wiO1xuaW1wb3J0IHsgbW5lbW9uaWNUb1NlZWRTeW5jIGFzIGJpcDM5TW5lbW9uaWNUb1NlZWRTeW5jIH0gZnJvbSBcIkBzY3VyZS9iaXAzOVwiO1xuZnVuY3Rpb24gaXNWYWxpZEhhcmRlbmVkUGF0aChwYXRoKSB7XG4gIGlmICghbmV3IFJlZ0V4cChcIl5tXFxcXC80NCdcXFxcLzc4NCdcXFxcL1swLTldKydcXFxcL1swLTldKydcXFxcL1swLTldKycrJFwiKS50ZXN0KHBhdGgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaXNWYWxpZEJJUDMyUGF0aChwYXRoKSB7XG4gIGlmICghbmV3IFJlZ0V4cChcIl5tXFxcXC8oNTR8NzQpJ1xcXFwvNzg0J1xcXFwvWzAtOV0rJ1xcXFwvWzAtOV0rXFxcXC9bMC05XSskXCIpLnRlc3QocGF0aCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5mdW5jdGlvbiBtbmVtb25pY1RvU2VlZChtbmVtb25pY3MpIHtcbiAgcmV0dXJuIGJpcDM5TW5lbW9uaWNUb1NlZWRTeW5jKG1uZW1vbmljcywgXCJcIik7XG59XG5mdW5jdGlvbiBtbmVtb25pY1RvU2VlZEhleChtbmVtb25pY3MpIHtcbiAgcmV0dXJuIHRvSEVYKG1uZW1vbmljVG9TZWVkKG1uZW1vbmljcykpO1xufVxuZXhwb3J0IHtcbiAgaXNWYWxpZEJJUDMyUGF0aCxcbiAgaXNWYWxpZEhhcmRlbmVkUGF0aCxcbiAgbW5lbW9uaWNUb1NlZWQsXG4gIG1uZW1vbmljVG9TZWVkSGV4XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW5lbW9uaWNzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/mnemonics.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/publickey.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/cryptography/publickey.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PublicKey: () => (/* binding */ PublicKey),\n/* harmony export */   bytesEqual: () => (/* binding */ bytesEqual)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/blake2b */ \"(ssr)/../../node_modules/@noble/hashes/esm/blake2b.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/../../node_modules/@noble/hashes/esm/utils.js\");\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _intent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intent.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/intent.js\");\n\n\n\n\n\n\nfunction bytesEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nclass PublicKey {\n  /**\n   * Checks if two public keys are equal\n   */\n  equals(publicKey) {\n    return bytesEqual(this.toRawBytes(), publicKey.toRawBytes());\n  }\n  /**\n   * Return the base-64 representation of the public key\n   */\n  toBase64() {\n    return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.toB64)(this.toRawBytes());\n  }\n  toString() {\n    throw new Error(\n      \"`toString` is not implemented on public keys. Use `toBase64()` or `toRawBytes()` instead.\"\n    );\n  }\n  /**\n   * Return the Sui representation of the public key encoded in\n   * base-64. A Sui public key is formed by the concatenation\n   * of the scheme flag with the raw bytes of the public key\n   */\n  toSuiPublicKey() {\n    const bytes = this.toSuiBytes();\n    return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.toB64)(bytes);\n  }\n  verifyWithIntent(bytes, signature, intent) {\n    const intentMessage = (0,_intent_js__WEBPACK_IMPORTED_MODULE_1__.messageWithIntent)(intent, bytes);\n    const digest = (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_2__.blake2b)(intentMessage, { dkLen: 32 });\n    return this.verify(digest, signature);\n  }\n  /**\n   * Verifies that the signature is valid for for the provided PersonalMessage\n   */\n  verifyPersonalMessage(message, signature) {\n    return this.verifyWithIntent(\n      _bcs_index_js__WEBPACK_IMPORTED_MODULE_3__.bcs.vector(_bcs_index_js__WEBPACK_IMPORTED_MODULE_3__.bcs.u8()).serialize(message).toBytes(),\n      signature,\n      _intent_js__WEBPACK_IMPORTED_MODULE_1__.IntentScope.PersonalMessage\n    );\n  }\n  /**\n   * Verifies that the signature is valid for for the provided TransactionBlock\n   */\n  verifyTransactionBlock(transactionBlock, signature) {\n    return this.verifyWithIntent(transactionBlock, signature, _intent_js__WEBPACK_IMPORTED_MODULE_1__.IntentScope.TransactionData);\n  }\n  /**\n   * Returns the bytes representation of the public key\n   * prefixed with the signature scheme flag\n   */\n  toSuiBytes() {\n    const rawBytes = this.toRawBytes();\n    const suiBytes = new Uint8Array(rawBytes.length + 1);\n    suiBytes.set([this.flag()]);\n    suiBytes.set(rawBytes, 1);\n    return suiBytes;\n  }\n  /**\n   * Return the Sui address associated with this Ed25519 public key\n   */\n  toSuiAddress() {\n    return (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_4__.normalizeSuiAddress)(\n      (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_5__.bytesToHex)((0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_2__.blake2b)(this.toSuiBytes(), { dkLen: 32 })).slice(0, _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_4__.SUI_ADDRESS_LENGTH * 2)\n    );\n  }\n}\n\n//# sourceMappingURL=publickey.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9wdWJsaWNrZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0M7QUFDWTtBQUNDO0FBQ1g7QUFDMEM7QUFDbkI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsa0RBQUs7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtEQUFLO0FBQ2hCO0FBQ0E7QUFDQSwwQkFBMEIsNkRBQWlCO0FBQzNDLG1CQUFtQiw4REFBTyxrQkFBa0IsV0FBVztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sOENBQUcsUUFBUSw4Q0FBRztBQUNwQjtBQUNBLE1BQU0sbURBQVc7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELG1EQUFXO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx3RUFBbUI7QUFDOUIsTUFBTSwrREFBVSxDQUFDLDhEQUFPLHNCQUFzQixXQUFXLFlBQVksbUVBQWtCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9wdWJsaWNrZXkuanM/YWY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0I2NCB9IGZyb20gXCJAbXlzdGVuL2Jjc1wiO1xuaW1wb3J0IHsgYmxha2UyYiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL2JsYWtlMmJcIjtcbmltcG9ydCB7IGJ5dGVzVG9IZXggfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiO1xuaW1wb3J0IHsgYmNzIH0gZnJvbSBcIi4uL2Jjcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplU3VpQWRkcmVzcywgU1VJX0FERFJFU1NfTEVOR1RIIH0gZnJvbSBcIi4uL3V0aWxzL3N1aS10eXBlcy5qc1wiO1xuaW1wb3J0IHsgSW50ZW50U2NvcGUsIG1lc3NhZ2VXaXRoSW50ZW50IH0gZnJvbSBcIi4vaW50ZW50LmpzXCI7XG5mdW5jdGlvbiBieXRlc0VxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpXG4gICAgcmV0dXJuIHRydWU7XG4gIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGFbaV0gIT09IGJbaV0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59XG5jbGFzcyBQdWJsaWNLZXkge1xuICAvKipcbiAgICogQ2hlY2tzIGlmIHR3byBwdWJsaWMga2V5cyBhcmUgZXF1YWxcbiAgICovXG4gIGVxdWFscyhwdWJsaWNLZXkpIHtcbiAgICByZXR1cm4gYnl0ZXNFcXVhbCh0aGlzLnRvUmF3Qnl0ZXMoKSwgcHVibGljS2V5LnRvUmF3Qnl0ZXMoKSk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgYmFzZS02NCByZXByZXNlbnRhdGlvbiBvZiB0aGUgcHVibGljIGtleVxuICAgKi9cbiAgdG9CYXNlNjQoKSB7XG4gICAgcmV0dXJuIHRvQjY0KHRoaXMudG9SYXdCeXRlcygpKTtcbiAgfVxuICB0b1N0cmluZygpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcImB0b1N0cmluZ2AgaXMgbm90IGltcGxlbWVudGVkIG9uIHB1YmxpYyBrZXlzLiBVc2UgYHRvQmFzZTY0KClgIG9yIGB0b1Jhd0J5dGVzKClgIGluc3RlYWQuXCJcbiAgICApO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm4gdGhlIFN1aSByZXByZXNlbnRhdGlvbiBvZiB0aGUgcHVibGljIGtleSBlbmNvZGVkIGluXG4gICAqIGJhc2UtNjQuIEEgU3VpIHB1YmxpYyBrZXkgaXMgZm9ybWVkIGJ5IHRoZSBjb25jYXRlbmF0aW9uXG4gICAqIG9mIHRoZSBzY2hlbWUgZmxhZyB3aXRoIHRoZSByYXcgYnl0ZXMgb2YgdGhlIHB1YmxpYyBrZXlcbiAgICovXG4gIHRvU3VpUHVibGljS2V5KCkge1xuICAgIGNvbnN0IGJ5dGVzID0gdGhpcy50b1N1aUJ5dGVzKCk7XG4gICAgcmV0dXJuIHRvQjY0KGJ5dGVzKTtcbiAgfVxuICB2ZXJpZnlXaXRoSW50ZW50KGJ5dGVzLCBzaWduYXR1cmUsIGludGVudCkge1xuICAgIGNvbnN0IGludGVudE1lc3NhZ2UgPSBtZXNzYWdlV2l0aEludGVudChpbnRlbnQsIGJ5dGVzKTtcbiAgICBjb25zdCBkaWdlc3QgPSBibGFrZTJiKGludGVudE1lc3NhZ2UsIHsgZGtMZW46IDMyIH0pO1xuICAgIHJldHVybiB0aGlzLnZlcmlmeShkaWdlc3QsIHNpZ25hdHVyZSk7XG4gIH1cbiAgLyoqXG4gICAqIFZlcmlmaWVzIHRoYXQgdGhlIHNpZ25hdHVyZSBpcyB2YWxpZCBmb3IgZm9yIHRoZSBwcm92aWRlZCBQZXJzb25hbE1lc3NhZ2VcbiAgICovXG4gIHZlcmlmeVBlcnNvbmFsTWVzc2FnZShtZXNzYWdlLCBzaWduYXR1cmUpIHtcbiAgICByZXR1cm4gdGhpcy52ZXJpZnlXaXRoSW50ZW50KFxuICAgICAgYmNzLnZlY3RvcihiY3MudTgoKSkuc2VyaWFsaXplKG1lc3NhZ2UpLnRvQnl0ZXMoKSxcbiAgICAgIHNpZ25hdHVyZSxcbiAgICAgIEludGVudFNjb3BlLlBlcnNvbmFsTWVzc2FnZVxuICAgICk7XG4gIH1cbiAgLyoqXG4gICAqIFZlcmlmaWVzIHRoYXQgdGhlIHNpZ25hdHVyZSBpcyB2YWxpZCBmb3IgZm9yIHRoZSBwcm92aWRlZCBUcmFuc2FjdGlvbkJsb2NrXG4gICAqL1xuICB2ZXJpZnlUcmFuc2FjdGlvbkJsb2NrKHRyYW5zYWN0aW9uQmxvY2ssIHNpZ25hdHVyZSkge1xuICAgIHJldHVybiB0aGlzLnZlcmlmeVdpdGhJbnRlbnQodHJhbnNhY3Rpb25CbG9jaywgc2lnbmF0dXJlLCBJbnRlbnRTY29wZS5UcmFuc2FjdGlvbkRhdGEpO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBieXRlcyByZXByZXNlbnRhdGlvbiBvZiB0aGUgcHVibGljIGtleVxuICAgKiBwcmVmaXhlZCB3aXRoIHRoZSBzaWduYXR1cmUgc2NoZW1lIGZsYWdcbiAgICovXG4gIHRvU3VpQnl0ZXMoKSB7XG4gICAgY29uc3QgcmF3Qnl0ZXMgPSB0aGlzLnRvUmF3Qnl0ZXMoKTtcbiAgICBjb25zdCBzdWlCeXRlcyA9IG5ldyBVaW50OEFycmF5KHJhd0J5dGVzLmxlbmd0aCArIDEpO1xuICAgIHN1aUJ5dGVzLnNldChbdGhpcy5mbGFnKCldKTtcbiAgICBzdWlCeXRlcy5zZXQocmF3Qnl0ZXMsIDEpO1xuICAgIHJldHVybiBzdWlCeXRlcztcbiAgfVxuICAvKipcbiAgICogUmV0dXJuIHRoZSBTdWkgYWRkcmVzcyBhc3NvY2lhdGVkIHdpdGggdGhpcyBFZDI1NTE5IHB1YmxpYyBrZXlcbiAgICovXG4gIHRvU3VpQWRkcmVzcygpIHtcbiAgICByZXR1cm4gbm9ybWFsaXplU3VpQWRkcmVzcyhcbiAgICAgIGJ5dGVzVG9IZXgoYmxha2UyYih0aGlzLnRvU3VpQnl0ZXMoKSwgeyBka0xlbjogMzIgfSkpLnNsaWNlKDAsIFNVSV9BRERSRVNTX0xFTkdUSCAqIDIpXG4gICAgKTtcbiAgfVxufVxuZXhwb3J0IHtcbiAgUHVibGljS2V5LFxuICBieXRlc0VxdWFsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHVibGlja2V5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/publickey.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SIGNATURE_FLAG_TO_SCHEME: () => (/* binding */ SIGNATURE_FLAG_TO_SCHEME),\n/* harmony export */   SIGNATURE_SCHEME_TO_FLAG: () => (/* binding */ SIGNATURE_SCHEME_TO_FLAG),\n/* harmony export */   SIGNATURE_SCHEME_TO_SIZE: () => (/* binding */ SIGNATURE_SCHEME_TO_SIZE)\n/* harmony export */ });\nconst SIGNATURE_SCHEME_TO_FLAG = {\n  ED25519: 0,\n  Secp256k1: 1,\n  Secp256r1: 2,\n  MultiSig: 3,\n  ZkLogin: 5\n};\nconst SIGNATURE_SCHEME_TO_SIZE = {\n  ED25519: 32,\n  Secp256k1: 33,\n  Secp256r1: 33\n};\nconst SIGNATURE_FLAG_TO_SCHEME = {\n  0: \"ED25519\",\n  1: \"Secp256k1\",\n  2: \"Secp256r1\",\n  3: \"MultiSig\",\n  5: \"ZkLogin\"\n};\n\n//# sourceMappingURL=signature-scheme.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9zaWduYXR1cmUtc2NoZW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vY3J5cHRvZ3JhcGh5L3NpZ25hdHVyZS1zY2hlbWUuanM/MWViYiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTSUdOQVRVUkVfU0NIRU1FX1RPX0ZMQUcgPSB7XG4gIEVEMjU1MTk6IDAsXG4gIFNlY3AyNTZrMTogMSxcbiAgU2VjcDI1NnIxOiAyLFxuICBNdWx0aVNpZzogMyxcbiAgWmtMb2dpbjogNVxufTtcbmNvbnN0IFNJR05BVFVSRV9TQ0hFTUVfVE9fU0laRSA9IHtcbiAgRUQyNTUxOTogMzIsXG4gIFNlY3AyNTZrMTogMzMsXG4gIFNlY3AyNTZyMTogMzNcbn07XG5jb25zdCBTSUdOQVRVUkVfRkxBR19UT19TQ0hFTUUgPSB7XG4gIDA6IFwiRUQyNTUxOVwiLFxuICAxOiBcIlNlY3AyNTZrMVwiLFxuICAyOiBcIlNlY3AyNTZyMVwiLFxuICAzOiBcIk11bHRpU2lnXCIsXG4gIDU6IFwiWmtMb2dpblwiXG59O1xuZXhwb3J0IHtcbiAgU0lHTkFUVVJFX0ZMQUdfVE9fU0NIRU1FLFxuICBTSUdOQVRVUkVfU0NIRU1FX1RPX0ZMQUcsXG4gIFNJR05BVFVSRV9TQ0hFTUVfVE9fU0laRVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25hdHVyZS1zY2hlbWUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSerializedSignature: () => (/* binding */ parseSerializedSignature),\n/* harmony export */   toSerializedSignature: () => (/* binding */ toSerializedSignature)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n/* harmony import */ var _zklogin_publickey_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../zklogin/publickey.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/publickey.js\");\n/* harmony import */ var _signature_scheme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signature-scheme.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js\");\n\n\n\n\nfunction toSerializedSignature({\n  signature,\n  signatureScheme,\n  publicKey\n}) {\n  if (!publicKey) {\n    throw new Error(\"`publicKey` is required\");\n  }\n  const pubKeyBytes = publicKey.toRawBytes();\n  const serializedSignature = new Uint8Array(1 + signature.length + pubKeyBytes.length);\n  serializedSignature.set([_signature_scheme_js__WEBPACK_IMPORTED_MODULE_0__.SIGNATURE_SCHEME_TO_FLAG[signatureScheme]]);\n  serializedSignature.set(signature, 1);\n  serializedSignature.set(pubKeyBytes, 1 + signature.length);\n  return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.toB64)(serializedSignature);\n}\nfunction parseSerializedSignature(serializedSignature) {\n  const bytes = (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.fromB64)(serializedSignature);\n  const signatureScheme = _signature_scheme_js__WEBPACK_IMPORTED_MODULE_0__.SIGNATURE_FLAG_TO_SCHEME[bytes[0]];\n  switch (signatureScheme) {\n    case \"MultiSig\":\n      const multisig = _bcs_index_js__WEBPACK_IMPORTED_MODULE_2__.bcs.MultiSig.parse(bytes.slice(1));\n      return {\n        serializedSignature,\n        signatureScheme,\n        multisig,\n        bytes\n      };\n    case \"ZkLogin\":\n      return (0,_zklogin_publickey_js__WEBPACK_IMPORTED_MODULE_3__.parseSerializedZkLoginSignature)(serializedSignature);\n    case \"ED25519\":\n    case \"Secp256k1\":\n    case \"Secp256r1\":\n      const size = _signature_scheme_js__WEBPACK_IMPORTED_MODULE_0__.SIGNATURE_SCHEME_TO_SIZE[signatureScheme];\n      const signature = bytes.slice(1, bytes.length - size);\n      const publicKey = bytes.slice(1 + signature.length);\n      return {\n        serializedSignature,\n        signatureScheme,\n        signature,\n        publicKey,\n        bytes\n      };\n    default:\n      throw new Error(\"Unsupported signature scheme\");\n  }\n}\n\n//# sourceMappingURL=signature.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2NyeXB0b2dyYXBoeS9zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTZDO0FBQ1A7QUFDb0M7QUFLM0M7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwwRUFBd0I7QUFDbkQ7QUFDQTtBQUNBLFNBQVMsa0RBQUs7QUFDZDtBQUNBO0FBQ0EsZ0JBQWdCLG9EQUFPO0FBQ3ZCLDBCQUEwQiwwRUFBd0I7QUFDbEQ7QUFDQTtBQUNBLHVCQUF1Qiw4Q0FBRztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsc0ZBQStCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiwwRUFBd0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS9jcnlwdG9ncmFwaHkvc2lnbmF0dXJlLmpzP2FiYmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUI2NCwgdG9CNjQgfSBmcm9tIFwiQG15c3Rlbi9iY3NcIjtcbmltcG9ydCB7IGJjcyB9IGZyb20gXCIuLi9iY3MvaW5kZXguanNcIjtcbmltcG9ydCB7IHBhcnNlU2VyaWFsaXplZFprTG9naW5TaWduYXR1cmUgfSBmcm9tIFwiLi4vemtsb2dpbi9wdWJsaWNrZXkuanNcIjtcbmltcG9ydCB7XG4gIFNJR05BVFVSRV9GTEFHX1RPX1NDSEVNRSxcbiAgU0lHTkFUVVJFX1NDSEVNRV9UT19GTEFHLFxuICBTSUdOQVRVUkVfU0NIRU1FX1RPX1NJWkVcbn0gZnJvbSBcIi4vc2lnbmF0dXJlLXNjaGVtZS5qc1wiO1xuZnVuY3Rpb24gdG9TZXJpYWxpemVkU2lnbmF0dXJlKHtcbiAgc2lnbmF0dXJlLFxuICBzaWduYXR1cmVTY2hlbWUsXG4gIHB1YmxpY0tleVxufSkge1xuICBpZiAoIXB1YmxpY0tleSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImBwdWJsaWNLZXlgIGlzIHJlcXVpcmVkXCIpO1xuICB9XG4gIGNvbnN0IHB1YktleUJ5dGVzID0gcHVibGljS2V5LnRvUmF3Qnl0ZXMoKTtcbiAgY29uc3Qgc2VyaWFsaXplZFNpZ25hdHVyZSA9IG5ldyBVaW50OEFycmF5KDEgKyBzaWduYXR1cmUubGVuZ3RoICsgcHViS2V5Qnl0ZXMubGVuZ3RoKTtcbiAgc2VyaWFsaXplZFNpZ25hdHVyZS5zZXQoW1NJR05BVFVSRV9TQ0hFTUVfVE9fRkxBR1tzaWduYXR1cmVTY2hlbWVdXSk7XG4gIHNlcmlhbGl6ZWRTaWduYXR1cmUuc2V0KHNpZ25hdHVyZSwgMSk7XG4gIHNlcmlhbGl6ZWRTaWduYXR1cmUuc2V0KHB1YktleUJ5dGVzLCAxICsgc2lnbmF0dXJlLmxlbmd0aCk7XG4gIHJldHVybiB0b0I2NChzZXJpYWxpemVkU2lnbmF0dXJlKTtcbn1cbmZ1bmN0aW9uIHBhcnNlU2VyaWFsaXplZFNpZ25hdHVyZShzZXJpYWxpemVkU2lnbmF0dXJlKSB7XG4gIGNvbnN0IGJ5dGVzID0gZnJvbUI2NChzZXJpYWxpemVkU2lnbmF0dXJlKTtcbiAgY29uc3Qgc2lnbmF0dXJlU2NoZW1lID0gU0lHTkFUVVJFX0ZMQUdfVE9fU0NIRU1FW2J5dGVzWzBdXTtcbiAgc3dpdGNoIChzaWduYXR1cmVTY2hlbWUpIHtcbiAgICBjYXNlIFwiTXVsdGlTaWdcIjpcbiAgICAgIGNvbnN0IG11bHRpc2lnID0gYmNzLk11bHRpU2lnLnBhcnNlKGJ5dGVzLnNsaWNlKDEpKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNlcmlhbGl6ZWRTaWduYXR1cmUsXG4gICAgICAgIHNpZ25hdHVyZVNjaGVtZSxcbiAgICAgICAgbXVsdGlzaWcsXG4gICAgICAgIGJ5dGVzXG4gICAgICB9O1xuICAgIGNhc2UgXCJaa0xvZ2luXCI6XG4gICAgICByZXR1cm4gcGFyc2VTZXJpYWxpemVkWmtMb2dpblNpZ25hdHVyZShzZXJpYWxpemVkU2lnbmF0dXJlKTtcbiAgICBjYXNlIFwiRUQyNTUxOVwiOlxuICAgIGNhc2UgXCJTZWNwMjU2azFcIjpcbiAgICBjYXNlIFwiU2VjcDI1NnIxXCI6XG4gICAgICBjb25zdCBzaXplID0gU0lHTkFUVVJFX1NDSEVNRV9UT19TSVpFW3NpZ25hdHVyZVNjaGVtZV07XG4gICAgICBjb25zdCBzaWduYXR1cmUgPSBieXRlcy5zbGljZSgxLCBieXRlcy5sZW5ndGggLSBzaXplKTtcbiAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGJ5dGVzLnNsaWNlKDEgKyBzaWduYXR1cmUubGVuZ3RoKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHNlcmlhbGl6ZWRTaWduYXR1cmUsXG4gICAgICAgIHNpZ25hdHVyZVNjaGVtZSxcbiAgICAgICAgc2lnbmF0dXJlLFxuICAgICAgICBwdWJsaWNLZXksXG4gICAgICAgIGJ5dGVzXG4gICAgICB9O1xuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBzaWduYXR1cmUgc2NoZW1lXCIpO1xuICB9XG59XG5leHBvcnQge1xuICBwYXJzZVNlcmlhbGl6ZWRTaWduYXR1cmUsXG4gIHRvU2VyaWFsaXplZFNpZ25hdHVyZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25hdHVyZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/graphql/client.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/graphql/client.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SuiGraphQLClient: () => (/* binding */ SuiGraphQLClient),\n/* harmony export */   SuiGraphQLRequestError: () => (/* binding */ SuiGraphQLRequestError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../../node_modules/graphql/language/printer.mjs\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _url, _queries, _headers, _fetch;\n\nclass SuiGraphQLRequestError extends Error {\n}\nclass SuiGraphQLClient {\n  constructor({\n    url,\n    fetch: fetchFn = fetch,\n    headers = {},\n    queries = {}\n  }) {\n    __privateAdd(this, _url, void 0);\n    __privateAdd(this, _queries, void 0);\n    __privateAdd(this, _headers, void 0);\n    __privateAdd(this, _fetch, void 0);\n    __privateSet(this, _url, url);\n    __privateSet(this, _queries, queries);\n    __privateSet(this, _headers, headers);\n    __privateSet(this, _fetch, (...args) => fetchFn(...args));\n  }\n  async query(options) {\n    const res = await __privateGet(this, _fetch).call(this, __privateGet(this, _url), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...__privateGet(this, _headers)\n      },\n      body: JSON.stringify({\n        query: typeof options.query === \"string\" ? String(options.query) : (0,graphql__WEBPACK_IMPORTED_MODULE_0__.print)(options.query),\n        variables: options.variables,\n        extensions: options.extensions,\n        operationName: options.operationName\n      })\n    });\n    if (!res.ok) {\n      throw new SuiGraphQLRequestError(`GraphQL request failed: ${res.statusText} (${res.status})`);\n    }\n    return await res.json();\n  }\n  async execute(query, options) {\n    return this.query({\n      ...options,\n      query: __privateGet(this, _queries)[query]\n    });\n  }\n}\n_url = new WeakMap();\n_queries = new WeakMap();\n_headers = new WeakMap();\n_fetch = new WeakMap();\n\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2dyYXBocWwvY2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2dDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSwyRUFBMkUsOENBQUs7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLGtFQUFrRSxnQkFBZ0IsR0FBRyxXQUFXO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2dyYXBocWwvY2xpZW50LmpzPzIxMTYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYWNjZXNzQ2hlY2sgPSAob2JqLCBtZW1iZXIsIG1zZykgPT4ge1xuICBpZiAoIW1lbWJlci5oYXMob2JqKSlcbiAgICB0aHJvdyBUeXBlRXJyb3IoXCJDYW5ub3QgXCIgKyBtc2cpO1xufTtcbnZhciBfX3ByaXZhdGVHZXQgPSAob2JqLCBtZW1iZXIsIGdldHRlcikgPT4ge1xuICBfX2FjY2Vzc0NoZWNrKG9iaiwgbWVtYmVyLCBcInJlYWQgZnJvbSBwcml2YXRlIGZpZWxkXCIpO1xuICByZXR1cm4gZ2V0dGVyID8gZ2V0dGVyLmNhbGwob2JqKSA6IG1lbWJlci5nZXQob2JqKTtcbn07XG52YXIgX19wcml2YXRlQWRkID0gKG9iaiwgbWVtYmVyLCB2YWx1ZSkgPT4ge1xuICBpZiAobWVtYmVyLmhhcyhvYmopKVxuICAgIHRocm93IFR5cGVFcnJvcihcIkNhbm5vdCBhZGQgdGhlIHNhbWUgcHJpdmF0ZSBtZW1iZXIgbW9yZSB0aGFuIG9uY2VcIik7XG4gIG1lbWJlciBpbnN0YW5jZW9mIFdlYWtTZXQgPyBtZW1iZXIuYWRkKG9iaikgOiBtZW1iZXIuc2V0KG9iaiwgdmFsdWUpO1xufTtcbnZhciBfX3ByaXZhdGVTZXQgPSAob2JqLCBtZW1iZXIsIHZhbHVlLCBzZXR0ZXIpID0+IHtcbiAgX19hY2Nlc3NDaGVjayhvYmosIG1lbWJlciwgXCJ3cml0ZSB0byBwcml2YXRlIGZpZWxkXCIpO1xuICBzZXR0ZXIgPyBzZXR0ZXIuY2FsbChvYmosIHZhbHVlKSA6IG1lbWJlci5zZXQob2JqLCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG52YXIgX3VybCwgX3F1ZXJpZXMsIF9oZWFkZXJzLCBfZmV0Y2g7XG5pbXBvcnQgeyBwcmludCB9IGZyb20gXCJncmFwaHFsXCI7XG5jbGFzcyBTdWlHcmFwaFFMUmVxdWVzdEVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuY2xhc3MgU3VpR3JhcGhRTENsaWVudCB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICB1cmwsXG4gICAgZmV0Y2g6IGZldGNoRm4gPSBmZXRjaCxcbiAgICBoZWFkZXJzID0ge30sXG4gICAgcXVlcmllcyA9IHt9XG4gIH0pIHtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX3VybCwgdm9pZCAwKTtcbiAgICBfX3ByaXZhdGVBZGQodGhpcywgX3F1ZXJpZXMsIHZvaWQgMCk7XG4gICAgX19wcml2YXRlQWRkKHRoaXMsIF9oZWFkZXJzLCB2b2lkIDApO1xuICAgIF9fcHJpdmF0ZUFkZCh0aGlzLCBfZmV0Y2gsIHZvaWQgMCk7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF91cmwsIHVybCk7XG4gICAgX19wcml2YXRlU2V0KHRoaXMsIF9xdWVyaWVzLCBxdWVyaWVzKTtcbiAgICBfX3ByaXZhdGVTZXQodGhpcywgX2hlYWRlcnMsIGhlYWRlcnMpO1xuICAgIF9fcHJpdmF0ZVNldCh0aGlzLCBfZmV0Y2gsICguLi5hcmdzKSA9PiBmZXRjaEZuKC4uLmFyZ3MpKTtcbiAgfVxuICBhc3luYyBxdWVyeShvcHRpb25zKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgX19wcml2YXRlR2V0KHRoaXMsIF9mZXRjaCkuY2FsbCh0aGlzLCBfX3ByaXZhdGVHZXQodGhpcywgX3VybCksIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAuLi5fX3ByaXZhdGVHZXQodGhpcywgX2hlYWRlcnMpXG4gICAgICB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBxdWVyeTogdHlwZW9mIG9wdGlvbnMucXVlcnkgPT09IFwic3RyaW5nXCIgPyBTdHJpbmcob3B0aW9ucy5xdWVyeSkgOiBwcmludChvcHRpb25zLnF1ZXJ5KSxcbiAgICAgICAgdmFyaWFibGVzOiBvcHRpb25zLnZhcmlhYmxlcyxcbiAgICAgICAgZXh0ZW5zaW9uczogb3B0aW9ucy5leHRlbnNpb25zLFxuICAgICAgICBvcGVyYXRpb25OYW1lOiBvcHRpb25zLm9wZXJhdGlvbk5hbWVcbiAgICAgIH0pXG4gICAgfSk7XG4gICAgaWYgKCFyZXMub2spIHtcbiAgICAgIHRocm93IG5ldyBTdWlHcmFwaFFMUmVxdWVzdEVycm9yKGBHcmFwaFFMIHJlcXVlc3QgZmFpbGVkOiAke3Jlcy5zdGF0dXNUZXh0fSAoJHtyZXMuc3RhdHVzfSlgKTtcbiAgICB9XG4gICAgcmV0dXJuIGF3YWl0IHJlcy5qc29uKCk7XG4gIH1cbiAgYXN5bmMgZXhlY3V0ZShxdWVyeSwgb3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5KHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBxdWVyeTogX19wcml2YXRlR2V0KHRoaXMsIF9xdWVyaWVzKVtxdWVyeV1cbiAgICB9KTtcbiAgfVxufVxuX3VybCA9IG5ldyBXZWFrTWFwKCk7XG5fcXVlcmllcyA9IG5ldyBXZWFrTWFwKCk7XG5faGVhZGVycyA9IG5ldyBXZWFrTWFwKCk7XG5fZmV0Y2ggPSBuZXcgV2Vha01hcCgpO1xuZXhwb3J0IHtcbiAgU3VpR3JhcGhRTENsaWVudCxcbiAgU3VpR3JhcGhRTFJlcXVlc3RFcnJvclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/graphql/client.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/graphql/schemas/2024.4/index.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/graphql/schemas/2024.4/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   graphql: () => (/* binding */ graphql),\n/* harmony export */   maskFragments: () => (/* reexport safe */ gql_tada__WEBPACK_IMPORTED_MODULE_0__.maskFragments),\n/* harmony export */   readFragment: () => (/* reexport safe */ gql_tada__WEBPACK_IMPORTED_MODULE_0__.readFragment)\n/* harmony export */ });\n/* harmony import */ var gql_tada__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gql.tada */ \"(ssr)/../../node_modules/gql.tada/dist/gql-tada.mjs\");\n\n\n\nconst graphql = (0,gql_tada__WEBPACK_IMPORTED_MODULE_0__.initGraphQLTada)();\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2dyYXBocWwvc2NoZW1hcy8yMDI0LjQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyQztBQUNaO0FBQ3dCO0FBQ3ZELGdCQUFnQix5REFBZTtBQUs3QjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS9ncmFwaHFsL3NjaGVtYXMvMjAyNC40L2luZGV4LmpzP2ZmMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5pdEdyYXBoUUxUYWRhIH0gZnJvbSBcImdxbC50YWRhXCI7XG5leHBvcnQgKiBmcm9tIFwiLi4vLi4vdHlwZXMuanNcIjtcbmltcG9ydCB7IHJlYWRGcmFnbWVudCwgbWFza0ZyYWdtZW50cyB9IGZyb20gXCJncWwudGFkYVwiO1xuY29uc3QgZ3JhcGhxbCA9IGluaXRHcmFwaFFMVGFkYSgpO1xuZXhwb3J0IHtcbiAgZ3JhcGhxbCxcbiAgbWFza0ZyYWdtZW50cyxcbiAgcmVhZEZyYWdtZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/graphql/schemas/2024.4/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/ed25519-hd-key.js":
/*!*************************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/ed25519-hd-key.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   derivePath: () => (/* binding */ derivePath),\n/* harmony export */   getMasterKeyFromSeed: () => (/* binding */ getMasterKeyFromSeed),\n/* harmony export */   getPublicKey: () => (/* binding */ getPublicKey),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   pathRegex: () => (/* binding */ pathRegex),\n/* harmony export */   replaceDerive: () => (/* binding */ replaceDerive)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/hmac */ \"(ssr)/../../node_modules/@noble/hashes/esm/hmac.js\");\n/* harmony import */ var _noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/../../node_modules/@noble/hashes/esm/sha512.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/../../node_modules/tweetnacl/nacl-fast.js\");\n\n\n\n\nconst ED25519_CURVE = \"ed25519 seed\";\nconst HARDENED_OFFSET = 2147483648;\nconst pathRegex = new RegExp(\"^m(\\\\/[0-9]+')+$\");\nconst replaceDerive = (val) => val.replace(\"'\", \"\");\nconst getMasterKeyFromSeed = (seed) => {\n  const h = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_1__.hmac.create(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512, ED25519_CURVE);\n  const I = h.update((0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_3__.fromHEX)(seed)).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nconst CKDPriv = ({ key, chainCode }, index) => {\n  const indexBuffer = new ArrayBuffer(4);\n  const cv = new DataView(indexBuffer);\n  cv.setUint32(0, index);\n  const data = new Uint8Array(1 + key.length + indexBuffer.byteLength);\n  data.set(new Uint8Array(1).fill(0));\n  data.set(key, 1);\n  data.set(new Uint8Array(indexBuffer, 0, indexBuffer.byteLength), key.length + 1);\n  const I = _noble_hashes_hmac__WEBPACK_IMPORTED_MODULE_1__.hmac.create(_noble_hashes_sha512__WEBPACK_IMPORTED_MODULE_2__.sha512, chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nconst getPublicKey = (privateKey, withZeroByte = true) => {\n  const keyPair = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(privateKey);\n  const signPk = keyPair.secretKey.subarray(32);\n  const newArr = new Uint8Array(signPk.length + 1);\n  newArr.set([0]);\n  newArr.set(signPk, 1);\n  return withZeroByte ? newArr : signPk;\n};\nconst isValidPath = (path) => {\n  if (!pathRegex.test(path)) {\n    return false;\n  }\n  return !path.split(\"/\").slice(1).map(replaceDerive).some(\n    isNaN\n    /* ts T_T*/\n  );\n};\nconst derivePath = (path, seed, offset = HARDENED_OFFSET) => {\n  if (!isValidPath(path)) {\n    throw new Error(\"Invalid derivation path\");\n  }\n  const { key, chainCode } = getMasterKeyFromSeed(seed);\n  const segments = path.split(\"/\").slice(1).map(replaceDerive).map((el) => parseInt(el, 10));\n  return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + offset), {\n    key,\n    chainCode\n  });\n};\n\n//# sourceMappingURL=ed25519-hd-key.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2tleXBhaXJzL2VkMjU1MTkvZWQyNTUxOS1oZC1rZXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFzQztBQUNJO0FBQ0k7QUFDakI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0RBQUksUUFBUSx3REFBTTtBQUM5QixxQkFBcUIsb0RBQU87QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0JBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBSSxRQUFRLHdEQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsMkNBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGlCQUFpQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQVFFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2tleXBhaXJzL2VkMjU1MTkvZWQyNTUxOS1oZC1rZXkuanM/NzViMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tSEVYIH0gZnJvbSBcIkBteXN0ZW4vYmNzXCI7XG5pbXBvcnQgeyBobWFjIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvaG1hY1wiO1xuaW1wb3J0IHsgc2hhNTEyIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvc2hhNTEyXCI7XG5pbXBvcnQgbmFjbCBmcm9tIFwidHdlZXRuYWNsXCI7XG5jb25zdCBFRDI1NTE5X0NVUlZFID0gXCJlZDI1NTE5IHNlZWRcIjtcbmNvbnN0IEhBUkRFTkVEX09GRlNFVCA9IDIxNDc0ODM2NDg7XG5jb25zdCBwYXRoUmVnZXggPSBuZXcgUmVnRXhwKFwiXm0oXFxcXC9bMC05XSsnKSskXCIpO1xuY29uc3QgcmVwbGFjZURlcml2ZSA9ICh2YWwpID0+IHZhbC5yZXBsYWNlKFwiJ1wiLCBcIlwiKTtcbmNvbnN0IGdldE1hc3RlcktleUZyb21TZWVkID0gKHNlZWQpID0+IHtcbiAgY29uc3QgaCA9IGhtYWMuY3JlYXRlKHNoYTUxMiwgRUQyNTUxOV9DVVJWRSk7XG4gIGNvbnN0IEkgPSBoLnVwZGF0ZShmcm9tSEVYKHNlZWQpKS5kaWdlc3QoKTtcbiAgY29uc3QgSUwgPSBJLnNsaWNlKDAsIDMyKTtcbiAgY29uc3QgSVIgPSBJLnNsaWNlKDMyKTtcbiAgcmV0dXJuIHtcbiAgICBrZXk6IElMLFxuICAgIGNoYWluQ29kZTogSVJcbiAgfTtcbn07XG5jb25zdCBDS0RQcml2ID0gKHsga2V5LCBjaGFpbkNvZGUgfSwgaW5kZXgpID0+IHtcbiAgY29uc3QgaW5kZXhCdWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoNCk7XG4gIGNvbnN0IGN2ID0gbmV3IERhdGFWaWV3KGluZGV4QnVmZmVyKTtcbiAgY3Yuc2V0VWludDMyKDAsIGluZGV4KTtcbiAgY29uc3QgZGF0YSA9IG5ldyBVaW50OEFycmF5KDEgKyBrZXkubGVuZ3RoICsgaW5kZXhCdWZmZXIuYnl0ZUxlbmd0aCk7XG4gIGRhdGEuc2V0KG5ldyBVaW50OEFycmF5KDEpLmZpbGwoMCkpO1xuICBkYXRhLnNldChrZXksIDEpO1xuICBkYXRhLnNldChuZXcgVWludDhBcnJheShpbmRleEJ1ZmZlciwgMCwgaW5kZXhCdWZmZXIuYnl0ZUxlbmd0aCksIGtleS5sZW5ndGggKyAxKTtcbiAgY29uc3QgSSA9IGhtYWMuY3JlYXRlKHNoYTUxMiwgY2hhaW5Db2RlKS51cGRhdGUoZGF0YSkuZGlnZXN0KCk7XG4gIGNvbnN0IElMID0gSS5zbGljZSgwLCAzMik7XG4gIGNvbnN0IElSID0gSS5zbGljZSgzMik7XG4gIHJldHVybiB7XG4gICAga2V5OiBJTCxcbiAgICBjaGFpbkNvZGU6IElSXG4gIH07XG59O1xuY29uc3QgZ2V0UHVibGljS2V5ID0gKHByaXZhdGVLZXksIHdpdGhaZXJvQnl0ZSA9IHRydWUpID0+IHtcbiAgY29uc3Qga2V5UGFpciA9IG5hY2wuc2lnbi5rZXlQYWlyLmZyb21TZWVkKHByaXZhdGVLZXkpO1xuICBjb25zdCBzaWduUGsgPSBrZXlQYWlyLnNlY3JldEtleS5zdWJhcnJheSgzMik7XG4gIGNvbnN0IG5ld0FyciA9IG5ldyBVaW50OEFycmF5KHNpZ25Qay5sZW5ndGggKyAxKTtcbiAgbmV3QXJyLnNldChbMF0pO1xuICBuZXdBcnIuc2V0KHNpZ25QaywgMSk7XG4gIHJldHVybiB3aXRoWmVyb0J5dGUgPyBuZXdBcnIgOiBzaWduUGs7XG59O1xuY29uc3QgaXNWYWxpZFBhdGggPSAocGF0aCkgPT4ge1xuICBpZiAoIXBhdGhSZWdleC50ZXN0KHBhdGgpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHJldHVybiAhcGF0aC5zcGxpdChcIi9cIikuc2xpY2UoMSkubWFwKHJlcGxhY2VEZXJpdmUpLnNvbWUoXG4gICAgaXNOYU5cbiAgICAvKiB0cyBUX1QqL1xuICApO1xufTtcbmNvbnN0IGRlcml2ZVBhdGggPSAocGF0aCwgc2VlZCwgb2Zmc2V0ID0gSEFSREVORURfT0ZGU0VUKSA9PiB7XG4gIGlmICghaXNWYWxpZFBhdGgocGF0aCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGRlcml2YXRpb24gcGF0aFwiKTtcbiAgfVxuICBjb25zdCB7IGtleSwgY2hhaW5Db2RlIH0gPSBnZXRNYXN0ZXJLZXlGcm9tU2VlZChzZWVkKTtcbiAgY29uc3Qgc2VnbWVudHMgPSBwYXRoLnNwbGl0KFwiL1wiKS5zbGljZSgxKS5tYXAocmVwbGFjZURlcml2ZSkubWFwKChlbCkgPT4gcGFyc2VJbnQoZWwsIDEwKSk7XG4gIHJldHVybiBzZWdtZW50cy5yZWR1Y2UoKHBhcmVudEtleXMsIHNlZ21lbnQpID0+IENLRFByaXYocGFyZW50S2V5cywgc2VnbWVudCArIG9mZnNldCksIHtcbiAgICBrZXksXG4gICAgY2hhaW5Db2RlXG4gIH0pO1xufTtcbmV4cG9ydCB7XG4gIGRlcml2ZVBhdGgsXG4gIGdldE1hc3RlcktleUZyb21TZWVkLFxuICBnZXRQdWJsaWNLZXksXG4gIGlzVmFsaWRQYXRoLFxuICBwYXRoUmVnZXgsXG4gIHJlcGxhY2VEZXJpdmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lZDI1NTE5LWhkLWtleS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/ed25519-hd-key.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/keypair.js":
/*!******************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/keypair.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ED25519_DERIVATION_PATH: () => (/* binding */ DEFAULT_ED25519_DERIVATION_PATH),\n/* harmony export */   Ed25519Keypair: () => (/* binding */ Ed25519Keypair)\n/* harmony export */ });\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/../../node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var _cryptography_keypair_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../cryptography/keypair.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/keypair.js\");\n/* harmony import */ var _cryptography_mnemonics_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../cryptography/mnemonics.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/mnemonics.js\");\n/* harmony import */ var _ed25519_hd_key_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ed25519-hd-key.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/ed25519-hd-key.js\");\n/* harmony import */ var _publickey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./publickey.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/publickey.js\");\n\n\n\n\n\nconst DEFAULT_ED25519_DERIVATION_PATH = \"m/44'/784'/0'/0'/0'\";\nclass Ed25519Keypair extends _cryptography_keypair_js__WEBPACK_IMPORTED_MODULE_1__.Keypair {\n  /**\n   * Create a new Ed25519 keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair Ed25519 keypair\n   */\n  constructor(keypair) {\n    super();\n    if (keypair) {\n      this.keypair = keypair;\n    } else {\n      this.keypair = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair();\n    }\n  }\n  /**\n   * Get the key scheme of the keypair ED25519\n   */\n  getKeyScheme() {\n    return \"ED25519\";\n  }\n  /**\n   * Generate a new random Ed25519 keypair\n   */\n  static generate() {\n    return new Ed25519Keypair(tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair());\n  }\n  /**\n   * Create a Ed25519 keypair from a raw secret key byte array, also known as seed.\n   * This is NOT the private scalar which is result of hashing and bit clamping of\n   * the raw secret key.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(secretKey, options) {\n    const secretKeyLength = secretKey.length;\n    if (secretKeyLength !== _cryptography_keypair_js__WEBPACK_IMPORTED_MODULE_1__.PRIVATE_KEY_SIZE) {\n      throw new Error(\n        `Wrong secretKey size. Expected ${_cryptography_keypair_js__WEBPACK_IMPORTED_MODULE_1__.PRIVATE_KEY_SIZE} bytes, got ${secretKeyLength}.`\n      );\n    }\n    const keypair = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.keyPair.fromSeed(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode(\"sui validation\");\n      const signature = tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached(signData, keypair.secretKey);\n      if (!tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error(\"provided secretKey is invalid\");\n      }\n    }\n    return new Ed25519Keypair(keypair);\n  }\n  /**\n   * The public key for this Ed25519 keypair\n   */\n  getPublicKey() {\n    return new _publickey_js__WEBPACK_IMPORTED_MODULE_2__.Ed25519PublicKey(this.keypair.publicKey);\n  }\n  /**\n   * The Bech32 secret key string for this Ed25519 keypair\n   */\n  getSecretKey() {\n    return (0,_cryptography_keypair_js__WEBPACK_IMPORTED_MODULE_1__.encodeSuiPrivateKey)(\n      this.keypair.secretKey.slice(0, _cryptography_keypair_js__WEBPACK_IMPORTED_MODULE_1__.PRIVATE_KEY_SIZE),\n      this.getKeyScheme()\n    );\n  }\n  async sign(data) {\n    return this.signData(data);\n  }\n  /**\n   * Return the signature for the provided data using Ed25519.\n   */\n  signData(data) {\n    return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached(data, this.keypair.secretKey);\n  }\n  /**\n   * Derive Ed25519 keypair from mnemonics and path. The mnemonics must be normalized\n   * and validated against the english wordlist.\n   *\n   * If path is none, it will default to m/44'/784'/0'/0'/0', otherwise the path must\n   * be compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.\n   */\n  static deriveKeypair(mnemonics, path) {\n    if (path == null) {\n      path = DEFAULT_ED25519_DERIVATION_PATH;\n    }\n    if (!(0,_cryptography_mnemonics_js__WEBPACK_IMPORTED_MODULE_3__.isValidHardenedPath)(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n    const { key } = (0,_ed25519_hd_key_js__WEBPACK_IMPORTED_MODULE_4__.derivePath)(path, (0,_cryptography_mnemonics_js__WEBPACK_IMPORTED_MODULE_3__.mnemonicToSeedHex)(mnemonics));\n    return Ed25519Keypair.fromSecretKey(key);\n  }\n  /**\n   * Derive Ed25519 keypair from mnemonicSeed and path.\n   *\n   * If path is none, it will default to m/44'/784'/0'/0'/0', otherwise the path must\n   * be compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.\n   */\n  static deriveKeypairFromSeed(seedHex, path) {\n    if (path == null) {\n      path = DEFAULT_ED25519_DERIVATION_PATH;\n    }\n    if (!(0,_cryptography_mnemonics_js__WEBPACK_IMPORTED_MODULE_3__.isValidHardenedPath)(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n    const { key } = (0,_ed25519_hd_key_js__WEBPACK_IMPORTED_MODULE_4__.derivePath)(path, seedHex);\n    return Ed25519Keypair.fromSecretKey(key);\n  }\n}\n\n//# sourceMappingURL=keypair.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2tleXBhaXJzL2VkMjU1MTkva2V5cGFpci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTZCO0FBQ2tFO0FBQ047QUFDeEM7QUFDQztBQUNsRDtBQUNBLDZCQUE2Qiw2REFBTztBQUNwQztBQUNBO0FBQ0Esb0NBQW9DLHNCQUFzQjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixxQkFBcUIsMkNBQVM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLDJDQUFTO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNFQUFnQjtBQUM1QztBQUNBLDBDQUEwQyxzRUFBZ0IsRUFBRSxhQUFhLGdCQUFnQjtBQUN6RjtBQUNBO0FBQ0Esb0JBQW9CLDJDQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwyQ0FBUztBQUNqQyxXQUFXLDJDQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkRBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDZFQUFtQjtBQUM5QixzQ0FBc0Msc0VBQWdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywyQ0FBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsY0FBYyxHQUFHLGFBQWEsR0FBRyxjQUFjO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLCtFQUFtQjtBQUM1QjtBQUNBO0FBQ0EsWUFBWSxNQUFNLEVBQUUsOERBQVUsT0FBTyw2RUFBaUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELGNBQWMsR0FBRyxhQUFhLEdBQUcsY0FBYztBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywrRUFBbUI7QUFDNUI7QUFDQTtBQUNBLFlBQVksTUFBTSxFQUFFLDhEQUFVO0FBQzlCO0FBQ0E7QUFDQTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2tleXBhaXJzL2VkMjU1MTkva2V5cGFpci5qcz81Y2FkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBuYWNsIGZyb20gXCJ0d2VldG5hY2xcIjtcbmltcG9ydCB7IGVuY29kZVN1aVByaXZhdGVLZXksIEtleXBhaXIsIFBSSVZBVEVfS0VZX1NJWkUgfSBmcm9tIFwiLi4vLi4vY3J5cHRvZ3JhcGh5L2tleXBhaXIuanNcIjtcbmltcG9ydCB7IGlzVmFsaWRIYXJkZW5lZFBhdGgsIG1uZW1vbmljVG9TZWVkSGV4IH0gZnJvbSBcIi4uLy4uL2NyeXB0b2dyYXBoeS9tbmVtb25pY3MuanNcIjtcbmltcG9ydCB7IGRlcml2ZVBhdGggfSBmcm9tIFwiLi9lZDI1NTE5LWhkLWtleS5qc1wiO1xuaW1wb3J0IHsgRWQyNTUxOVB1YmxpY0tleSB9IGZyb20gXCIuL3B1YmxpY2tleS5qc1wiO1xuY29uc3QgREVGQVVMVF9FRDI1NTE5X0RFUklWQVRJT05fUEFUSCA9IFwibS80NCcvNzg0Jy8wJy8wJy8wJ1wiO1xuY2xhc3MgRWQyNTUxOUtleXBhaXIgZXh0ZW5kcyBLZXlwYWlyIHtcbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBFZDI1NTE5IGtleXBhaXIgaW5zdGFuY2UuXG4gICAqIEdlbmVyYXRlIHJhbmRvbSBrZXlwYWlyIGlmIG5vIHtAbGluayBFZDI1NTE5S2V5cGFpcn0gaXMgcHJvdmlkZWQuXG4gICAqXG4gICAqIEBwYXJhbSBrZXlwYWlyIEVkMjU1MTkga2V5cGFpclxuICAgKi9cbiAgY29uc3RydWN0b3Ioa2V5cGFpcikge1xuICAgIHN1cGVyKCk7XG4gICAgaWYgKGtleXBhaXIpIHtcbiAgICAgIHRoaXMua2V5cGFpciA9IGtleXBhaXI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMua2V5cGFpciA9IG5hY2wuc2lnbi5rZXlQYWlyKCk7XG4gICAgfVxuICB9XG4gIC8qKlxuICAgKiBHZXQgdGhlIGtleSBzY2hlbWUgb2YgdGhlIGtleXBhaXIgRUQyNTUxOVxuICAgKi9cbiAgZ2V0S2V5U2NoZW1lKCkge1xuICAgIHJldHVybiBcIkVEMjU1MTlcIjtcbiAgfVxuICAvKipcbiAgICogR2VuZXJhdGUgYSBuZXcgcmFuZG9tIEVkMjU1MTkga2V5cGFpclxuICAgKi9cbiAgc3RhdGljIGdlbmVyYXRlKCkge1xuICAgIHJldHVybiBuZXcgRWQyNTUxOUtleXBhaXIobmFjbC5zaWduLmtleVBhaXIoKSk7XG4gIH1cbiAgLyoqXG4gICAqIENyZWF0ZSBhIEVkMjU1MTkga2V5cGFpciBmcm9tIGEgcmF3IHNlY3JldCBrZXkgYnl0ZSBhcnJheSwgYWxzbyBrbm93biBhcyBzZWVkLlxuICAgKiBUaGlzIGlzIE5PVCB0aGUgcHJpdmF0ZSBzY2FsYXIgd2hpY2ggaXMgcmVzdWx0IG9mIGhhc2hpbmcgYW5kIGJpdCBjbGFtcGluZyBvZlxuICAgKiB0aGUgcmF3IHNlY3JldCBrZXkuXG4gICAqXG4gICAqIEB0aHJvd3MgZXJyb3IgaWYgdGhlIHByb3ZpZGVkIHNlY3JldCBrZXkgaXMgaW52YWxpZCBhbmQgdmFsaWRhdGlvbiBpcyBub3Qgc2tpcHBlZC5cbiAgICpcbiAgICogQHBhcmFtIHNlY3JldEtleSBzZWNyZXQga2V5IGJ5dGUgYXJyYXlcbiAgICogQHBhcmFtIG9wdGlvbnM6IHNraXAgc2VjcmV0IGtleSB2YWxpZGF0aW9uXG4gICAqL1xuICBzdGF0aWMgZnJvbVNlY3JldEtleShzZWNyZXRLZXksIG9wdGlvbnMpIHtcbiAgICBjb25zdCBzZWNyZXRLZXlMZW5ndGggPSBzZWNyZXRLZXkubGVuZ3RoO1xuICAgIGlmIChzZWNyZXRLZXlMZW5ndGggIT09IFBSSVZBVEVfS0VZX1NJWkUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYFdyb25nIHNlY3JldEtleSBzaXplLiBFeHBlY3RlZCAke1BSSVZBVEVfS0VZX1NJWkV9IGJ5dGVzLCBnb3QgJHtzZWNyZXRLZXlMZW5ndGh9LmBcbiAgICAgICk7XG4gICAgfVxuICAgIGNvbnN0IGtleXBhaXIgPSBuYWNsLnNpZ24ua2V5UGFpci5mcm9tU2VlZChzZWNyZXRLZXkpO1xuICAgIGlmICghb3B0aW9ucyB8fCAhb3B0aW9ucy5za2lwVmFsaWRhdGlvbikge1xuICAgICAgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuICAgICAgY29uc3Qgc2lnbkRhdGEgPSBlbmNvZGVyLmVuY29kZShcInN1aSB2YWxpZGF0aW9uXCIpO1xuICAgICAgY29uc3Qgc2lnbmF0dXJlID0gbmFjbC5zaWduLmRldGFjaGVkKHNpZ25EYXRhLCBrZXlwYWlyLnNlY3JldEtleSk7XG4gICAgICBpZiAoIW5hY2wuc2lnbi5kZXRhY2hlZC52ZXJpZnkoc2lnbkRhdGEsIHNpZ25hdHVyZSwga2V5cGFpci5wdWJsaWNLZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInByb3ZpZGVkIHNlY3JldEtleSBpcyBpbnZhbGlkXCIpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IEVkMjU1MTlLZXlwYWlyKGtleXBhaXIpO1xuICB9XG4gIC8qKlxuICAgKiBUaGUgcHVibGljIGtleSBmb3IgdGhpcyBFZDI1NTE5IGtleXBhaXJcbiAgICovXG4gIGdldFB1YmxpY0tleSgpIHtcbiAgICByZXR1cm4gbmV3IEVkMjU1MTlQdWJsaWNLZXkodGhpcy5rZXlwYWlyLnB1YmxpY0tleSk7XG4gIH1cbiAgLyoqXG4gICAqIFRoZSBCZWNoMzIgc2VjcmV0IGtleSBzdHJpbmcgZm9yIHRoaXMgRWQyNTUxOSBrZXlwYWlyXG4gICAqL1xuICBnZXRTZWNyZXRLZXkoKSB7XG4gICAgcmV0dXJuIGVuY29kZVN1aVByaXZhdGVLZXkoXG4gICAgICB0aGlzLmtleXBhaXIuc2VjcmV0S2V5LnNsaWNlKDAsIFBSSVZBVEVfS0VZX1NJWkUpLFxuICAgICAgdGhpcy5nZXRLZXlTY2hlbWUoKVxuICAgICk7XG4gIH1cbiAgYXN5bmMgc2lnbihkYXRhKSB7XG4gICAgcmV0dXJuIHRoaXMuc2lnbkRhdGEoZGF0YSk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgc2lnbmF0dXJlIGZvciB0aGUgcHJvdmlkZWQgZGF0YSB1c2luZyBFZDI1NTE5LlxuICAgKi9cbiAgc2lnbkRhdGEoZGF0YSkge1xuICAgIHJldHVybiBuYWNsLnNpZ24uZGV0YWNoZWQoZGF0YSwgdGhpcy5rZXlwYWlyLnNlY3JldEtleSk7XG4gIH1cbiAgLyoqXG4gICAqIERlcml2ZSBFZDI1NTE5IGtleXBhaXIgZnJvbSBtbmVtb25pY3MgYW5kIHBhdGguIFRoZSBtbmVtb25pY3MgbXVzdCBiZSBub3JtYWxpemVkXG4gICAqIGFuZCB2YWxpZGF0ZWQgYWdhaW5zdCB0aGUgZW5nbGlzaCB3b3JkbGlzdC5cbiAgICpcbiAgICogSWYgcGF0aCBpcyBub25lLCBpdCB3aWxsIGRlZmF1bHQgdG8gbS80NCcvNzg0Jy8wJy8wJy8wJywgb3RoZXJ3aXNlIHRoZSBwYXRoIG11c3RcbiAgICogYmUgY29tcGxpYW50IHRvIFNMSVAtMDAxMCBpbiBmb3JtIG0vNDQnLzc4NCcve2FjY291bnRfaW5kZXh9Jy97Y2hhbmdlX2luZGV4fScve2FkZHJlc3NfaW5kZXh9Jy5cbiAgICovXG4gIHN0YXRpYyBkZXJpdmVLZXlwYWlyKG1uZW1vbmljcywgcGF0aCkge1xuICAgIGlmIChwYXRoID09IG51bGwpIHtcbiAgICAgIHBhdGggPSBERUZBVUxUX0VEMjU1MTlfREVSSVZBVElPTl9QQVRIO1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRIYXJkZW5lZFBhdGgocGF0aCkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZGVyaXZhdGlvbiBwYXRoXCIpO1xuICAgIH1cbiAgICBjb25zdCB7IGtleSB9ID0gZGVyaXZlUGF0aChwYXRoLCBtbmVtb25pY1RvU2VlZEhleChtbmVtb25pY3MpKTtcbiAgICByZXR1cm4gRWQyNTUxOUtleXBhaXIuZnJvbVNlY3JldEtleShrZXkpO1xuICB9XG4gIC8qKlxuICAgKiBEZXJpdmUgRWQyNTUxOSBrZXlwYWlyIGZyb20gbW5lbW9uaWNTZWVkIGFuZCBwYXRoLlxuICAgKlxuICAgKiBJZiBwYXRoIGlzIG5vbmUsIGl0IHdpbGwgZGVmYXVsdCB0byBtLzQ0Jy83ODQnLzAnLzAnLzAnLCBvdGhlcndpc2UgdGhlIHBhdGggbXVzdFxuICAgKiBiZSBjb21wbGlhbnQgdG8gU0xJUC0wMDEwIGluIGZvcm0gbS80NCcvNzg0Jy97YWNjb3VudF9pbmRleH0nL3tjaGFuZ2VfaW5kZXh9Jy97YWRkcmVzc19pbmRleH0nLlxuICAgKi9cbiAgc3RhdGljIGRlcml2ZUtleXBhaXJGcm9tU2VlZChzZWVkSGV4LCBwYXRoKSB7XG4gICAgaWYgKHBhdGggPT0gbnVsbCkge1xuICAgICAgcGF0aCA9IERFRkFVTFRfRUQyNTUxOV9ERVJJVkFUSU9OX1BBVEg7XG4gICAgfVxuICAgIGlmICghaXNWYWxpZEhhcmRlbmVkUGF0aChwYXRoKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkZXJpdmF0aW9uIHBhdGhcIik7XG4gICAgfVxuICAgIGNvbnN0IHsga2V5IH0gPSBkZXJpdmVQYXRoKHBhdGgsIHNlZWRIZXgpO1xuICAgIHJldHVybiBFZDI1NTE5S2V5cGFpci5mcm9tU2VjcmV0S2V5KGtleSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIERFRkFVTFRfRUQyNTUxOV9ERVJJVkFUSU9OX1BBVEgsXG4gIEVkMjU1MTlLZXlwYWlyXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2V5cGFpci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/keypair.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/publickey.js":
/*!********************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/publickey.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ed25519PublicKey: () => (/* binding */ Ed25519PublicKey)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var tweetnacl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tweetnacl */ \"(ssr)/../../node_modules/tweetnacl/nacl-fast.js\");\n/* harmony import */ var _cryptography_publickey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../cryptography/publickey.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/publickey.js\");\n/* harmony import */ var _cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../cryptography/signature-scheme.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js\");\n/* harmony import */ var _cryptography_signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../cryptography/signature.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature.js\");\n\n\n\n\n\nconst PUBLIC_KEY_SIZE = 32;\nclass Ed25519PublicKey extends _cryptography_publickey_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey {\n  /**\n   * Create a new Ed25519PublicKey object\n   * @param value ed25519 public key as buffer or base-64 encoded string\n   */\n  constructor(value) {\n    super();\n    if (typeof value === \"string\") {\n      this.data = (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.fromB64)(value);\n    } else if (value instanceof Uint8Array) {\n      this.data = value;\n    } else {\n      this.data = Uint8Array.from(value);\n    }\n    if (this.data.length !== PUBLIC_KEY_SIZE) {\n      throw new Error(\n        `Invalid public key input. Expected ${PUBLIC_KEY_SIZE} bytes, got ${this.data.length}`\n      );\n    }\n  }\n  /**\n   * Checks if two Ed25519 public keys are equal\n   */\n  equals(publicKey) {\n    return super.equals(publicKey);\n  }\n  /**\n   * Return the byte array representation of the Ed25519 public key\n   */\n  toRawBytes() {\n    return this.data;\n  }\n  /**\n   * Return the Sui address associated with this Ed25519 public key\n   */\n  flag() {\n    return _cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_3__.SIGNATURE_SCHEME_TO_FLAG[\"ED25519\"];\n  }\n  /**\n   * Verifies that the signature is valid for for the provided message\n   */\n  async verify(message, signature) {\n    let bytes;\n    if (typeof signature === \"string\") {\n      const parsed = (0,_cryptography_signature_js__WEBPACK_IMPORTED_MODULE_4__.parseSerializedSignature)(signature);\n      if (parsed.signatureScheme !== \"ED25519\") {\n        throw new Error(\"Invalid signature scheme\");\n      }\n      if (!(0,_cryptography_publickey_js__WEBPACK_IMPORTED_MODULE_1__.bytesEqual)(this.toRawBytes(), parsed.publicKey)) {\n        throw new Error(\"Signature does not match public key\");\n      }\n      bytes = parsed.signature;\n    } else {\n      bytes = signature;\n    }\n    return tweetnacl__WEBPACK_IMPORTED_MODULE_0__.sign.detached.verify(message, bytes, this.toRawBytes());\n  }\n}\nEd25519PublicKey.SIZE = PUBLIC_KEY_SIZE;\n\n//# sourceMappingURL=publickey.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2tleXBhaXJzL2VkMjU1MTkvcHVibGlja2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUNUO0FBQzJDO0FBQ1U7QUFDUDtBQUMzRTtBQUNBLCtCQUErQixpRUFBUztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvREFBTztBQUN6QixNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsaUJBQWlCLGFBQWEsaUJBQWlCO0FBQzdGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyx1RkFBd0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0ZBQXdCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0VBQVU7QUFDckI7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxXQUFXLDJDQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL2tleXBhaXJzL2VkMjU1MTkvcHVibGlja2V5LmpzP2NhMmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUI2NCB9IGZyb20gXCJAbXlzdGVuL2Jjc1wiO1xuaW1wb3J0IG5hY2wgZnJvbSBcInR3ZWV0bmFjbFwiO1xuaW1wb3J0IHsgYnl0ZXNFcXVhbCwgUHVibGljS2V5IH0gZnJvbSBcIi4uLy4uL2NyeXB0b2dyYXBoeS9wdWJsaWNrZXkuanNcIjtcbmltcG9ydCB7IFNJR05BVFVSRV9TQ0hFTUVfVE9fRkxBRyB9IGZyb20gXCIuLi8uLi9jcnlwdG9ncmFwaHkvc2lnbmF0dXJlLXNjaGVtZS5qc1wiO1xuaW1wb3J0IHsgcGFyc2VTZXJpYWxpemVkU2lnbmF0dXJlIH0gZnJvbSBcIi4uLy4uL2NyeXB0b2dyYXBoeS9zaWduYXR1cmUuanNcIjtcbmNvbnN0IFBVQkxJQ19LRVlfU0laRSA9IDMyO1xuY2xhc3MgRWQyNTUxOVB1YmxpY0tleSBleHRlbmRzIFB1YmxpY0tleSB7XG4gIC8qKlxuICAgKiBDcmVhdGUgYSBuZXcgRWQyNTUxOVB1YmxpY0tleSBvYmplY3RcbiAgICogQHBhcmFtIHZhbHVlIGVkMjU1MTkgcHVibGljIGtleSBhcyBidWZmZXIgb3IgYmFzZS02NCBlbmNvZGVkIHN0cmluZ1xuICAgKi9cbiAgY29uc3RydWN0b3IodmFsdWUpIHtcbiAgICBzdXBlcigpO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHRoaXMuZGF0YSA9IGZyb21CNjQodmFsdWUpO1xuICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICB0aGlzLmRhdGEgPSB2YWx1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5kYXRhID0gVWludDhBcnJheS5mcm9tKHZhbHVlKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuZGF0YS5sZW5ndGggIT09IFBVQkxJQ19LRVlfU0laRSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgSW52YWxpZCBwdWJsaWMga2V5IGlucHV0LiBFeHBlY3RlZCAke1BVQkxJQ19LRVlfU0laRX0gYnl0ZXMsIGdvdCAke3RoaXMuZGF0YS5sZW5ndGh9YFxuICAgICAgKTtcbiAgICB9XG4gIH1cbiAgLyoqXG4gICAqIENoZWNrcyBpZiB0d28gRWQyNTUxOSBwdWJsaWMga2V5cyBhcmUgZXF1YWxcbiAgICovXG4gIGVxdWFscyhwdWJsaWNLZXkpIHtcbiAgICByZXR1cm4gc3VwZXIuZXF1YWxzKHB1YmxpY0tleSk7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgYnl0ZSBhcnJheSByZXByZXNlbnRhdGlvbiBvZiB0aGUgRWQyNTUxOSBwdWJsaWMga2V5XG4gICAqL1xuICB0b1Jhd0J5dGVzKCkge1xuICAgIHJldHVybiB0aGlzLmRhdGE7XG4gIH1cbiAgLyoqXG4gICAqIFJldHVybiB0aGUgU3VpIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoaXMgRWQyNTUxOSBwdWJsaWMga2V5XG4gICAqL1xuICBmbGFnKCkge1xuICAgIHJldHVybiBTSUdOQVRVUkVfU0NIRU1FX1RPX0ZMQUdbXCJFRDI1NTE5XCJdO1xuICB9XG4gIC8qKlxuICAgKiBWZXJpZmllcyB0aGF0IHRoZSBzaWduYXR1cmUgaXMgdmFsaWQgZm9yIGZvciB0aGUgcHJvdmlkZWQgbWVzc2FnZVxuICAgKi9cbiAgYXN5bmMgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgIGxldCBieXRlcztcbiAgICBpZiAodHlwZW9mIHNpZ25hdHVyZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgY29uc3QgcGFyc2VkID0gcGFyc2VTZXJpYWxpemVkU2lnbmF0dXJlKHNpZ25hdHVyZSk7XG4gICAgICBpZiAocGFyc2VkLnNpZ25hdHVyZVNjaGVtZSAhPT0gXCJFRDI1NTE5XCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBzaWduYXR1cmUgc2NoZW1lXCIpO1xuICAgICAgfVxuICAgICAgaWYgKCFieXRlc0VxdWFsKHRoaXMudG9SYXdCeXRlcygpLCBwYXJzZWQucHVibGljS2V5KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTaWduYXR1cmUgZG9lcyBub3QgbWF0Y2ggcHVibGljIGtleVwiKTtcbiAgICAgIH1cbiAgICAgIGJ5dGVzID0gcGFyc2VkLnNpZ25hdHVyZTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnl0ZXMgPSBzaWduYXR1cmU7XG4gICAgfVxuICAgIHJldHVybiBuYWNsLnNpZ24uZGV0YWNoZWQudmVyaWZ5KG1lc3NhZ2UsIGJ5dGVzLCB0aGlzLnRvUmF3Qnl0ZXMoKSk7XG4gIH1cbn1cbkVkMjU1MTlQdWJsaWNLZXkuU0laRSA9IFBVQkxJQ19LRVlfU0laRTtcbmV4cG9ydCB7XG4gIEVkMjU1MTlQdWJsaWNLZXlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wdWJsaWNrZXkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/keypairs/ed25519/publickey.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Inputs.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/Inputs.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BuilderCallArg: () => (/* binding */ BuilderCallArg),\n/* harmony export */   Inputs: () => (/* binding */ Inputs),\n/* harmony export */   ObjectCallArg: () => (/* binding */ ObjectCallArg),\n/* harmony export */   PureCallArg: () => (/* binding */ PureCallArg),\n/* harmony export */   SuiObjectRef: () => (/* binding */ SuiObjectRef),\n/* harmony export */   getIdFromCallArg: () => (/* binding */ getIdFromCallArg),\n/* harmony export */   getSharedObjectInput: () => (/* binding */ getSharedObjectInput),\n/* harmony export */   isMutableSharedObjectInput: () => (/* binding */ isMutableSharedObjectInput),\n/* harmony export */   isSharedObjectInput: () => (/* binding */ isSharedObjectInput)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs-type.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superstruct */ \"(ssr)/../../node_modules/superstruct/dist/index.mjs\");\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n\n\n\n\nconst SuiObjectRef = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  /** Base64 string representing the object digest */\n  digest: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  /** Hex code as string representing the object id */\n  objectId: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  /** Object version */\n  version: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.number)(), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.bigint)()])\n});\nconst ObjectArg = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ ImmOrOwned: SuiObjectRef }),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n    Shared: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n      objectId: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n      initialSharedVersion: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)(), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)()]),\n      mutable: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.boolean)()\n    })\n  }),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ Receiving: SuiObjectRef })\n]);\nconst PureCallArg = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ Pure: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)()) });\nconst ObjectCallArg = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ Object: ObjectArg });\nconst BuilderCallArg = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([PureCallArg, ObjectCallArg]);\nfunction Pure(data, type) {\n  return {\n    Pure: Array.from(\n      data instanceof Uint8Array ? data : (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.isSerializedBcs)(data) ? data.toBytes() : (\n        // NOTE: We explicitly set this to be growable to infinity, because we have maxSize validation at the builder-level:\n        _bcs_index_js__WEBPACK_IMPORTED_MODULE_2__.bcs.ser(type, data, { maxSize: Infinity }).toBytes()\n      )\n    )\n  };\n}\nconst Inputs = {\n  Pure,\n  ObjectRef({ objectId, digest, version }) {\n    return {\n      Object: {\n        ImmOrOwned: {\n          digest,\n          version,\n          objectId: (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(objectId)\n        }\n      }\n    };\n  },\n  SharedObjectRef({ objectId, mutable, initialSharedVersion }) {\n    return {\n      Object: {\n        Shared: {\n          mutable,\n          initialSharedVersion,\n          objectId: (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(objectId)\n        }\n      }\n    };\n  },\n  ReceivingRef({ objectId, digest, version }) {\n    return {\n      Object: {\n        Receiving: {\n          digest,\n          version,\n          objectId: (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(objectId)\n        }\n      }\n    };\n  }\n};\nfunction getIdFromCallArg(arg) {\n  if (typeof arg === \"string\") {\n    return (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(arg);\n  }\n  if (\"ImmOrOwned\" in arg.Object) {\n    return (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(arg.Object.ImmOrOwned.objectId);\n  }\n  if (\"Receiving\" in arg.Object) {\n    return (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(arg.Object.Receiving.objectId);\n  }\n  return (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(arg.Object.Shared.objectId);\n}\nfunction getSharedObjectInput(arg) {\n  return typeof arg === \"object\" && \"Object\" in arg && \"Shared\" in arg.Object ? arg.Object.Shared : void 0;\n}\nfunction isSharedObjectInput(arg) {\n  return !!getSharedObjectInput(arg);\n}\nfunction isMutableSharedObjectInput(arg) {\n  return getSharedObjectInput(arg)?.mutable ?? false;\n}\n\n//# sourceMappingURL=Inputs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy9JbnB1dHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QztBQUMrQztBQUN2RDtBQUNzQjtBQUM1RCxxQkFBcUIsbURBQU07QUFDM0I7QUFDQSxVQUFVLG1EQUFNO0FBQ2hCO0FBQ0EsWUFBWSxtREFBTTtBQUNsQjtBQUNBLFdBQVcsa0RBQUssRUFBRSxtREFBTSxJQUFJLG1EQUFNLElBQUksbURBQU07QUFDNUMsQ0FBQztBQUNELGtCQUFrQixrREFBSztBQUN2QixFQUFFLG1EQUFNLEdBQUcsMEJBQTBCO0FBQ3JDLEVBQUUsbURBQU07QUFDUixZQUFZLG1EQUFNO0FBQ2xCLGdCQUFnQixtREFBTTtBQUN0Qiw0QkFBNEIsa0RBQUssRUFBRSxvREFBTyxJQUFJLG1EQUFNO0FBQ3BELGVBQWUsb0RBQU87QUFDdEIsS0FBSztBQUNMLEdBQUc7QUFDSCxFQUFFLG1EQUFNLEdBQUcseUJBQXlCO0FBQ3BDO0FBQ0Esb0JBQW9CLG1EQUFNLEdBQUcsTUFBTSxrREFBSyxDQUFDLG9EQUFPLEtBQUs7QUFDckQsc0JBQXNCLG1EQUFNLEdBQUcsbUJBQW1CO0FBQ2xELHVCQUF1QixrREFBSztBQUM1QjtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsNERBQWU7QUFDekQ7QUFDQSxRQUFRLDhDQUFHLG1CQUFtQixtQkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYywyQkFBMkI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3RUFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILG9CQUFvQix5Q0FBeUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3RUFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILGlCQUFpQiwyQkFBMkI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3RUFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdFQUFtQjtBQUM5QjtBQUNBO0FBQ0EsV0FBVyx3RUFBbUI7QUFDOUI7QUFDQTtBQUNBLFdBQVcsd0VBQW1CO0FBQzlCO0FBQ0EsU0FBUyx3RUFBbUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFXRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS90cmFuc2FjdGlvbnMvSW5wdXRzLmpzPzJjYjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTZXJpYWxpemVkQmNzIH0gZnJvbSBcIkBteXN0ZW4vYmNzXCI7XG5pbXBvcnQgeyBhcnJheSwgYmlnaW50LCBib29sZWFuLCBpbnRlZ2VyLCBudW1iZXIsIG9iamVjdCwgc3RyaW5nLCB1bmlvbiB9IGZyb20gXCJzdXBlcnN0cnVjdFwiO1xuaW1wb3J0IHsgYmNzIH0gZnJvbSBcIi4uL2Jjcy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplU3VpQWRkcmVzcyB9IGZyb20gXCIuLi91dGlscy9zdWktdHlwZXMuanNcIjtcbmNvbnN0IFN1aU9iamVjdFJlZiA9IG9iamVjdCh7XG4gIC8qKiBCYXNlNjQgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgb2JqZWN0IGRpZ2VzdCAqL1xuICBkaWdlc3Q6IHN0cmluZygpLFxuICAvKiogSGV4IGNvZGUgYXMgc3RyaW5nIHJlcHJlc2VudGluZyB0aGUgb2JqZWN0IGlkICovXG4gIG9iamVjdElkOiBzdHJpbmcoKSxcbiAgLyoqIE9iamVjdCB2ZXJzaW9uICovXG4gIHZlcnNpb246IHVuaW9uKFtudW1iZXIoKSwgc3RyaW5nKCksIGJpZ2ludCgpXSlcbn0pO1xuY29uc3QgT2JqZWN0QXJnID0gdW5pb24oW1xuICBvYmplY3QoeyBJbW1Pck93bmVkOiBTdWlPYmplY3RSZWYgfSksXG4gIG9iamVjdCh7XG4gICAgU2hhcmVkOiBvYmplY3Qoe1xuICAgICAgb2JqZWN0SWQ6IHN0cmluZygpLFxuICAgICAgaW5pdGlhbFNoYXJlZFZlcnNpb246IHVuaW9uKFtpbnRlZ2VyKCksIHN0cmluZygpXSksXG4gICAgICBtdXRhYmxlOiBib29sZWFuKClcbiAgICB9KVxuICB9KSxcbiAgb2JqZWN0KHsgUmVjZWl2aW5nOiBTdWlPYmplY3RSZWYgfSlcbl0pO1xuY29uc3QgUHVyZUNhbGxBcmcgPSBvYmplY3QoeyBQdXJlOiBhcnJheShpbnRlZ2VyKCkpIH0pO1xuY29uc3QgT2JqZWN0Q2FsbEFyZyA9IG9iamVjdCh7IE9iamVjdDogT2JqZWN0QXJnIH0pO1xuY29uc3QgQnVpbGRlckNhbGxBcmcgPSB1bmlvbihbUHVyZUNhbGxBcmcsIE9iamVjdENhbGxBcmddKTtcbmZ1bmN0aW9uIFB1cmUoZGF0YSwgdHlwZSkge1xuICByZXR1cm4ge1xuICAgIFB1cmU6IEFycmF5LmZyb20oXG4gICAgICBkYXRhIGluc3RhbmNlb2YgVWludDhBcnJheSA/IGRhdGEgOiBpc1NlcmlhbGl6ZWRCY3MoZGF0YSkgPyBkYXRhLnRvQnl0ZXMoKSA6IChcbiAgICAgICAgLy8gTk9URTogV2UgZXhwbGljaXRseSBzZXQgdGhpcyB0byBiZSBncm93YWJsZSB0byBpbmZpbml0eSwgYmVjYXVzZSB3ZSBoYXZlIG1heFNpemUgdmFsaWRhdGlvbiBhdCB0aGUgYnVpbGRlci1sZXZlbDpcbiAgICAgICAgYmNzLnNlcih0eXBlLCBkYXRhLCB7IG1heFNpemU6IEluZmluaXR5IH0pLnRvQnl0ZXMoKVxuICAgICAgKVxuICAgIClcbiAgfTtcbn1cbmNvbnN0IElucHV0cyA9IHtcbiAgUHVyZSxcbiAgT2JqZWN0UmVmKHsgb2JqZWN0SWQsIGRpZ2VzdCwgdmVyc2lvbiB9KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIE9iamVjdDoge1xuICAgICAgICBJbW1Pck93bmVkOiB7XG4gICAgICAgICAgZGlnZXN0LFxuICAgICAgICAgIHZlcnNpb24sXG4gICAgICAgICAgb2JqZWN0SWQ6IG5vcm1hbGl6ZVN1aUFkZHJlc3Mob2JqZWN0SWQpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9LFxuICBTaGFyZWRPYmplY3RSZWYoeyBvYmplY3RJZCwgbXV0YWJsZSwgaW5pdGlhbFNoYXJlZFZlcnNpb24gfSkge1xuICAgIHJldHVybiB7XG4gICAgICBPYmplY3Q6IHtcbiAgICAgICAgU2hhcmVkOiB7XG4gICAgICAgICAgbXV0YWJsZSxcbiAgICAgICAgICBpbml0aWFsU2hhcmVkVmVyc2lvbixcbiAgICAgICAgICBvYmplY3RJZDogbm9ybWFsaXplU3VpQWRkcmVzcyhvYmplY3RJZClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH0sXG4gIFJlY2VpdmluZ1JlZih7IG9iamVjdElkLCBkaWdlc3QsIHZlcnNpb24gfSkge1xuICAgIHJldHVybiB7XG4gICAgICBPYmplY3Q6IHtcbiAgICAgICAgUmVjZWl2aW5nOiB7XG4gICAgICAgICAgZGlnZXN0LFxuICAgICAgICAgIHZlcnNpb24sXG4gICAgICAgICAgb2JqZWN0SWQ6IG5vcm1hbGl6ZVN1aUFkZHJlc3Mob2JqZWN0SWQpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9O1xuICB9XG59O1xuZnVuY3Rpb24gZ2V0SWRGcm9tQ2FsbEFyZyhhcmcpIHtcbiAgaWYgKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIpIHtcbiAgICByZXR1cm4gbm9ybWFsaXplU3VpQWRkcmVzcyhhcmcpO1xuICB9XG4gIGlmIChcIkltbU9yT3duZWRcIiBpbiBhcmcuT2JqZWN0KSB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZVN1aUFkZHJlc3MoYXJnLk9iamVjdC5JbW1Pck93bmVkLm9iamVjdElkKTtcbiAgfVxuICBpZiAoXCJSZWNlaXZpbmdcIiBpbiBhcmcuT2JqZWN0KSB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZVN1aUFkZHJlc3MoYXJnLk9iamVjdC5SZWNlaXZpbmcub2JqZWN0SWQpO1xuICB9XG4gIHJldHVybiBub3JtYWxpemVTdWlBZGRyZXNzKGFyZy5PYmplY3QuU2hhcmVkLm9iamVjdElkKTtcbn1cbmZ1bmN0aW9uIGdldFNoYXJlZE9iamVjdElucHV0KGFyZykge1xuICByZXR1cm4gdHlwZW9mIGFyZyA9PT0gXCJvYmplY3RcIiAmJiBcIk9iamVjdFwiIGluIGFyZyAmJiBcIlNoYXJlZFwiIGluIGFyZy5PYmplY3QgPyBhcmcuT2JqZWN0LlNoYXJlZCA6IHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGlzU2hhcmVkT2JqZWN0SW5wdXQoYXJnKSB7XG4gIHJldHVybiAhIWdldFNoYXJlZE9iamVjdElucHV0KGFyZyk7XG59XG5mdW5jdGlvbiBpc011dGFibGVTaGFyZWRPYmplY3RJbnB1dChhcmcpIHtcbiAgcmV0dXJuIGdldFNoYXJlZE9iamVjdElucHV0KGFyZyk/Lm11dGFibGUgPz8gZmFsc2U7XG59XG5leHBvcnQge1xuICBCdWlsZGVyQ2FsbEFyZyxcbiAgSW5wdXRzLFxuICBPYmplY3RDYWxsQXJnLFxuICBQdXJlQ2FsbEFyZyxcbiAgU3VpT2JqZWN0UmVmLFxuICBnZXRJZEZyb21DYWxsQXJnLFxuICBnZXRTaGFyZWRPYmplY3RJbnB1dCxcbiAgaXNNdXRhYmxlU2hhcmVkT2JqZWN0SW5wdXQsXG4gIGlzU2hhcmVkT2JqZWN0SW5wdXRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbnB1dHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Inputs.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlock.js":
/*!***********************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlock.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionBlock: () => (/* binding */ TransactionBlock),\n/* harmony export */   isTransactionBlock: () => (/* binding */ isTransactionBlock)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs-type.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! superstruct */ \"(ssr)/../../node_modules/superstruct/dist/index.mjs\");\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _Inputs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Inputs.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Inputs.js\");\n/* harmony import */ var _pure_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./pure.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/pure.js\");\n/* harmony import */ var _serializer_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./serializer.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/serializer.js\");\n/* harmony import */ var _TransactionBlockData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransactionBlockData.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlockData.js\");\n/* harmony import */ var _Transactions_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Transactions.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Transactions.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar _blockData, _input, input_fn, _normalizeTransactionArgument, normalizeTransactionArgument_fn, _getConfig, getConfig_fn, _validate, validate_fn, _prepareGasPayment, prepareGasPayment_fn, _prepareGasPrice, prepareGasPrice_fn, _prepareTransactions, prepareTransactions_fn, _prepare, prepare_fn;\n\n\n\n\n\n\n\n\n\n\n\nconst DefaultOfflineLimits = {\n  maxPureArgumentSize: 16 * 1024,\n  maxTxGas: 5e10,\n  maxGasObjects: 256,\n  maxTxSizeBytes: 128 * 1024\n};\nfunction createTransactionResult(index) {\n  const baseResult = { kind: \"Result\", index };\n  const nestedResults = [];\n  const nestedResultFor = (resultIndex) => nestedResults[resultIndex] ?? (nestedResults[resultIndex] = {\n    kind: \"NestedResult\",\n    index,\n    resultIndex\n  });\n  return new Proxy(baseResult, {\n    set() {\n      throw new Error(\n        \"The transaction result is a proxy, and does not support setting properties directly\"\n      );\n    },\n    // TODO: Instead of making this return a concrete argument, we should ideally\n    // make it reference-based (so that this gets resolved at build-time), which\n    // allows re-ordering transactions.\n    get(target, property) {\n      if (property in target) {\n        return Reflect.get(target, property);\n      }\n      if (property === Symbol.iterator) {\n        return function* () {\n          let i = 0;\n          while (true) {\n            yield nestedResultFor(i);\n            i++;\n          }\n        };\n      }\n      if (typeof property === \"symbol\")\n        return;\n      const resultIndex = parseInt(property, 10);\n      if (Number.isNaN(resultIndex) || resultIndex < 0)\n        return;\n      return nestedResultFor(resultIndex);\n    }\n  });\n}\nfunction isReceivingType(normalizedType) {\n  const tag = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractStructTag)(normalizedType);\n  if (tag) {\n    return tag.Struct.address === \"0x2\" && tag.Struct.module === \"transfer\" && tag.Struct.name === \"Receiving\";\n  }\n  return false;\n}\nfunction expectClient(options) {\n  if (!options.client) {\n    throw new Error(\n      `No provider passed to Transaction#build, but transaction data was not sufficient to build offline.`\n    );\n  }\n  return options.client;\n}\nconst TRANSACTION_BRAND = Symbol.for(\"@mysten/transaction\");\nconst LIMITS = {\n  // The maximum gas that is allowed.\n  maxTxGas: \"max_tx_gas\",\n  // The maximum number of gas objects that can be selected for one transaction.\n  maxGasObjects: \"max_gas_payment_objects\",\n  // The maximum size (in bytes) that the transaction can be:\n  maxTxSizeBytes: \"max_tx_size_bytes\",\n  // The maximum size (in bytes) that pure arguments can be:\n  maxPureArgumentSize: \"max_pure_argument_size\"\n};\nconst GAS_SAFE_OVERHEAD = 1000n;\nconst MAX_OBJECTS_PER_FETCH = 50;\nconst chunk = (arr, size) => Array.from(\n  { length: Math.ceil(arr.length / size) },\n  (_, i) => arr.slice(i * size, i * size + size)\n);\nfunction isTransactionBlock(obj) {\n  return !!obj && typeof obj === \"object\" && obj[TRANSACTION_BRAND] === true;\n}\nconst _TransactionBlock = class {\n  constructor(transaction) {\n    /**\n     * Dynamically create a new input, which is separate from the `input`. This is important\n     * for generated clients to be able to define unique inputs that are non-overlapping with the\n     * defined inputs.\n     *\n     * For `Uint8Array` type automatically convert the input into a `Pure` CallArg, since this\n     * is the format required for custom serialization.\n     *\n     */\n    __privateAdd(this, _input);\n    __privateAdd(this, _normalizeTransactionArgument);\n    __privateAdd(this, _getConfig);\n    __privateAdd(this, _validate);\n    // The current default is just picking _all_ coins we can which may not be ideal.\n    __privateAdd(this, _prepareGasPayment);\n    __privateAdd(this, _prepareGasPrice);\n    __privateAdd(this, _prepareTransactions);\n    /**\n     * Prepare the transaction by valdiating the transaction data and resolving all inputs\n     * so that it can be built into bytes.\n     */\n    __privateAdd(this, _prepare);\n    __privateAdd(this, _blockData, void 0);\n    __privateSet(this, _blockData, new _TransactionBlockData_js__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockDataBuilder(\n      transaction ? transaction.blockData : void 0\n    ));\n  }\n  /**\n   * Converts from a serialize transaction kind (built with `build({ onlyTransactionKind: true })`) to a `Transaction` class.\n   * Supports either a byte array, or base64-encoded bytes.\n   */\n  static fromKind(serialized) {\n    const tx = new _TransactionBlock();\n    __privateSet(tx, _blockData, _TransactionBlockData_js__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockDataBuilder.fromKindBytes(\n      typeof serialized === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.fromB64)(serialized) : serialized\n    ));\n    return tx;\n  }\n  /**\n   * Converts from a serialized transaction format to a `Transaction` class.\n   * There are two supported serialized formats:\n   * - A string returned from `Transaction#serialize`. The serialized format must be compatible, or it will throw an error.\n   * - A byte array (or base64-encoded bytes) containing BCS transaction data.\n   */\n  static from(serialized) {\n    const tx = new _TransactionBlock();\n    if (typeof serialized !== \"string\" || !serialized.startsWith(\"{\")) {\n      __privateSet(tx, _blockData, _TransactionBlockData_js__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockDataBuilder.fromBytes(\n        typeof serialized === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_2__.fromB64)(serialized) : serialized\n      ));\n    } else {\n      __privateSet(tx, _blockData, _TransactionBlockData_js__WEBPACK_IMPORTED_MODULE_1__.TransactionBlockDataBuilder.restore(JSON.parse(serialized)));\n    }\n    return tx;\n  }\n  setSender(sender) {\n    __privateGet(this, _blockData).sender = sender;\n  }\n  /**\n   * Sets the sender only if it has not already been set.\n   * This is useful for sponsored transaction flows where the sender may not be the same as the signer address.\n   */\n  setSenderIfNotSet(sender) {\n    if (!__privateGet(this, _blockData).sender) {\n      __privateGet(this, _blockData).sender = sender;\n    }\n  }\n  setExpiration(expiration) {\n    __privateGet(this, _blockData).expiration = expiration;\n  }\n  setGasPrice(price) {\n    __privateGet(this, _blockData).gasConfig.price = String(price);\n  }\n  setGasBudget(budget) {\n    __privateGet(this, _blockData).gasConfig.budget = String(budget);\n  }\n  setGasOwner(owner) {\n    __privateGet(this, _blockData).gasConfig.owner = owner;\n  }\n  setGasPayment(payments) {\n    __privateGet(this, _blockData).gasConfig.payment = payments.map((payment) => (0,superstruct__WEBPACK_IMPORTED_MODULE_3__.mask)(payment, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.SuiObjectRef));\n  }\n  /** Get a snapshot of the transaction data, in JSON form: */\n  get blockData() {\n    return __privateGet(this, _blockData).snapshot();\n  }\n  // Used to brand transaction classes so that they can be identified, even between multiple copies\n  // of the builder.\n  get [TRANSACTION_BRAND]() {\n    return true;\n  }\n  // Temporary workaround for the wallet interface accidentally serializing transaction blocks via postMessage\n  get pure() {\n    Object.defineProperty(this, \"pure\", {\n      enumerable: false,\n      value: (0,_pure_js__WEBPACK_IMPORTED_MODULE_5__.createPure)((value, type) => {\n        if ((0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_6__.isSerializedBcs)(value)) {\n          return __privateMethod(this, _input, input_fn).call(this, \"pure\", {\n            Pure: Array.from(value.toBytes())\n          });\n        }\n        return __privateMethod(this, _input, input_fn).call(this, \"pure\", value instanceof Uint8Array ? _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.Pure(value) : type ? _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.Pure(value, type) : value);\n      })\n    });\n    return this.pure;\n  }\n  /** Returns an argument for the gas coin, to be used in a transaction. */\n  get gas() {\n    return { kind: \"GasCoin\" };\n  }\n  /**\n   * Add a new object input to the transaction.\n   */\n  object(value) {\n    if (typeof value === \"object\" && \"kind\" in value) {\n      return value;\n    }\n    const id = (0,_Inputs_js__WEBPACK_IMPORTED_MODULE_4__.getIdFromCallArg)(value);\n    const inserted = __privateGet(this, _blockData).inputs.find(\n      (i) => i.type === \"object\" && id === (0,_Inputs_js__WEBPACK_IMPORTED_MODULE_4__.getIdFromCallArg)(i.value)\n    );\n    if (inserted && (0,superstruct__WEBPACK_IMPORTED_MODULE_3__.is)(inserted.value, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.ObjectCallArg) && \"Shared\" in inserted.value.Object && (0,superstruct__WEBPACK_IMPORTED_MODULE_3__.is)(value, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.ObjectCallArg) && \"Shared\" in value.Object) {\n      inserted.value.Object.Shared.mutable = inserted.value.Object.Shared.mutable || value.Object.Shared.mutable;\n    }\n    return inserted ?? __privateMethod(this, _input, input_fn).call(this, \"object\", typeof value === \"string\" ? (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_7__.normalizeSuiAddress)(value) : value);\n  }\n  /**\n   * Add a new object input to the transaction using the fully-resolved object reference.\n   * If you only have an object ID, use `builder.object(id)` instead.\n   */\n  objectRef(...args) {\n    return this.object(_Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.ObjectRef(...args));\n  }\n  /**\n   * Add a new receiving input to the transaction using the fully-resolved object reference.\n   * If you only have an object ID, use `builder.object(id)` instead.\n   */\n  receivingRef(...args) {\n    return this.object(_Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.ReceivingRef(...args));\n  }\n  /**\n   * Add a new shared object input to the transaction using the fully-resolved shared object reference.\n   * If you only have an object ID, use `builder.object(id)` instead.\n   */\n  sharedObjectRef(...args) {\n    return this.object(_Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.SharedObjectRef(...args));\n  }\n  /** Add a transaction to the transaction block. */\n  add(transaction) {\n    const index = __privateGet(this, _blockData).transactions.push(transaction);\n    return createTransactionResult(index - 1);\n  }\n  // Method shorthands:\n  splitCoins(coin, amounts) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.SplitCoins(\n        typeof coin === \"string\" ? this.object(coin) : coin,\n        amounts.map(\n          (amount) => typeof amount === \"number\" || typeof amount === \"bigint\" || typeof amount === \"string\" ? this.pure.u64(amount) : __privateMethod(this, _normalizeTransactionArgument, normalizeTransactionArgument_fn).call(this, amount)\n        )\n      )\n    );\n  }\n  mergeCoins(destination, sources) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.MergeCoins(\n        typeof destination === \"string\" ? this.object(destination) : destination,\n        sources.map((src) => typeof src === \"string\" ? this.object(src) : src)\n      )\n    );\n  }\n  publish({ modules, dependencies }) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.Publish({\n        modules,\n        dependencies\n      })\n    );\n  }\n  upgrade({\n    modules,\n    dependencies,\n    packageId,\n    ticket\n  }) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.Upgrade({\n        modules,\n        dependencies,\n        packageId,\n        ticket: typeof ticket === \"string\" ? this.object(ticket) : ticket\n      })\n    );\n  }\n  moveCall({\n    arguments: args,\n    typeArguments,\n    target\n  }) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.MoveCall({\n        arguments: args?.map((arg) => __privateMethod(this, _normalizeTransactionArgument, normalizeTransactionArgument_fn).call(this, arg)),\n        typeArguments,\n        target\n      })\n    );\n  }\n  transferObjects(objects, address) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.TransferObjects(\n        objects.map((obj) => typeof obj === \"string\" ? this.object(obj) : obj),\n        typeof address === \"string\" ? this.pure.address(address) : __privateMethod(this, _normalizeTransactionArgument, normalizeTransactionArgument_fn).call(this, address)\n      )\n    );\n  }\n  makeMoveVec({\n    type,\n    objects\n  }) {\n    return this.add(\n      _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.Transactions.MakeMoveVec({\n        type,\n        objects: objects.map((obj) => typeof obj === \"string\" ? this.object(obj) : obj)\n      })\n    );\n  }\n  /**\n   * Serialize the transaction to a string so that it can be sent to a separate context.\n   * This is different from `build` in that it does not serialize to BCS bytes, and instead\n   * uses a separate format that is unique to the transaction builder. This allows\n   * us to serialize partially-complete transactions, that can then be completed and\n   * built in a separate context.\n   *\n   * For example, a dapp can construct a transaction, but not provide gas objects\n   * or a gas budget. The transaction then can be sent to the wallet, where this\n   * information is automatically filled in (e.g. by querying for coin objects\n   * and performing a dry run).\n   */\n  serialize() {\n    return JSON.stringify(__privateGet(this, _blockData).snapshot());\n  }\n  /** Build the transaction to BCS bytes, and sign it with the provided keypair. */\n  async sign(options) {\n    const { signer, ...buildOptions } = options;\n    const bytes = await this.build(buildOptions);\n    return signer.signTransactionBlock(bytes);\n  }\n  /** Build the transaction to BCS bytes. */\n  async build(options = {}) {\n    await __privateMethod(this, _prepare, prepare_fn).call(this, options);\n    return __privateGet(this, _blockData).build({\n      maxSizeBytes: __privateMethod(this, _getConfig, getConfig_fn).call(this, \"maxTxSizeBytes\", options),\n      onlyTransactionKind: options.onlyTransactionKind\n    });\n  }\n  /** Derive transaction digest */\n  async getDigest(options = {}) {\n    await __privateMethod(this, _prepare, prepare_fn).call(this, options);\n    return __privateGet(this, _blockData).getDigest();\n  }\n};\nlet TransactionBlock = _TransactionBlock;\n_blockData = new WeakMap();\n_input = new WeakSet();\ninput_fn = function(type, value) {\n  const index = __privateGet(this, _blockData).inputs.length;\n  const input = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.create)(\n    {\n      kind: \"Input\",\n      // bigints can't be serialized to JSON, so just string-convert them here:\n      value: typeof value === \"bigint\" ? String(value) : value,\n      index,\n      type\n    },\n    _Transactions_js__WEBPACK_IMPORTED_MODULE_8__.TransactionBlockInput\n  );\n  __privateGet(this, _blockData).inputs.push(input);\n  return input;\n};\n_normalizeTransactionArgument = new WeakSet();\nnormalizeTransactionArgument_fn = function(arg) {\n  if ((0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_6__.isSerializedBcs)(arg)) {\n    return this.pure(arg);\n  }\n  return arg;\n};\n_getConfig = new WeakSet();\ngetConfig_fn = function(key, { protocolConfig, limits }) {\n  if (limits && typeof limits[key] === \"number\") {\n    return limits[key];\n  }\n  if (!protocolConfig) {\n    return DefaultOfflineLimits[key];\n  }\n  const attribute = protocolConfig?.attributes[LIMITS[key]];\n  if (!attribute) {\n    throw new Error(`Missing expected protocol config: \"${LIMITS[key]}\"`);\n  }\n  const value = \"u64\" in attribute ? attribute.u64 : \"u32\" in attribute ? attribute.u32 : attribute.f64;\n  if (!value) {\n    throw new Error(`Unexpected protocol config value found for: \"${LIMITS[key]}\"`);\n  }\n  return Number(value);\n};\n_validate = new WeakSet();\nvalidate_fn = function(options) {\n  const maxPureArgumentSize = __privateMethod(this, _getConfig, getConfig_fn).call(this, \"maxPureArgumentSize\", options);\n  __privateGet(this, _blockData).inputs.forEach((input, index) => {\n    if ((0,superstruct__WEBPACK_IMPORTED_MODULE_3__.is)(input.value, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.PureCallArg)) {\n      if (input.value.Pure.length > maxPureArgumentSize) {\n        throw new Error(\n          `Input at index ${index} is too large, max pure input size is ${maxPureArgumentSize} bytes, got ${input.value.Pure.length} bytes`\n        );\n      }\n    }\n  });\n};\n_prepareGasPayment = new WeakSet();\nprepareGasPayment_fn = async function(options) {\n  if (__privateGet(this, _blockData).gasConfig.payment) {\n    const maxGasObjects = __privateMethod(this, _getConfig, getConfig_fn).call(this, \"maxGasObjects\", options);\n    if (__privateGet(this, _blockData).gasConfig.payment.length > maxGasObjects) {\n      throw new Error(`Payment objects exceed maximum amount: ${maxGasObjects}`);\n    }\n  }\n  if (options.onlyTransactionKind || __privateGet(this, _blockData).gasConfig.payment) {\n    return;\n  }\n  const gasOwner = __privateGet(this, _blockData).gasConfig.owner ?? __privateGet(this, _blockData).sender;\n  const coins = await expectClient(options).getCoins({\n    owner: gasOwner,\n    coinType: _utils_index_js__WEBPACK_IMPORTED_MODULE_9__.SUI_TYPE_ARG\n  });\n  const paymentCoins = coins.data.filter((coin) => {\n    const matchingInput = __privateGet(this, _blockData).inputs.find((input) => {\n      if ((0,superstruct__WEBPACK_IMPORTED_MODULE_3__.is)(input.value, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.BuilderCallArg) && \"Object\" in input.value && \"ImmOrOwned\" in input.value.Object) {\n        return coin.coinObjectId === input.value.Object.ImmOrOwned.objectId;\n      }\n      return false;\n    });\n    return !matchingInput;\n  }).slice(0, __privateMethod(this, _getConfig, getConfig_fn).call(this, \"maxGasObjects\", options) - 1).map((coin) => ({\n    objectId: coin.coinObjectId,\n    digest: coin.digest,\n    version: coin.version\n  }));\n  if (!paymentCoins.length) {\n    throw new Error(\"No valid gas coins found for the transaction.\");\n  }\n  this.setGasPayment(paymentCoins);\n};\n_prepareGasPrice = new WeakSet();\nprepareGasPrice_fn = async function(options) {\n  if (options.onlyTransactionKind || __privateGet(this, _blockData).gasConfig.price) {\n    return;\n  }\n  this.setGasPrice(await expectClient(options).getReferenceGasPrice());\n};\n_prepareTransactions = new WeakSet();\nprepareTransactions_fn = async function(options) {\n  const { inputs, transactions } = __privateGet(this, _blockData);\n  const moveModulesToResolve = [];\n  const objectsToResolve = [];\n  inputs.forEach((input) => {\n    if (input.type === \"object\" && typeof input.value === \"string\") {\n      objectsToResolve.push({ id: (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_7__.normalizeSuiAddress)(input.value), input });\n      return;\n    }\n  });\n  transactions.forEach((transaction) => {\n    if (transaction.kind === \"MoveCall\") {\n      const needsResolution = transaction.arguments.some(\n        (arg) => arg.kind === \"Input\" && !(0,superstruct__WEBPACK_IMPORTED_MODULE_3__.is)(inputs[arg.index].value, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.BuilderCallArg)\n      );\n      if (needsResolution) {\n        moveModulesToResolve.push(transaction);\n      }\n    }\n    if (transaction.kind === \"SplitCoins\") {\n      transaction.amounts.forEach((amount) => {\n        if (amount.kind === \"Input\") {\n          const input = inputs[amount.index];\n          if (typeof input.value !== \"object\") {\n            input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.Pure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_10__.bcs.U64.serialize(input.value));\n          }\n        }\n      });\n    }\n    if (transaction.kind === \"TransferObjects\") {\n      if (transaction.address.kind === \"Input\") {\n        const input = inputs[transaction.address.index];\n        if (typeof input.value !== \"object\") {\n          input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.Pure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_10__.bcs.Address.serialize(input.value));\n        }\n      }\n    }\n  });\n  if (moveModulesToResolve.length) {\n    await Promise.all(\n      moveModulesToResolve.map(async (moveCall) => {\n        const [packageId, moduleName, functionName] = moveCall.target.split(\"::\");\n        const normalized = await expectClient(options).getNormalizedMoveFunction({\n          package: (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_7__.normalizeSuiObjectId)(packageId),\n          module: moduleName,\n          function: functionName\n        });\n        const hasTxContext = normalized.parameters.length > 0 && (0,_serializer_js__WEBPACK_IMPORTED_MODULE_11__.isTxContext)(normalized.parameters.at(-1));\n        const params = hasTxContext ? normalized.parameters.slice(0, normalized.parameters.length - 1) : normalized.parameters;\n        if (params.length !== moveCall.arguments.length) {\n          throw new Error(\"Incorrect number of arguments.\");\n        }\n        params.forEach((param, i) => {\n          const arg = moveCall.arguments[i];\n          if (arg.kind !== \"Input\")\n            return;\n          const input = inputs[arg.index];\n          if ((0,superstruct__WEBPACK_IMPORTED_MODULE_3__.is)(input.value, _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.BuilderCallArg))\n            return;\n          const inputValue = input.value;\n          const serType = (0,_serializer_js__WEBPACK_IMPORTED_MODULE_11__.getPureSerializationType)(param, inputValue);\n          if (serType) {\n            input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.Pure(inputValue, serType);\n            return;\n          }\n          const structVal = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractStructTag)(param);\n          if (structVal != null || typeof param === \"object\" && \"TypeParameter\" in param) {\n            if (typeof inputValue !== \"string\") {\n              throw new Error(\n                `Expect the argument to be an object id string, got ${JSON.stringify(\n                  inputValue,\n                  null,\n                  2\n                )}`\n              );\n            }\n            objectsToResolve.push({\n              id: inputValue,\n              input,\n              normalizedType: param\n            });\n            return;\n          }\n          throw new Error(\n            `Unknown call arg type ${JSON.stringify(param, null, 2)} for value ${JSON.stringify(\n              inputValue,\n              null,\n              2\n            )}`\n          );\n        });\n      })\n    );\n  }\n  if (objectsToResolve.length) {\n    const dedupedIds = [...new Set(objectsToResolve.map(({ id }) => id))];\n    const objectChunks = chunk(dedupedIds, MAX_OBJECTS_PER_FETCH);\n    const objects = (await Promise.all(\n      objectChunks.map(\n        (chunk2) => expectClient(options).multiGetObjects({\n          ids: chunk2,\n          options: { showOwner: true }\n        })\n      )\n    )).flat();\n    let objectsById = new Map(\n      dedupedIds.map((id, index) => {\n        return [id, objects[index]];\n      })\n    );\n    const invalidObjects = Array.from(objectsById).filter(([_, obj]) => obj.error).map(([id, _]) => id);\n    if (invalidObjects.length) {\n      throw new Error(`The following input objects are invalid: ${invalidObjects.join(\", \")}`);\n    }\n    objectsToResolve.forEach(({ id, input, normalizedType }) => {\n      const object = objectsById.get(id);\n      const owner = object.data?.owner;\n      const initialSharedVersion = owner && typeof owner === \"object\" && \"Shared\" in owner ? owner.Shared.initial_shared_version : void 0;\n      if (initialSharedVersion) {\n        const isByValue = normalizedType != null && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractMutableReference)(normalizedType) == null && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractReference)(normalizedType) == null;\n        const mutable = (0,_Inputs_js__WEBPACK_IMPORTED_MODULE_4__.isMutableSharedObjectInput)(input.value) || isByValue || normalizedType != null && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.extractMutableReference)(normalizedType) != null;\n        input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.SharedObjectRef({\n          objectId: id,\n          initialSharedVersion,\n          mutable\n        });\n      } else if (normalizedType && isReceivingType(normalizedType)) {\n        input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.ReceivingRef(object.data);\n      } else {\n        input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_4__.Inputs.ObjectRef(object.data);\n      }\n    });\n  }\n};\n_prepare = new WeakSet();\nprepare_fn = async function(options) {\n  if (!options.onlyTransactionKind && !__privateGet(this, _blockData).sender) {\n    throw new Error(\"Missing transaction sender\");\n  }\n  if (!options.protocolConfig && !options.limits && options.client) {\n    options.protocolConfig = await options.client.getProtocolConfig();\n  }\n  await Promise.all([__privateMethod(this, _prepareGasPrice, prepareGasPrice_fn).call(this, options), __privateMethod(this, _prepareTransactions, prepareTransactions_fn).call(this, options)]);\n  if (!options.onlyTransactionKind) {\n    await __privateMethod(this, _prepareGasPayment, prepareGasPayment_fn).call(this, options);\n    if (!__privateGet(this, _blockData).gasConfig.budget) {\n      const dryRunResult = await expectClient(options).dryRunTransactionBlock({\n        transactionBlock: __privateGet(this, _blockData).build({\n          maxSizeBytes: __privateMethod(this, _getConfig, getConfig_fn).call(this, \"maxTxSizeBytes\", options),\n          overrides: {\n            gasConfig: {\n              budget: String(__privateMethod(this, _getConfig, getConfig_fn).call(this, \"maxTxGas\", options)),\n              payment: []\n            }\n          }\n        })\n      });\n      if (dryRunResult.effects.status.status !== \"success\") {\n        throw new Error(\n          `Dry run failed, could not automatically determine a budget: ${dryRunResult.effects.status.error}`,\n          { cause: dryRunResult }\n        );\n      }\n      const safeOverhead = GAS_SAFE_OVERHEAD * BigInt(this.blockData.gasConfig.price || 1n);\n      const baseComputationCostWithOverhead = BigInt(dryRunResult.effects.gasUsed.computationCost) + safeOverhead;\n      const gasBudget = baseComputationCostWithOverhead + BigInt(dryRunResult.effects.gasUsed.storageCost) - BigInt(dryRunResult.effects.gasUsed.storageRebate);\n      this.setGasBudget(\n        gasBudget > baseComputationCostWithOverhead ? gasBudget : baseComputationCostWithOverhead\n      );\n    }\n  }\n  __privateMethod(this, _validate, validate_fn).call(this, options);\n};\n\n//# sourceMappingURL=TransactionBlock.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlock.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlockData.js":
/*!***************************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlockData.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SerializedTransactionDataBuilder: () => (/* binding */ SerializedTransactionDataBuilder),\n/* harmony export */   TransactionBlockDataBuilder: () => (/* binding */ TransactionBlockDataBuilder),\n/* harmony export */   TransactionExpiration: () => (/* binding */ TransactionExpiration)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superstruct */ \"(ssr)/../../node_modules/superstruct/dist/index.mjs\");\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _hash_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hash.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/hash.js\");\n/* harmony import */ var _Inputs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Inputs.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Inputs.js\");\n/* harmony import */ var _Transactions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transactions.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Transactions.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js\");\n\n\n\n\n\n\n\n\nconst TransactionExpiration = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)(\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.nullable)(\n    (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ Epoch: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)() }), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ None: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(true), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(null)]) })])\n  )\n);\nconst StringEncodedBigint = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.define)(\"StringEncodedBigint\", (val) => {\n  if (![\"string\", \"number\", \"bigint\"].includes(typeof val))\n    return false;\n  try {\n    BigInt(val);\n    return true;\n  } catch {\n    return false;\n  }\n});\nconst GasConfig = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  budget: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)(StringEncodedBigint),\n  price: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)(StringEncodedBigint),\n  payment: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(_Inputs_js__WEBPACK_IMPORTED_MODULE_1__.SuiObjectRef)),\n  owner: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)())\n});\nconst SerializedTransactionDataBuilder = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  version: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(1),\n  sender: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)()),\n  expiration: TransactionExpiration,\n  gasConfig: GasConfig,\n  inputs: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(_Transactions_js__WEBPACK_IMPORTED_MODULE_2__.TransactionBlockInput),\n  transactions: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(_Transactions_js__WEBPACK_IMPORTED_MODULE_2__.TransactionType)\n});\nfunction prepareSuiAddress(address) {\n  return (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_3__.normalizeSuiAddress)(address).replace(\"0x\", \"\");\n}\nclass TransactionBlockDataBuilder {\n  constructor(clone) {\n    this.version = 1;\n    this.sender = clone?.sender;\n    this.expiration = clone?.expiration;\n    this.gasConfig = clone?.gasConfig ?? {};\n    this.inputs = clone?.inputs ?? [];\n    this.transactions = clone?.transactions ?? [];\n  }\n  static fromKindBytes(bytes) {\n    const kind = _bcs_index_js__WEBPACK_IMPORTED_MODULE_4__.bcs.TransactionKind.parse(bytes);\n    const programmableTx = \"ProgrammableTransaction\" in kind ? kind.ProgrammableTransaction : null;\n    if (!programmableTx) {\n      throw new Error(\"Unable to deserialize from bytes.\");\n    }\n    const serialized = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.create)(\n      {\n        version: 1,\n        gasConfig: {},\n        inputs: programmableTx.inputs.map(\n          (value, index) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.create)(\n            {\n              kind: \"Input\",\n              value,\n              index,\n              type: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, _Inputs_js__WEBPACK_IMPORTED_MODULE_1__.PureCallArg) ? \"pure\" : \"object\"\n            },\n            _Transactions_js__WEBPACK_IMPORTED_MODULE_2__.TransactionBlockInput\n          )\n        ),\n        transactions: programmableTx.transactions\n      },\n      SerializedTransactionDataBuilder\n    );\n    return TransactionBlockDataBuilder.restore(serialized);\n  }\n  static fromBytes(bytes) {\n    const rawData = _bcs_index_js__WEBPACK_IMPORTED_MODULE_4__.bcs.TransactionData.parse(bytes);\n    const data = rawData?.V1;\n    const programmableTx = \"ProgrammableTransaction\" in data.kind ? data?.kind?.ProgrammableTransaction : null;\n    if (!data || !programmableTx) {\n      throw new Error(\"Unable to deserialize from bytes.\");\n    }\n    const serialized = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.create)(\n      {\n        version: 1,\n        sender: data.sender,\n        expiration: data.expiration,\n        gasConfig: data.gasData,\n        inputs: programmableTx.inputs.map(\n          (value, index) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.create)(\n            {\n              kind: \"Input\",\n              value,\n              index,\n              type: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(value, _Inputs_js__WEBPACK_IMPORTED_MODULE_1__.PureCallArg) ? \"pure\" : \"object\"\n            },\n            _Transactions_js__WEBPACK_IMPORTED_MODULE_2__.TransactionBlockInput\n          )\n        ),\n        transactions: programmableTx.transactions\n      },\n      SerializedTransactionDataBuilder\n    );\n    return TransactionBlockDataBuilder.restore(serialized);\n  }\n  static restore(data) {\n    (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.assert)(data, SerializedTransactionDataBuilder);\n    const transactionData = new TransactionBlockDataBuilder();\n    Object.assign(transactionData, data);\n    return transactionData;\n  }\n  /**\n   * Generate transaction digest.\n   *\n   * @param bytes BCS serialized transaction data\n   * @returns transaction digest.\n   */\n  static getDigestFromBytes(bytes) {\n    const hash = (0,_hash_js__WEBPACK_IMPORTED_MODULE_6__.hashTypedData)(\"TransactionData\", bytes);\n    return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_7__.toB58)(hash);\n  }\n  build({\n    maxSizeBytes = Infinity,\n    overrides,\n    onlyTransactionKind\n  } = {}) {\n    const inputs = this.inputs.map((input) => {\n      (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.assert)(input.value, _Inputs_js__WEBPACK_IMPORTED_MODULE_1__.BuilderCallArg);\n      return input.value;\n    });\n    const kind = {\n      ProgrammableTransaction: {\n        inputs,\n        transactions: this.transactions\n      }\n    };\n    if (onlyTransactionKind) {\n      return _bcs_index_js__WEBPACK_IMPORTED_MODULE_4__.bcs.TransactionKind.serialize(kind, { maxSize: maxSizeBytes }).toBytes();\n    }\n    const expiration = overrides?.expiration ?? this.expiration;\n    const sender = overrides?.sender ?? this.sender;\n    const gasConfig = { ...this.gasConfig, ...overrides?.gasConfig };\n    if (!sender) {\n      throw new Error(\"Missing transaction sender\");\n    }\n    if (!gasConfig.budget) {\n      throw new Error(\"Missing gas budget\");\n    }\n    if (!gasConfig.payment) {\n      throw new Error(\"Missing gas payment\");\n    }\n    if (!gasConfig.price) {\n      throw new Error(\"Missing gas price\");\n    }\n    const transactionData = {\n      sender: prepareSuiAddress(sender),\n      expiration: expiration ? expiration : { None: true },\n      gasData: {\n        payment: gasConfig.payment,\n        owner: prepareSuiAddress(this.gasConfig.owner ?? sender),\n        price: BigInt(gasConfig.price),\n        budget: BigInt(gasConfig.budget)\n      },\n      kind: {\n        ProgrammableTransaction: {\n          inputs,\n          transactions: this.transactions\n        }\n      }\n    };\n    return _bcs_index_js__WEBPACK_IMPORTED_MODULE_4__.bcs.TransactionData.serialize(\n      { V1: transactionData },\n      { maxSize: maxSizeBytes }\n    ).toBytes();\n  }\n  getDigest() {\n    const bytes = this.build({ onlyTransactionKind: false });\n    return TransactionBlockDataBuilder.getDigestFromBytes(bytes);\n  }\n  snapshot() {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.create)(this, SerializedTransactionDataBuilder);\n  }\n}\n\n//# sourceMappingURL=TransactionBlockData.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/TransactionBlockData.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Transactions.js":
/*!*******************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/Transactions.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MakeMoveVecTransaction: () => (/* binding */ MakeMoveVecTransaction),\n/* harmony export */   MergeCoinsTransaction: () => (/* binding */ MergeCoinsTransaction),\n/* harmony export */   MoveCallTransaction: () => (/* binding */ MoveCallTransaction),\n/* harmony export */   PublishTransaction: () => (/* binding */ PublishTransaction),\n/* harmony export */   SplitCoinsTransaction: () => (/* binding */ SplitCoinsTransaction),\n/* harmony export */   TransactionArgument: () => (/* binding */ TransactionArgument),\n/* harmony export */   TransactionBlockInput: () => (/* binding */ TransactionBlockInput),\n/* harmony export */   TransactionType: () => (/* binding */ TransactionType),\n/* harmony export */   Transactions: () => (/* binding */ Transactions),\n/* harmony export */   TransferObjectsTransaction: () => (/* binding */ TransferObjectsTransaction),\n/* harmony export */   UpgradePolicy: () => (/* binding */ UpgradePolicy),\n/* harmony export */   UpgradeTransaction: () => (/* binding */ UpgradeTransaction),\n/* harmony export */   getTransactionType: () => (/* binding */ getTransactionType)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superstruct */ \"(ssr)/../../node_modules/superstruct/dist/index.mjs\");\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n/* harmony import */ var _bcs_type_tag_serializer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../bcs/type-tag-serializer.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/type-tag-serializer.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _Inputs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Inputs.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Inputs.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js\");\n\n\n\n\n\n\n\nconst option = (some) => (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ None: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([(0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(true), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(null)]) }), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ Some: some })]);\nconst TransactionBlockInput = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n    kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"Input\"),\n    index: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)(),\n    value: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.any)()),\n    type: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"object\"))\n  }),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n    kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"Input\"),\n    index: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)(),\n    value: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.any)()),\n    type: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"pure\")\n  })\n]);\nconst TransactionArgumentTypes = [\n  TransactionBlockInput,\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"GasCoin\") }),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({ kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"Result\"), index: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)() }),\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n    kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"NestedResult\"),\n    index: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)(),\n    resultIndex: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)()\n  })\n];\nconst TransactionArgument = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([...TransactionArgumentTypes]);\nconst MoveCallTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"MoveCall\"),\n  target: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.define)(\"target\", (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)().validator),\n  typeArguments: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)()),\n  arguments: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(TransactionArgument)\n});\nconst TransferObjectsTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"TransferObjects\"),\n  objects: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(TransactionArgument),\n  address: TransactionArgument\n});\nconst SplitCoinsTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"SplitCoins\"),\n  coin: TransactionArgument,\n  amounts: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(TransactionArgument)\n});\nconst MergeCoinsTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"MergeCoins\"),\n  destination: TransactionArgument,\n  sources: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(TransactionArgument)\n});\nconst MakeMoveVecTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"MakeMoveVec\"),\n  // TODO: ideally we should use `TypeTag` instead of `record()` here,\n  // but TypeTag is recursively defined and it's tricky to define a\n  // recursive struct in superstruct\n  type: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.optional)(option((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.record)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(), (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.unknown)()))),\n  objects: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)(TransactionArgument)\n});\nconst PublishTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"Publish\"),\n  modules: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)())),\n  dependencies: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)())\n});\nvar UpgradePolicy = /* @__PURE__ */ ((UpgradePolicy2) => {\n  UpgradePolicy2[UpgradePolicy2[\"COMPATIBLE\"] = 0] = \"COMPATIBLE\";\n  UpgradePolicy2[UpgradePolicy2[\"ADDITIVE\"] = 128] = \"ADDITIVE\";\n  UpgradePolicy2[UpgradePolicy2[\"DEP_ONLY\"] = 192] = \"DEP_ONLY\";\n  return UpgradePolicy2;\n})(UpgradePolicy || {});\nconst UpgradeTransaction = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.object)({\n  kind: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.literal)(\"Upgrade\"),\n  modules: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.integer)())),\n  dependencies: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.array)((0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)()),\n  packageId: (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.string)(),\n  ticket: TransactionArgument\n});\nconst TransactionTypes = [\n  MoveCallTransaction,\n  TransferObjectsTransaction,\n  SplitCoinsTransaction,\n  MergeCoinsTransaction,\n  PublishTransaction,\n  UpgradeTransaction,\n  MakeMoveVecTransaction\n];\nconst TransactionType = (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.union)([...TransactionTypes]);\nfunction getTransactionType(data) {\n  (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.assert)(data, TransactionType);\n  return TransactionTypes.find((schema) => (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.is)(data, schema));\n}\nconst Transactions = {\n  MoveCall(input) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)(\n      {\n        kind: \"MoveCall\",\n        target: input.target,\n        arguments: input.arguments ?? [],\n        typeArguments: input.typeArguments ?? []\n      },\n      MoveCallTransaction\n    );\n  },\n  TransferObjects(objects, address) {\n    if (address.kind === \"Input\" && address.type === \"pure\" && typeof address.value !== \"object\") {\n      address.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_2__.Inputs.Pure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_3__.bcs.Address.serialize(address.value));\n    }\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)({ kind: \"TransferObjects\", objects, address }, TransferObjectsTransaction);\n  },\n  SplitCoins(coin, amounts) {\n    amounts.forEach((input) => {\n      if (input.kind === \"Input\" && input.type === \"pure\" && typeof input.value !== \"object\") {\n        input.value = _Inputs_js__WEBPACK_IMPORTED_MODULE_2__.Inputs.Pure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_3__.bcs.U64.serialize(input.value));\n      }\n    });\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)(\n      {\n        kind: \"SplitCoins\",\n        coin,\n        amounts\n      },\n      SplitCoinsTransaction\n    );\n  },\n  MergeCoins(destination, sources) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)({ kind: \"MergeCoins\", destination, sources }, MergeCoinsTransaction);\n  },\n  Publish({\n    modules,\n    dependencies\n  }) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)(\n      {\n        kind: \"Publish\",\n        modules: modules.map(\n          (module) => typeof module === \"string\" ? Array.from((0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.fromB64)(module)) : module\n        ),\n        dependencies: dependencies.map((dep) => (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_5__.normalizeSuiObjectId)(dep))\n      },\n      PublishTransaction\n    );\n  },\n  Upgrade({\n    modules,\n    dependencies,\n    packageId,\n    ticket\n  }) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)(\n      {\n        kind: \"Upgrade\",\n        modules: modules.map(\n          (module) => typeof module === \"string\" ? Array.from((0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.fromB64)(module)) : module\n        ),\n        dependencies: dependencies.map((dep) => (0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_5__.normalizeSuiObjectId)(dep)),\n        packageId,\n        ticket\n      },\n      UpgradeTransaction\n    );\n  },\n  MakeMoveVec({\n    type,\n    objects\n  }) {\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.create)(\n      {\n        kind: \"MakeMoveVec\",\n        type: type ? { Some: _bcs_type_tag_serializer_js__WEBPACK_IMPORTED_MODULE_6__.TypeTagSerializer.parseFromStr(type) } : { None: null },\n        objects\n      },\n      MakeMoveVecTransaction\n    );\n  }\n};\n\n//# sourceMappingURL=Transactions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/Transactions.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/hash.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/hash.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hashTypedData: () => (/* binding */ hashTypedData)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/blake2b */ \"(ssr)/../../node_modules/@noble/hashes/esm/blake2b.js\");\n\nfunction hashTypedData(typeTag, data) {\n  const typeTagBytes = Array.from(`${typeTag}::`).map((e) => e.charCodeAt(0));\n  const dataWithTag = new Uint8Array(typeTagBytes.length + data.length);\n  dataWithTag.set(typeTagBytes);\n  dataWithTag.set(data, typeTagBytes.length);\n  return (0,_noble_hashes_blake2b__WEBPACK_IMPORTED_MODULE_0__.blake2b)(dataWithTag, { dkLen: 32 });\n}\n\n//# sourceMappingURL=hash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy9oYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdEO0FBQ2hEO0FBQ0EscUNBQXFDLFFBQVE7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsU0FBUyw4REFBTyxnQkFBZ0IsV0FBVztBQUMzQztBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy9oYXNoLmpzPzI4ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmxha2UyYiB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL2JsYWtlMmJcIjtcbmZ1bmN0aW9uIGhhc2hUeXBlZERhdGEodHlwZVRhZywgZGF0YSkge1xuICBjb25zdCB0eXBlVGFnQnl0ZXMgPSBBcnJheS5mcm9tKGAke3R5cGVUYWd9OjpgKS5tYXAoKGUpID0+IGUuY2hhckNvZGVBdCgwKSk7XG4gIGNvbnN0IGRhdGFXaXRoVGFnID0gbmV3IFVpbnQ4QXJyYXkodHlwZVRhZ0J5dGVzLmxlbmd0aCArIGRhdGEubGVuZ3RoKTtcbiAgZGF0YVdpdGhUYWcuc2V0KHR5cGVUYWdCeXRlcyk7XG4gIGRhdGFXaXRoVGFnLnNldChkYXRhLCB0eXBlVGFnQnl0ZXMubGVuZ3RoKTtcbiAgcmV0dXJuIGJsYWtlMmIoZGF0YVdpdGhUYWcsIHsgZGtMZW46IDMyIH0pO1xufVxuZXhwb3J0IHtcbiAgaGFzaFR5cGVkRGF0YVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2guanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/hash.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/pure.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/pure.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPure: () => (/* binding */ createPure)\n/* harmony export */ });\n/* harmony import */ var _bcs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../bcs/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/bcs/index.js\");\n\nfunction createPure(makePure) {\n  function pure(value, type) {\n    return makePure(value, type);\n  }\n  pure.u8 = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.U8.serialize(value));\n  pure.u16 = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.U16.serialize(value));\n  pure.u32 = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.U32.serialize(value));\n  pure.u64 = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.U64.serialize(value));\n  pure.u128 = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.U128.serialize(value));\n  pure.u256 = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.U256.serialize(value));\n  pure.bool = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.Bool.serialize(value));\n  pure.string = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.String.serialize(value));\n  pure.address = (value) => makePure(_bcs_index_js__WEBPACK_IMPORTED_MODULE_0__.bcs.Address.serialize(value));\n  pure.id = pure.address;\n  return pure;\n}\n\n//# sourceMappingURL=pure.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy9wdXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDhDQUFHO0FBQ25DLGlDQUFpQyw4Q0FBRztBQUNwQyxpQ0FBaUMsOENBQUc7QUFDcEMsaUNBQWlDLDhDQUFHO0FBQ3BDLGtDQUFrQyw4Q0FBRztBQUNyQyxrQ0FBa0MsOENBQUc7QUFDckMsa0NBQWtDLDhDQUFHO0FBQ3JDLG9DQUFvQyw4Q0FBRztBQUN2QyxxQ0FBcUMsOENBQUc7QUFDeEM7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vdHJhbnNhY3Rpb25zL3B1cmUuanM/YzExNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiY3MgfSBmcm9tIFwiLi4vYmNzL2luZGV4LmpzXCI7XG5mdW5jdGlvbiBjcmVhdGVQdXJlKG1ha2VQdXJlKSB7XG4gIGZ1bmN0aW9uIHB1cmUodmFsdWUsIHR5cGUpIHtcbiAgICByZXR1cm4gbWFrZVB1cmUodmFsdWUsIHR5cGUpO1xuICB9XG4gIHB1cmUudTggPSAodmFsdWUpID0+IG1ha2VQdXJlKGJjcy5VOC5zZXJpYWxpemUodmFsdWUpKTtcbiAgcHVyZS51MTYgPSAodmFsdWUpID0+IG1ha2VQdXJlKGJjcy5VMTYuc2VyaWFsaXplKHZhbHVlKSk7XG4gIHB1cmUudTMyID0gKHZhbHVlKSA9PiBtYWtlUHVyZShiY3MuVTMyLnNlcmlhbGl6ZSh2YWx1ZSkpO1xuICBwdXJlLnU2NCA9ICh2YWx1ZSkgPT4gbWFrZVB1cmUoYmNzLlU2NC5zZXJpYWxpemUodmFsdWUpKTtcbiAgcHVyZS51MTI4ID0gKHZhbHVlKSA9PiBtYWtlUHVyZShiY3MuVTEyOC5zZXJpYWxpemUodmFsdWUpKTtcbiAgcHVyZS51MjU2ID0gKHZhbHVlKSA9PiBtYWtlUHVyZShiY3MuVTI1Ni5zZXJpYWxpemUodmFsdWUpKTtcbiAgcHVyZS5ib29sID0gKHZhbHVlKSA9PiBtYWtlUHVyZShiY3MuQm9vbC5zZXJpYWxpemUodmFsdWUpKTtcbiAgcHVyZS5zdHJpbmcgPSAodmFsdWUpID0+IG1ha2VQdXJlKGJjcy5TdHJpbmcuc2VyaWFsaXplKHZhbHVlKSk7XG4gIHB1cmUuYWRkcmVzcyA9ICh2YWx1ZSkgPT4gbWFrZVB1cmUoYmNzLkFkZHJlc3Muc2VyaWFsaXplKHZhbHVlKSk7XG4gIHB1cmUuaWQgPSBwdXJlLmFkZHJlc3M7XG4gIHJldHVybiBwdXJlO1xufVxuZXhwb3J0IHtcbiAgY3JlYXRlUHVyZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXB1cmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/pure.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/serializer.js":
/*!*****************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/serializer.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPureSerializationType: () => (/* binding */ getPureSerializationType),\n/* harmony export */   isTxContext: () => (/* binding */ isTxContext)\n/* harmony export */ });\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js\");\n\n\n\nconst OBJECT_MODULE_NAME = \"object\";\nconst ID_STRUCT_NAME = \"ID\";\nconst STD_ASCII_MODULE_NAME = \"ascii\";\nconst STD_ASCII_STRUCT_NAME = \"String\";\nconst STD_UTF8_MODULE_NAME = \"string\";\nconst STD_UTF8_STRUCT_NAME = \"String\";\nconst STD_OPTION_MODULE_NAME = \"option\";\nconst STD_OPTION_STRUCT_NAME = \"Option\";\nconst RESOLVED_SUI_ID = {\n  address: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__.SUI_FRAMEWORK_ADDRESS,\n  module: OBJECT_MODULE_NAME,\n  name: ID_STRUCT_NAME\n};\nconst RESOLVED_ASCII_STR = {\n  address: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__.MOVE_STDLIB_ADDRESS,\n  module: STD_ASCII_MODULE_NAME,\n  name: STD_ASCII_STRUCT_NAME\n};\nconst RESOLVED_UTF8_STR = {\n  address: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__.MOVE_STDLIB_ADDRESS,\n  module: STD_UTF8_MODULE_NAME,\n  name: STD_UTF8_STRUCT_NAME\n};\nconst RESOLVED_STD_OPTION = {\n  address: _utils_index_js__WEBPACK_IMPORTED_MODULE_0__.MOVE_STDLIB_ADDRESS,\n  module: STD_OPTION_MODULE_NAME,\n  name: STD_OPTION_STRUCT_NAME\n};\nconst isSameStruct = (a, b) => a.address === b.address && a.module === b.module && a.name === b.name;\nfunction isTxContext(param) {\n  const struct = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.extractStructTag)(param)?.Struct;\n  return struct?.address === \"0x2\" && struct?.module === \"tx_context\" && struct?.name === \"TxContext\";\n}\nfunction expectType(typeName, argVal) {\n  if (typeof argVal === \"undefined\") {\n    return;\n  }\n  if (typeof argVal !== typeName) {\n    throw new Error(`Expect ${argVal} to be ${typeName}, received ${typeof argVal}`);\n  }\n}\nconst allowedTypes = [\"Address\", \"Bool\", \"U8\", \"U16\", \"U32\", \"U64\", \"U128\", \"U256\"];\nfunction getPureSerializationType(normalizedType, argVal) {\n  if (typeof normalizedType === \"string\" && allowedTypes.includes(normalizedType)) {\n    if (normalizedType in [\"U8\", \"U16\", \"U32\", \"U64\", \"U128\", \"U256\"]) {\n      expectType(\"number\", argVal);\n    } else if (normalizedType === \"Bool\") {\n      expectType(\"boolean\", argVal);\n    } else if (normalizedType === \"Address\") {\n      expectType(\"string\", argVal);\n      if (argVal && !(0,_utils_sui_types_js__WEBPACK_IMPORTED_MODULE_2__.isValidSuiAddress)(argVal)) {\n        throw new Error(\"Invalid Sui Address\");\n      }\n    }\n    return normalizedType.toLowerCase();\n  } else if (typeof normalizedType === \"string\") {\n    throw new Error(`Unknown pure normalized type ${JSON.stringify(normalizedType, null, 2)}`);\n  }\n  if (\"Vector\" in normalizedType) {\n    if ((argVal === void 0 || typeof argVal === \"string\") && normalizedType.Vector === \"U8\") {\n      return \"string\";\n    }\n    if (argVal !== void 0 && !Array.isArray(argVal)) {\n      throw new Error(`Expect ${argVal} to be a array, received ${typeof argVal}`);\n    }\n    const innerType = getPureSerializationType(\n      normalizedType.Vector,\n      // undefined when argVal is empty\n      argVal ? argVal[0] : void 0\n    );\n    if (innerType === void 0) {\n      return;\n    }\n    return `vector<${innerType}>`;\n  }\n  if (\"Struct\" in normalizedType) {\n    if (isSameStruct(normalizedType.Struct, RESOLVED_ASCII_STR)) {\n      return \"string\";\n    } else if (isSameStruct(normalizedType.Struct, RESOLVED_UTF8_STR)) {\n      return \"utf8string\";\n    } else if (isSameStruct(normalizedType.Struct, RESOLVED_SUI_ID)) {\n      return \"address\";\n    } else if (isSameStruct(normalizedType.Struct, RESOLVED_STD_OPTION)) {\n      const optionToVec = {\n        Vector: normalizedType.Struct.typeArguments[0]\n      };\n      return getPureSerializationType(optionToVec, argVal);\n    }\n  }\n  return void 0;\n}\n\n//# sourceMappingURL=serializer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy9zZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStFO0FBQ3JCO0FBQ1o7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxrRUFBcUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFtQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0VBQW1CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBbUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwyREFBZ0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsUUFBUSxRQUFRLFNBQVMsYUFBYSxjQUFjO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0EscUJBQXFCLHNFQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixvREFBb0Qsd0NBQXdDO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxRQUFRLDBCQUEwQixjQUFjO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixVQUFVO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS90cmFuc2FjdGlvbnMvc2VyaWFsaXplci5qcz9lNTQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1PVkVfU1RETElCX0FERFJFU1MsIFNVSV9GUkFNRVdPUktfQUREUkVTUyB9IGZyb20gXCIuLi91dGlscy9pbmRleC5qc1wiO1xuaW1wb3J0IHsgaXNWYWxpZFN1aUFkZHJlc3MgfSBmcm9tIFwiLi4vdXRpbHMvc3VpLXR5cGVzLmpzXCI7XG5pbXBvcnQgeyBleHRyYWN0U3RydWN0VGFnIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmNvbnN0IE9CSkVDVF9NT0RVTEVfTkFNRSA9IFwib2JqZWN0XCI7XG5jb25zdCBJRF9TVFJVQ1RfTkFNRSA9IFwiSURcIjtcbmNvbnN0IFNURF9BU0NJSV9NT0RVTEVfTkFNRSA9IFwiYXNjaWlcIjtcbmNvbnN0IFNURF9BU0NJSV9TVFJVQ1RfTkFNRSA9IFwiU3RyaW5nXCI7XG5jb25zdCBTVERfVVRGOF9NT0RVTEVfTkFNRSA9IFwic3RyaW5nXCI7XG5jb25zdCBTVERfVVRGOF9TVFJVQ1RfTkFNRSA9IFwiU3RyaW5nXCI7XG5jb25zdCBTVERfT1BUSU9OX01PRFVMRV9OQU1FID0gXCJvcHRpb25cIjtcbmNvbnN0IFNURF9PUFRJT05fU1RSVUNUX05BTUUgPSBcIk9wdGlvblwiO1xuY29uc3QgUkVTT0xWRURfU1VJX0lEID0ge1xuICBhZGRyZXNzOiBTVUlfRlJBTUVXT1JLX0FERFJFU1MsXG4gIG1vZHVsZTogT0JKRUNUX01PRFVMRV9OQU1FLFxuICBuYW1lOiBJRF9TVFJVQ1RfTkFNRVxufTtcbmNvbnN0IFJFU09MVkVEX0FTQ0lJX1NUUiA9IHtcbiAgYWRkcmVzczogTU9WRV9TVERMSUJfQUREUkVTUyxcbiAgbW9kdWxlOiBTVERfQVNDSUlfTU9EVUxFX05BTUUsXG4gIG5hbWU6IFNURF9BU0NJSV9TVFJVQ1RfTkFNRVxufTtcbmNvbnN0IFJFU09MVkVEX1VURjhfU1RSID0ge1xuICBhZGRyZXNzOiBNT1ZFX1NURExJQl9BRERSRVNTLFxuICBtb2R1bGU6IFNURF9VVEY4X01PRFVMRV9OQU1FLFxuICBuYW1lOiBTVERfVVRGOF9TVFJVQ1RfTkFNRVxufTtcbmNvbnN0IFJFU09MVkVEX1NURF9PUFRJT04gPSB7XG4gIGFkZHJlc3M6IE1PVkVfU1RETElCX0FERFJFU1MsXG4gIG1vZHVsZTogU1REX09QVElPTl9NT0RVTEVfTkFNRSxcbiAgbmFtZTogU1REX09QVElPTl9TVFJVQ1RfTkFNRVxufTtcbmNvbnN0IGlzU2FtZVN0cnVjdCA9IChhLCBiKSA9PiBhLmFkZHJlc3MgPT09IGIuYWRkcmVzcyAmJiBhLm1vZHVsZSA9PT0gYi5tb2R1bGUgJiYgYS5uYW1lID09PSBiLm5hbWU7XG5mdW5jdGlvbiBpc1R4Q29udGV4dChwYXJhbSkge1xuICBjb25zdCBzdHJ1Y3QgPSBleHRyYWN0U3RydWN0VGFnKHBhcmFtKT8uU3RydWN0O1xuICByZXR1cm4gc3RydWN0Py5hZGRyZXNzID09PSBcIjB4MlwiICYmIHN0cnVjdD8ubW9kdWxlID09PSBcInR4X2NvbnRleHRcIiAmJiBzdHJ1Y3Q/Lm5hbWUgPT09IFwiVHhDb250ZXh0XCI7XG59XG5mdW5jdGlvbiBleHBlY3RUeXBlKHR5cGVOYW1lLCBhcmdWYWwpIHtcbiAgaWYgKHR5cGVvZiBhcmdWYWwgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHR5cGVvZiBhcmdWYWwgIT09IHR5cGVOYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3QgJHthcmdWYWx9IHRvIGJlICR7dHlwZU5hbWV9LCByZWNlaXZlZCAke3R5cGVvZiBhcmdWYWx9YCk7XG4gIH1cbn1cbmNvbnN0IGFsbG93ZWRUeXBlcyA9IFtcIkFkZHJlc3NcIiwgXCJCb29sXCIsIFwiVThcIiwgXCJVMTZcIiwgXCJVMzJcIiwgXCJVNjRcIiwgXCJVMTI4XCIsIFwiVTI1NlwiXTtcbmZ1bmN0aW9uIGdldFB1cmVTZXJpYWxpemF0aW9uVHlwZShub3JtYWxpemVkVHlwZSwgYXJnVmFsKSB7XG4gIGlmICh0eXBlb2Ygbm9ybWFsaXplZFR5cGUgPT09IFwic3RyaW5nXCIgJiYgYWxsb3dlZFR5cGVzLmluY2x1ZGVzKG5vcm1hbGl6ZWRUeXBlKSkge1xuICAgIGlmIChub3JtYWxpemVkVHlwZSBpbiBbXCJVOFwiLCBcIlUxNlwiLCBcIlUzMlwiLCBcIlU2NFwiLCBcIlUxMjhcIiwgXCJVMjU2XCJdKSB7XG4gICAgICBleHBlY3RUeXBlKFwibnVtYmVyXCIsIGFyZ1ZhbCk7XG4gICAgfSBlbHNlIGlmIChub3JtYWxpemVkVHlwZSA9PT0gXCJCb29sXCIpIHtcbiAgICAgIGV4cGVjdFR5cGUoXCJib29sZWFuXCIsIGFyZ1ZhbCk7XG4gICAgfSBlbHNlIGlmIChub3JtYWxpemVkVHlwZSA9PT0gXCJBZGRyZXNzXCIpIHtcbiAgICAgIGV4cGVjdFR5cGUoXCJzdHJpbmdcIiwgYXJnVmFsKTtcbiAgICAgIGlmIChhcmdWYWwgJiYgIWlzVmFsaWRTdWlBZGRyZXNzKGFyZ1ZhbCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBTdWkgQWRkcmVzc1wiKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5vcm1hbGl6ZWRUeXBlLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG5vcm1hbGl6ZWRUeXBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHB1cmUgbm9ybWFsaXplZCB0eXBlICR7SlNPTi5zdHJpbmdpZnkobm9ybWFsaXplZFR5cGUsIG51bGwsIDIpfWApO1xuICB9XG4gIGlmIChcIlZlY3RvclwiIGluIG5vcm1hbGl6ZWRUeXBlKSB7XG4gICAgaWYgKChhcmdWYWwgPT09IHZvaWQgMCB8fCB0eXBlb2YgYXJnVmFsID09PSBcInN0cmluZ1wiKSAmJiBub3JtYWxpemVkVHlwZS5WZWN0b3IgPT09IFwiVThcIikge1xuICAgICAgcmV0dXJuIFwic3RyaW5nXCI7XG4gICAgfVxuICAgIGlmIChhcmdWYWwgIT09IHZvaWQgMCAmJiAhQXJyYXkuaXNBcnJheShhcmdWYWwpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdCAke2FyZ1ZhbH0gdG8gYmUgYSBhcnJheSwgcmVjZWl2ZWQgJHt0eXBlb2YgYXJnVmFsfWApO1xuICAgIH1cbiAgICBjb25zdCBpbm5lclR5cGUgPSBnZXRQdXJlU2VyaWFsaXphdGlvblR5cGUoXG4gICAgICBub3JtYWxpemVkVHlwZS5WZWN0b3IsXG4gICAgICAvLyB1bmRlZmluZWQgd2hlbiBhcmdWYWwgaXMgZW1wdHlcbiAgICAgIGFyZ1ZhbCA/IGFyZ1ZhbFswXSA6IHZvaWQgMFxuICAgICk7XG4gICAgaWYgKGlubmVyVHlwZSA9PT0gdm9pZCAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHJldHVybiBgdmVjdG9yPCR7aW5uZXJUeXBlfT5gO1xuICB9XG4gIGlmIChcIlN0cnVjdFwiIGluIG5vcm1hbGl6ZWRUeXBlKSB7XG4gICAgaWYgKGlzU2FtZVN0cnVjdChub3JtYWxpemVkVHlwZS5TdHJ1Y3QsIFJFU09MVkVEX0FTQ0lJX1NUUikpIHtcbiAgICAgIHJldHVybiBcInN0cmluZ1wiO1xuICAgIH0gZWxzZSBpZiAoaXNTYW1lU3RydWN0KG5vcm1hbGl6ZWRUeXBlLlN0cnVjdCwgUkVTT0xWRURfVVRGOF9TVFIpKSB7XG4gICAgICByZXR1cm4gXCJ1dGY4c3RyaW5nXCI7XG4gICAgfSBlbHNlIGlmIChpc1NhbWVTdHJ1Y3Qobm9ybWFsaXplZFR5cGUuU3RydWN0LCBSRVNPTFZFRF9TVUlfSUQpKSB7XG4gICAgICByZXR1cm4gXCJhZGRyZXNzXCI7XG4gICAgfSBlbHNlIGlmIChpc1NhbWVTdHJ1Y3Qobm9ybWFsaXplZFR5cGUuU3RydWN0LCBSRVNPTFZFRF9TVERfT1BUSU9OKSkge1xuICAgICAgY29uc3Qgb3B0aW9uVG9WZWMgPSB7XG4gICAgICAgIFZlY3Rvcjogbm9ybWFsaXplZFR5cGUuU3RydWN0LnR5cGVBcmd1bWVudHNbMF1cbiAgICAgIH07XG4gICAgICByZXR1cm4gZ2V0UHVyZVNlcmlhbGl6YXRpb25UeXBlKG9wdGlvblRvVmVjLCBhcmdWYWwpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuZXhwb3J0IHtcbiAgZ2V0UHVyZVNlcmlhbGl6YXRpb25UeXBlLFxuICBpc1R4Q29udGV4dFxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/serializer.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   extractMutableReference: () => (/* binding */ extractMutableReference),\n/* harmony export */   extractReference: () => (/* binding */ extractReference),\n/* harmony export */   extractStructTag: () => (/* binding */ extractStructTag)\n/* harmony export */ });\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! superstruct */ \"(ssr)/../../node_modules/superstruct/dist/index.mjs\");\n\nfunction create(value, struct) {\n  return (0,superstruct__WEBPACK_IMPORTED_MODULE_0__.create)(value, struct);\n}\nfunction extractMutableReference(normalizedType) {\n  return typeof normalizedType === \"object\" && \"MutableReference\" in normalizedType ? normalizedType.MutableReference : void 0;\n}\nfunction extractReference(normalizedType) {\n  return typeof normalizedType === \"object\" && \"Reference\" in normalizedType ? normalizedType.Reference : void 0;\n}\nfunction extractStructTag(normalizedType) {\n  if (typeof normalizedType === \"object\" && \"Struct\" in normalizedType) {\n    return normalizedType;\n  }\n  const ref = extractReference(normalizedType);\n  const mutRef = extractMutableReference(normalizedType);\n  if (typeof ref === \"object\" && \"Struct\" in ref) {\n    return ref;\n  }\n  if (typeof mutRef === \"object\" && \"Struct\" in mutRef) {\n    return mutRef;\n  }\n  return void 0;\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwRDtBQUMxRDtBQUNBLFNBQVMsbURBQWlCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1FO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3RyYW5zYWN0aW9ucy91dGlscy5qcz83MTRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZSBhcyBzdXBlcnN0cnVjdENyZWF0ZSB9IGZyb20gXCJzdXBlcnN0cnVjdFwiO1xuZnVuY3Rpb24gY3JlYXRlKHZhbHVlLCBzdHJ1Y3QpIHtcbiAgcmV0dXJuIHN1cGVyc3RydWN0Q3JlYXRlKHZhbHVlLCBzdHJ1Y3QpO1xufVxuZnVuY3Rpb24gZXh0cmFjdE11dGFibGVSZWZlcmVuY2Uobm9ybWFsaXplZFR5cGUpIHtcbiAgcmV0dXJuIHR5cGVvZiBub3JtYWxpemVkVHlwZSA9PT0gXCJvYmplY3RcIiAmJiBcIk11dGFibGVSZWZlcmVuY2VcIiBpbiBub3JtYWxpemVkVHlwZSA/IG5vcm1hbGl6ZWRUeXBlLk11dGFibGVSZWZlcmVuY2UgOiB2b2lkIDA7XG59XG5mdW5jdGlvbiBleHRyYWN0UmVmZXJlbmNlKG5vcm1hbGl6ZWRUeXBlKSB7XG4gIHJldHVybiB0eXBlb2Ygbm9ybWFsaXplZFR5cGUgPT09IFwib2JqZWN0XCIgJiYgXCJSZWZlcmVuY2VcIiBpbiBub3JtYWxpemVkVHlwZSA/IG5vcm1hbGl6ZWRUeXBlLlJlZmVyZW5jZSA6IHZvaWQgMDtcbn1cbmZ1bmN0aW9uIGV4dHJhY3RTdHJ1Y3RUYWcobm9ybWFsaXplZFR5cGUpIHtcbiAgaWYgKHR5cGVvZiBub3JtYWxpemVkVHlwZSA9PT0gXCJvYmplY3RcIiAmJiBcIlN0cnVjdFwiIGluIG5vcm1hbGl6ZWRUeXBlKSB7XG4gICAgcmV0dXJuIG5vcm1hbGl6ZWRUeXBlO1xuICB9XG4gIGNvbnN0IHJlZiA9IGV4dHJhY3RSZWZlcmVuY2Uobm9ybWFsaXplZFR5cGUpO1xuICBjb25zdCBtdXRSZWYgPSBleHRyYWN0TXV0YWJsZVJlZmVyZW5jZShub3JtYWxpemVkVHlwZSk7XG4gIGlmICh0eXBlb2YgcmVmID09PSBcIm9iamVjdFwiICYmIFwiU3RydWN0XCIgaW4gcmVmKSB7XG4gICAgcmV0dXJuIHJlZjtcbiAgfVxuICBpZiAodHlwZW9mIG11dFJlZiA9PT0gXCJvYmplY3RcIiAmJiBcIlN0cnVjdFwiIGluIG11dFJlZikge1xuICAgIHJldHVybiBtdXRSZWY7XG4gIH1cbiAgcmV0dXJuIHZvaWQgMDtcbn1cbmV4cG9ydCB7XG4gIGNyZWF0ZSxcbiAgZXh0cmFjdE11dGFibGVSZWZlcmVuY2UsXG4gIGV4dHJhY3RSZWZlcmVuY2UsXG4gIGV4dHJhY3RTdHJ1Y3RUYWdcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/transactions/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/format.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/utils/format.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatAddress: () => (/* binding */ formatAddress),\n/* harmony export */   formatDigest: () => (/* binding */ formatDigest)\n/* harmony export */ });\nconst ELLIPSIS = \"\\u2026\";\nfunction formatAddress(address) {\n  if (address.length <= 6) {\n    return address;\n  }\n  const offset = address.startsWith(\"0x\") ? 2 : 0;\n  return `0x${address.slice(offset, offset + 4)}${ELLIPSIS}${address.slice(-4)}`;\n}\nfunction formatDigest(digest) {\n  return `${digest.slice(0, 10)}${ELLIPSIS}`;\n}\n\n//# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3V0aWxzL2Zvcm1hdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsa0NBQWtDLEVBQUUsU0FBUyxFQUFFLGtCQUFrQjtBQUMvRTtBQUNBO0FBQ0EsWUFBWSxvQkFBb0IsRUFBRSxTQUFTO0FBQzNDO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vdXRpbHMvZm9ybWF0LmpzP2EwNTUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRUxMSVBTSVMgPSBcIlxcdTIwMjZcIjtcbmZ1bmN0aW9uIGZvcm1hdEFkZHJlc3MoYWRkcmVzcykge1xuICBpZiAoYWRkcmVzcy5sZW5ndGggPD0gNikge1xuICAgIHJldHVybiBhZGRyZXNzO1xuICB9XG4gIGNvbnN0IG9mZnNldCA9IGFkZHJlc3Muc3RhcnRzV2l0aChcIjB4XCIpID8gMiA6IDA7XG4gIHJldHVybiBgMHgke2FkZHJlc3Muc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyA0KX0ke0VMTElQU0lTfSR7YWRkcmVzcy5zbGljZSgtNCl9YDtcbn1cbmZ1bmN0aW9uIGZvcm1hdERpZ2VzdChkaWdlc3QpIHtcbiAgcmV0dXJuIGAke2RpZ2VzdC5zbGljZSgwLCAxMCl9JHtFTExJUFNJU31gO1xufVxuZXhwb3J0IHtcbiAgZm9ybWF0QWRkcmVzcyxcbiAgZm9ybWF0RGlnZXN0XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/format.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/index.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/utils/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MIST_PER_SUI: () => (/* binding */ MIST_PER_SUI),\n/* harmony export */   MOVE_STDLIB_ADDRESS: () => (/* binding */ MOVE_STDLIB_ADDRESS),\n/* harmony export */   SUI_ADDRESS_LENGTH: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.SUI_ADDRESS_LENGTH),\n/* harmony export */   SUI_CLOCK_OBJECT_ID: () => (/* binding */ SUI_CLOCK_OBJECT_ID),\n/* harmony export */   SUI_DECIMALS: () => (/* binding */ SUI_DECIMALS),\n/* harmony export */   SUI_FRAMEWORK_ADDRESS: () => (/* binding */ SUI_FRAMEWORK_ADDRESS),\n/* harmony export */   SUI_SYSTEM_ADDRESS: () => (/* binding */ SUI_SYSTEM_ADDRESS),\n/* harmony export */   SUI_SYSTEM_MODULE_NAME: () => (/* binding */ SUI_SYSTEM_MODULE_NAME),\n/* harmony export */   SUI_SYSTEM_STATE_OBJECT_ID: () => (/* binding */ SUI_SYSTEM_STATE_OBJECT_ID),\n/* harmony export */   SUI_TYPE_ARG: () => (/* binding */ SUI_TYPE_ARG),\n/* harmony export */   assert: () => (/* reexport safe */ superstruct__WEBPACK_IMPORTED_MODULE_1__.assert),\n/* harmony export */   formatAddress: () => (/* reexport safe */ _format_js__WEBPACK_IMPORTED_MODULE_2__.formatAddress),\n/* harmony export */   formatDigest: () => (/* reexport safe */ _format_js__WEBPACK_IMPORTED_MODULE_2__.formatDigest),\n/* harmony export */   fromB64: () => (/* reexport safe */ _mysten_bcs__WEBPACK_IMPORTED_MODULE_3__.fromB64),\n/* harmony export */   fromHEX: () => (/* reexport safe */ _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.fromHEX),\n/* harmony export */   is: () => (/* reexport safe */ superstruct__WEBPACK_IMPORTED_MODULE_1__.is),\n/* harmony export */   isValidSuiAddress: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.isValidSuiAddress),\n/* harmony export */   isValidSuiNSName: () => (/* reexport safe */ _suins_js__WEBPACK_IMPORTED_MODULE_5__.isValidSuiNSName),\n/* harmony export */   isValidSuiObjectId: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.isValidSuiObjectId),\n/* harmony export */   isValidTransactionDigest: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.isValidTransactionDigest),\n/* harmony export */   normalizeStructTag: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.normalizeStructTag),\n/* harmony export */   normalizeSuiAddress: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.normalizeSuiAddress),\n/* harmony export */   normalizeSuiNSName: () => (/* reexport safe */ _suins_js__WEBPACK_IMPORTED_MODULE_5__.normalizeSuiNSName),\n/* harmony export */   normalizeSuiObjectId: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.normalizeSuiObjectId),\n/* harmony export */   parseStructTag: () => (/* reexport safe */ _sui_types_js__WEBPACK_IMPORTED_MODULE_0__.parseStructTag),\n/* harmony export */   toB64: () => (/* reexport safe */ _mysten_bcs__WEBPACK_IMPORTED_MODULE_3__.toB64),\n/* harmony export */   toHEX: () => (/* reexport safe */ _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__.toHEX)\n/* harmony export */ });\n/* harmony import */ var _format_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./format.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/format.js\");\n/* harmony import */ var _sui_types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sui-types.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/hex.js\");\n/* harmony import */ var superstruct__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! superstruct */ \"(ssr)/../../node_modules/superstruct/dist/index.mjs\");\n/* harmony import */ var _suins_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./suins.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/suins.js\");\n\n\n\n\n\nconst SUI_DECIMALS = 9;\nconst MIST_PER_SUI = BigInt(1e9);\nconst MOVE_STDLIB_ADDRESS = \"0x1\";\nconst SUI_FRAMEWORK_ADDRESS = \"0x2\";\nconst SUI_SYSTEM_ADDRESS = \"0x3\";\nconst SUI_CLOCK_OBJECT_ID = (0,_sui_types_js__WEBPACK_IMPORTED_MODULE_0__.normalizeSuiObjectId)(\"0x6\");\nconst SUI_SYSTEM_MODULE_NAME = \"sui_system\";\nconst SUI_TYPE_ARG = `${SUI_FRAMEWORK_ADDRESS}::sui::SUI`;\nconst SUI_SYSTEM_STATE_OBJECT_ID = (0,_sui_types_js__WEBPACK_IMPORTED_MODULE_0__.normalizeSuiObjectId)(\"0x5\");\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwRDtBQVVsQztBQUNxQztBQUNwQjtBQUN5QjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1FQUFvQjtBQUNoRDtBQUNBLHdCQUF3QixzQkFBc0I7QUFDOUMsbUNBQW1DLG1FQUFvQjtBQTZCckQ7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vdXRpbHMvaW5kZXguanM/MWVhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmb3JtYXRBZGRyZXNzLCBmb3JtYXREaWdlc3QgfSBmcm9tIFwiLi9mb3JtYXQuanNcIjtcbmltcG9ydCB7XG4gIGlzVmFsaWRTdWlBZGRyZXNzLFxuICBpc1ZhbGlkU3VpT2JqZWN0SWQsXG4gIGlzVmFsaWRUcmFuc2FjdGlvbkRpZ2VzdCxcbiAgbm9ybWFsaXplU3RydWN0VGFnLFxuICBub3JtYWxpemVTdWlBZGRyZXNzLFxuICBub3JtYWxpemVTdWlPYmplY3RJZCxcbiAgcGFyc2VTdHJ1Y3RUYWcsXG4gIFNVSV9BRERSRVNTX0xFTkdUSFxufSBmcm9tIFwiLi9zdWktdHlwZXMuanNcIjtcbmltcG9ydCB7IGZyb21CNjQsIHRvQjY0LCBmcm9tSEVYLCB0b0hFWCB9IGZyb20gXCJAbXlzdGVuL2Jjc1wiO1xuaW1wb3J0IHsgaXMsIGFzc2VydCB9IGZyb20gXCJzdXBlcnN0cnVjdFwiO1xuaW1wb3J0IHsgaXNWYWxpZFN1aU5TTmFtZSwgbm9ybWFsaXplU3VpTlNOYW1lIH0gZnJvbSBcIi4vc3VpbnMuanNcIjtcbmNvbnN0IFNVSV9ERUNJTUFMUyA9IDk7XG5jb25zdCBNSVNUX1BFUl9TVUkgPSBCaWdJbnQoMWU5KTtcbmNvbnN0IE1PVkVfU1RETElCX0FERFJFU1MgPSBcIjB4MVwiO1xuY29uc3QgU1VJX0ZSQU1FV09SS19BRERSRVNTID0gXCIweDJcIjtcbmNvbnN0IFNVSV9TWVNURU1fQUREUkVTUyA9IFwiMHgzXCI7XG5jb25zdCBTVUlfQ0xPQ0tfT0JKRUNUX0lEID0gbm9ybWFsaXplU3VpT2JqZWN0SWQoXCIweDZcIik7XG5jb25zdCBTVUlfU1lTVEVNX01PRFVMRV9OQU1FID0gXCJzdWlfc3lzdGVtXCI7XG5jb25zdCBTVUlfVFlQRV9BUkcgPSBgJHtTVUlfRlJBTUVXT1JLX0FERFJFU1N9OjpzdWk6OlNVSWA7XG5jb25zdCBTVUlfU1lTVEVNX1NUQVRFX09CSkVDVF9JRCA9IG5vcm1hbGl6ZVN1aU9iamVjdElkKFwiMHg1XCIpO1xuZXhwb3J0IHtcbiAgTUlTVF9QRVJfU1VJLFxuICBNT1ZFX1NURExJQl9BRERSRVNTLFxuICBTVUlfQUREUkVTU19MRU5HVEgsXG4gIFNVSV9DTE9DS19PQkpFQ1RfSUQsXG4gIFNVSV9ERUNJTUFMUyxcbiAgU1VJX0ZSQU1FV09SS19BRERSRVNTLFxuICBTVUlfU1lTVEVNX0FERFJFU1MsXG4gIFNVSV9TWVNURU1fTU9EVUxFX05BTUUsXG4gIFNVSV9TWVNURU1fU1RBVEVfT0JKRUNUX0lELFxuICBTVUlfVFlQRV9BUkcsXG4gIGFzc2VydCxcbiAgZm9ybWF0QWRkcmVzcyxcbiAgZm9ybWF0RGlnZXN0LFxuICBmcm9tQjY0LFxuICBmcm9tSEVYLFxuICBpcyxcbiAgaXNWYWxpZFN1aUFkZHJlc3MsXG4gIGlzVmFsaWRTdWlOU05hbWUsXG4gIGlzVmFsaWRTdWlPYmplY3RJZCxcbiAgaXNWYWxpZFRyYW5zYWN0aW9uRGlnZXN0LFxuICBub3JtYWxpemVTdHJ1Y3RUYWcsXG4gIG5vcm1hbGl6ZVN1aUFkZHJlc3MsXG4gIG5vcm1hbGl6ZVN1aU5TTmFtZSxcbiAgbm9ybWFsaXplU3VpT2JqZWN0SWQsXG4gIHBhcnNlU3RydWN0VGFnLFxuICB0b0I2NCxcbiAgdG9IRVhcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SUI_ADDRESS_LENGTH: () => (/* binding */ SUI_ADDRESS_LENGTH),\n/* harmony export */   isValidSuiAddress: () => (/* binding */ isValidSuiAddress),\n/* harmony export */   isValidSuiObjectId: () => (/* binding */ isValidSuiObjectId),\n/* harmony export */   isValidTransactionDigest: () => (/* binding */ isValidTransactionDigest),\n/* harmony export */   normalizeStructTag: () => (/* binding */ normalizeStructTag),\n/* harmony export */   normalizeSuiAddress: () => (/* binding */ normalizeSuiAddress),\n/* harmony export */   normalizeSuiObjectId: () => (/* binding */ normalizeSuiObjectId),\n/* harmony export */   parseStructTag: () => (/* binding */ parseStructTag)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b58.js\");\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/utils.js\");\n\nconst TX_DIGEST_LENGTH = 32;\nfunction isValidTransactionDigest(value) {\n  try {\n    const buffer = (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.fromB58)(value);\n    return buffer.length === TX_DIGEST_LENGTH;\n  } catch (e) {\n    return false;\n  }\n}\nconst SUI_ADDRESS_LENGTH = 32;\nfunction isValidSuiAddress(value) {\n  return isHex(value) && getHexByteLength(value) === SUI_ADDRESS_LENGTH;\n}\nfunction isValidSuiObjectId(value) {\n  return isValidSuiAddress(value);\n}\nfunction parseTypeTag(type) {\n  if (!type.includes(\"::\"))\n    return type;\n  return parseStructTag(type);\n}\nfunction parseStructTag(type) {\n  const [address, module] = type.split(\"::\");\n  const rest = type.slice(address.length + module.length + 4);\n  const name = rest.includes(\"<\") ? rest.slice(0, rest.indexOf(\"<\")) : rest;\n  const typeParams = rest.includes(\"<\") ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.splitGenericParameters)(rest.slice(rest.indexOf(\"<\") + 1, rest.lastIndexOf(\">\"))).map(\n    (typeParam) => parseTypeTag(typeParam.trim())\n  ) : [];\n  return {\n    address: normalizeSuiAddress(address),\n    module,\n    name,\n    typeParams\n  };\n}\nfunction normalizeStructTag(type) {\n  const { address, module, name, typeParams } = typeof type === \"string\" ? parseStructTag(type) : type;\n  const formattedTypeParams = typeParams?.length > 0 ? `<${typeParams.map(\n    (typeParam) => typeof typeParam === \"string\" ? typeParam : normalizeStructTag(typeParam)\n  ).join(\",\")}>` : \"\";\n  return `${address}::${module}::${name}${formattedTypeParams}`;\n}\nfunction normalizeSuiAddress(value, forceAdd0x = false) {\n  let address = value.toLowerCase();\n  if (!forceAdd0x && address.startsWith(\"0x\")) {\n    address = address.slice(2);\n  }\n  return `0x${address.padStart(SUI_ADDRESS_LENGTH * 2, \"0\")}`;\n}\nfunction normalizeSuiObjectId(value, forceAdd0x = false) {\n  return normalizeSuiAddress(value, forceAdd0x);\n}\nfunction isHex(value) {\n  return /^(0x|0X)?[a-fA-F0-9]+$/.test(value) && value.length % 2 === 0;\n}\nfunction getHexByteLength(value) {\n  return /^(0x|0X)/.test(value) ? (value.length - 2) / 2 : value.length / 2;\n}\n\n//# sourceMappingURL=sui-types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3V0aWxzL3N1aS10eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQThEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixvREFBTztBQUMxQjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxtRUFBc0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG9DQUFvQztBQUM5QywyREFBMkQ7QUFDM0Q7QUFDQSxjQUFjO0FBQ2QsWUFBWSxRQUFRLElBQUksT0FBTyxJQUFJLEtBQUssRUFBRSxvQkFBb0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4Q0FBOEM7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFVRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS91dGlscy9zdWktdHlwZXMuanM/OWE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tQjU4LCBzcGxpdEdlbmVyaWNQYXJhbWV0ZXJzIH0gZnJvbSBcIkBteXN0ZW4vYmNzXCI7XG5jb25zdCBUWF9ESUdFU1RfTEVOR1RIID0gMzI7XG5mdW5jdGlvbiBpc1ZhbGlkVHJhbnNhY3Rpb25EaWdlc3QodmFsdWUpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBidWZmZXIgPSBmcm9tQjU4KHZhbHVlKTtcbiAgICByZXR1cm4gYnVmZmVyLmxlbmd0aCA9PT0gVFhfRElHRVNUX0xFTkdUSDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuY29uc3QgU1VJX0FERFJFU1NfTEVOR1RIID0gMzI7XG5mdW5jdGlvbiBpc1ZhbGlkU3VpQWRkcmVzcyh2YWx1ZSkge1xuICByZXR1cm4gaXNIZXgodmFsdWUpICYmIGdldEhleEJ5dGVMZW5ndGgodmFsdWUpID09PSBTVUlfQUREUkVTU19MRU5HVEg7XG59XG5mdW5jdGlvbiBpc1ZhbGlkU3VpT2JqZWN0SWQodmFsdWUpIHtcbiAgcmV0dXJuIGlzVmFsaWRTdWlBZGRyZXNzKHZhbHVlKTtcbn1cbmZ1bmN0aW9uIHBhcnNlVHlwZVRhZyh0eXBlKSB7XG4gIGlmICghdHlwZS5pbmNsdWRlcyhcIjo6XCIpKVxuICAgIHJldHVybiB0eXBlO1xuICByZXR1cm4gcGFyc2VTdHJ1Y3RUYWcodHlwZSk7XG59XG5mdW5jdGlvbiBwYXJzZVN0cnVjdFRhZyh0eXBlKSB7XG4gIGNvbnN0IFthZGRyZXNzLCBtb2R1bGVdID0gdHlwZS5zcGxpdChcIjo6XCIpO1xuICBjb25zdCByZXN0ID0gdHlwZS5zbGljZShhZGRyZXNzLmxlbmd0aCArIG1vZHVsZS5sZW5ndGggKyA0KTtcbiAgY29uc3QgbmFtZSA9IHJlc3QuaW5jbHVkZXMoXCI8XCIpID8gcmVzdC5zbGljZSgwLCByZXN0LmluZGV4T2YoXCI8XCIpKSA6IHJlc3Q7XG4gIGNvbnN0IHR5cGVQYXJhbXMgPSByZXN0LmluY2x1ZGVzKFwiPFwiKSA/IHNwbGl0R2VuZXJpY1BhcmFtZXRlcnMocmVzdC5zbGljZShyZXN0LmluZGV4T2YoXCI8XCIpICsgMSwgcmVzdC5sYXN0SW5kZXhPZihcIj5cIikpKS5tYXAoXG4gICAgKHR5cGVQYXJhbSkgPT4gcGFyc2VUeXBlVGFnKHR5cGVQYXJhbS50cmltKCkpXG4gICkgOiBbXTtcbiAgcmV0dXJuIHtcbiAgICBhZGRyZXNzOiBub3JtYWxpemVTdWlBZGRyZXNzKGFkZHJlc3MpLFxuICAgIG1vZHVsZSxcbiAgICBuYW1lLFxuICAgIHR5cGVQYXJhbXNcbiAgfTtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVN0cnVjdFRhZyh0eXBlKSB7XG4gIGNvbnN0IHsgYWRkcmVzcywgbW9kdWxlLCBuYW1lLCB0eXBlUGFyYW1zIH0gPSB0eXBlb2YgdHlwZSA9PT0gXCJzdHJpbmdcIiA/IHBhcnNlU3RydWN0VGFnKHR5cGUpIDogdHlwZTtcbiAgY29uc3QgZm9ybWF0dGVkVHlwZVBhcmFtcyA9IHR5cGVQYXJhbXM/Lmxlbmd0aCA+IDAgPyBgPCR7dHlwZVBhcmFtcy5tYXAoXG4gICAgKHR5cGVQYXJhbSkgPT4gdHlwZW9mIHR5cGVQYXJhbSA9PT0gXCJzdHJpbmdcIiA/IHR5cGVQYXJhbSA6IG5vcm1hbGl6ZVN0cnVjdFRhZyh0eXBlUGFyYW0pXG4gICkuam9pbihcIixcIil9PmAgOiBcIlwiO1xuICByZXR1cm4gYCR7YWRkcmVzc306OiR7bW9kdWxlfTo6JHtuYW1lfSR7Zm9ybWF0dGVkVHlwZVBhcmFtc31gO1xufVxuZnVuY3Rpb24gbm9ybWFsaXplU3VpQWRkcmVzcyh2YWx1ZSwgZm9yY2VBZGQweCA9IGZhbHNlKSB7XG4gIGxldCBhZGRyZXNzID0gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiAgaWYgKCFmb3JjZUFkZDB4ICYmIGFkZHJlc3Muc3RhcnRzV2l0aChcIjB4XCIpKSB7XG4gICAgYWRkcmVzcyA9IGFkZHJlc3Muc2xpY2UoMik7XG4gIH1cbiAgcmV0dXJuIGAweCR7YWRkcmVzcy5wYWRTdGFydChTVUlfQUREUkVTU19MRU5HVEggKiAyLCBcIjBcIil9YDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVN1aU9iamVjdElkKHZhbHVlLCBmb3JjZUFkZDB4ID0gZmFsc2UpIHtcbiAgcmV0dXJuIG5vcm1hbGl6ZVN1aUFkZHJlc3ModmFsdWUsIGZvcmNlQWRkMHgpO1xufVxuZnVuY3Rpb24gaXNIZXgodmFsdWUpIHtcbiAgcmV0dXJuIC9eKDB4fDBYKT9bYS1mQS1GMC05XSskLy50ZXN0KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggJSAyID09PSAwO1xufVxuZnVuY3Rpb24gZ2V0SGV4Qnl0ZUxlbmd0aCh2YWx1ZSkge1xuICByZXR1cm4gL14oMHh8MFgpLy50ZXN0KHZhbHVlKSA/ICh2YWx1ZS5sZW5ndGggLSAyKSAvIDIgOiB2YWx1ZS5sZW5ndGggLyAyO1xufVxuZXhwb3J0IHtcbiAgU1VJX0FERFJFU1NfTEVOR1RILFxuICBpc1ZhbGlkU3VpQWRkcmVzcyxcbiAgaXNWYWxpZFN1aU9iamVjdElkLFxuICBpc1ZhbGlkVHJhbnNhY3Rpb25EaWdlc3QsXG4gIG5vcm1hbGl6ZVN0cnVjdFRhZyxcbiAgbm9ybWFsaXplU3VpQWRkcmVzcyxcbiAgbm9ybWFsaXplU3VpT2JqZWN0SWQsXG4gIHBhcnNlU3RydWN0VGFnXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3VpLXR5cGVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/sui-types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/suins.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/utils/suins.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidSuiNSName: () => (/* binding */ isValidSuiNSName),\n/* harmony export */   normalizeSuiNSName: () => (/* binding */ normalizeSuiNSName)\n/* harmony export */ });\nconst SUI_NS_NAME_REGEX = /^(?:[a-z0-9][a-z0-9-]{0,62}(?:\\.[a-z0-9][a-z0-9-]{0,62})*)?@[a-z0-9][a-z0-9-]{0,62}$/i;\nconst SUI_NS_DOMAIN_REGEX = /^(?:[a-z0-9][a-z0-9-]{0,62}\\.)+sui$/i;\nconst MAX_SUI_NS_NAME_LENGTH = 235;\nfunction isValidSuiNSName(name) {\n  if (name.length > MAX_SUI_NS_NAME_LENGTH) {\n    return false;\n  }\n  if (name.includes(\"@\")) {\n    return SUI_NS_NAME_REGEX.test(name);\n  }\n  return SUI_NS_DOMAIN_REGEX.test(name);\n}\nfunction normalizeSuiNSName(name, format = \"at\") {\n  const lowerCase = name.toLowerCase();\n  let parts;\n  if (lowerCase.includes(\"@\")) {\n    if (!SUI_NS_NAME_REGEX.test(lowerCase)) {\n      throw new Error(`Invalid SuiNS name ${name}`);\n    }\n    const [labels, domain] = lowerCase.split(\"@\");\n    parts = [...labels ? labels.split(\".\") : [], domain];\n  } else {\n    if (!SUI_NS_DOMAIN_REGEX.test(lowerCase)) {\n      throw new Error(`Invalid SuiNS name ${name}`);\n    }\n    parts = lowerCase.split(\".\").slice(0, -1);\n  }\n  if (format === \"dot\") {\n    return `${parts.join(\".\")}.sui`;\n  }\n  return `${parts.slice(0, -1).join(\".\")}@${parts[parts.length - 1]}`;\n}\n\n//# sourceMappingURL=suins.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3V0aWxzL3N1aW5zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsaURBQWlELEtBQUssdUJBQXVCLEtBQUssdUJBQXVCLEtBQUs7QUFDOUcsbURBQW1ELEtBQUs7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLEtBQUs7QUFDakQ7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0EsNENBQTRDLEtBQUs7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdCQUFnQjtBQUM5QjtBQUNBLFlBQVksNkJBQTZCLEdBQUcsd0JBQXdCO0FBQ3BFO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vdXRpbHMvc3VpbnMuanM/MzFmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTVUlfTlNfTkFNRV9SRUdFWCA9IC9eKD86W2EtejAtOV1bYS16MC05LV17MCw2Mn0oPzpcXC5bYS16MC05XVthLXowLTktXXswLDYyfSkqKT9AW2EtejAtOV1bYS16MC05LV17MCw2Mn0kL2k7XG5jb25zdCBTVUlfTlNfRE9NQUlOX1JFR0VYID0gL14oPzpbYS16MC05XVthLXowLTktXXswLDYyfVxcLikrc3VpJC9pO1xuY29uc3QgTUFYX1NVSV9OU19OQU1FX0xFTkdUSCA9IDIzNTtcbmZ1bmN0aW9uIGlzVmFsaWRTdWlOU05hbWUobmFtZSkge1xuICBpZiAobmFtZS5sZW5ndGggPiBNQVhfU1VJX05TX05BTUVfTEVOR1RIKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmIChuYW1lLmluY2x1ZGVzKFwiQFwiKSkge1xuICAgIHJldHVybiBTVUlfTlNfTkFNRV9SRUdFWC50ZXN0KG5hbWUpO1xuICB9XG4gIHJldHVybiBTVUlfTlNfRE9NQUlOX1JFR0VYLnRlc3QobmFtZSk7XG59XG5mdW5jdGlvbiBub3JtYWxpemVTdWlOU05hbWUobmFtZSwgZm9ybWF0ID0gXCJhdFwiKSB7XG4gIGNvbnN0IGxvd2VyQ2FzZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgbGV0IHBhcnRzO1xuICBpZiAobG93ZXJDYXNlLmluY2x1ZGVzKFwiQFwiKSkge1xuICAgIGlmICghU1VJX05TX05BTUVfUkVHRVgudGVzdChsb3dlckNhc2UpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgU3VpTlMgbmFtZSAke25hbWV9YCk7XG4gICAgfVxuICAgIGNvbnN0IFtsYWJlbHMsIGRvbWFpbl0gPSBsb3dlckNhc2Uuc3BsaXQoXCJAXCIpO1xuICAgIHBhcnRzID0gWy4uLmxhYmVscyA/IGxhYmVscy5zcGxpdChcIi5cIikgOiBbXSwgZG9tYWluXTtcbiAgfSBlbHNlIHtcbiAgICBpZiAoIVNVSV9OU19ET01BSU5fUkVHRVgudGVzdChsb3dlckNhc2UpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgU3VpTlMgbmFtZSAke25hbWV9YCk7XG4gICAgfVxuICAgIHBhcnRzID0gbG93ZXJDYXNlLnNwbGl0KFwiLlwiKS5zbGljZSgwLCAtMSk7XG4gIH1cbiAgaWYgKGZvcm1hdCA9PT0gXCJkb3RcIikge1xuICAgIHJldHVybiBgJHtwYXJ0cy5qb2luKFwiLlwiKX0uc3VpYDtcbiAgfVxuICByZXR1cm4gYCR7cGFydHMuc2xpY2UoMCwgLTEpLmpvaW4oXCIuXCIpfUAke3BhcnRzW3BhcnRzLmxlbmd0aCAtIDFdfWA7XG59XG5leHBvcnQge1xuICBpc1ZhbGlkU3VpTlNOYW1lLFxuICBub3JtYWxpemVTdWlOU05hbWVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWlucy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/utils/suins.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/version.js":
/*!*************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PACKAGE_VERSION: () => (/* binding */ PACKAGE_VERSION),\n/* harmony export */   TARGETED_RPC_VERSION: () => (/* binding */ TARGETED_RPC_VERSION)\n/* harmony export */ });\nconst PACKAGE_VERSION = \"0.54.1\";\nconst TARGETED_RPC_VERSION = \"1.25.0\";\n\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vdmVyc2lvbi5qcz9iNGJkIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFBBQ0tBR0VfVkVSU0lPTiA9IFwiMC41NC4xXCI7XG5jb25zdCBUQVJHRVRFRF9SUENfVkVSU0lPTiA9IFwiMS4yNS4wXCI7XG5leHBvcnQge1xuICBQQUNLQUdFX1ZFUlNJT04sXG4gIFRBUkdFVEVEX1JQQ19WRVJTSU9OXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/version.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/bcs.js":
/*!*****************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/zklogin/bcs.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   zkLoginSignature: () => (/* binding */ zkLoginSignature)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/bcs.js\");\n\nconst zkLoginSignature = _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.struct(\"ZkLoginSignature\", {\n  inputs: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.struct(\"ZkLoginSignatureInputs\", {\n    proofPoints: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.struct(\"ZkLoginSignatureInputsProofPoints\", {\n      a: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.string()),\n      b: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.string())),\n      c: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.string())\n    }),\n    issBase64Details: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.struct(\"ZkLoginSignatureInputsClaim\", {\n      value: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.string(),\n      indexMod4: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.u8()\n    }),\n    headerBase64: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.string(),\n    addressSeed: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.string()\n  }),\n  maxEpoch: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.u64(),\n  userSignature: _mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.vector(_mysten_bcs__WEBPACK_IMPORTED_MODULE_0__.bcs.u8())\n});\n\n//# sourceMappingURL=bcs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3prbG9naW4vYmNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQ2xDLHlCQUF5Qiw0Q0FBRztBQUM1QixVQUFVLDRDQUFHO0FBQ2IsaUJBQWlCLDRDQUFHO0FBQ3BCLFNBQVMsNENBQUcsUUFBUSw0Q0FBRztBQUN2QixTQUFTLDRDQUFHLFFBQVEsNENBQUcsUUFBUSw0Q0FBRztBQUNsQyxTQUFTLDRDQUFHLFFBQVEsNENBQUc7QUFDdkIsS0FBSztBQUNMLHNCQUFzQiw0Q0FBRztBQUN6QixhQUFhLDRDQUFHO0FBQ2hCLGlCQUFpQiw0Q0FBRztBQUNwQixLQUFLO0FBQ0wsa0JBQWtCLDRDQUFHO0FBQ3JCLGlCQUFpQiw0Q0FBRztBQUNwQixHQUFHO0FBQ0gsWUFBWSw0Q0FBRztBQUNmLGlCQUFpQiw0Q0FBRyxRQUFRLDRDQUFHO0FBQy9CLENBQUM7QUFHQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS96a2xvZ2luL2Jjcy5qcz9mNDJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJjcyB9IGZyb20gXCJAbXlzdGVuL2Jjc1wiO1xuY29uc3QgemtMb2dpblNpZ25hdHVyZSA9IGJjcy5zdHJ1Y3QoXCJaa0xvZ2luU2lnbmF0dXJlXCIsIHtcbiAgaW5wdXRzOiBiY3Muc3RydWN0KFwiWmtMb2dpblNpZ25hdHVyZUlucHV0c1wiLCB7XG4gICAgcHJvb2ZQb2ludHM6IGJjcy5zdHJ1Y3QoXCJaa0xvZ2luU2lnbmF0dXJlSW5wdXRzUHJvb2ZQb2ludHNcIiwge1xuICAgICAgYTogYmNzLnZlY3RvcihiY3Muc3RyaW5nKCkpLFxuICAgICAgYjogYmNzLnZlY3RvcihiY3MudmVjdG9yKGJjcy5zdHJpbmcoKSkpLFxuICAgICAgYzogYmNzLnZlY3RvcihiY3Muc3RyaW5nKCkpXG4gICAgfSksXG4gICAgaXNzQmFzZTY0RGV0YWlsczogYmNzLnN0cnVjdChcIlprTG9naW5TaWduYXR1cmVJbnB1dHNDbGFpbVwiLCB7XG4gICAgICB2YWx1ZTogYmNzLnN0cmluZygpLFxuICAgICAgaW5kZXhNb2Q0OiBiY3MudTgoKVxuICAgIH0pLFxuICAgIGhlYWRlckJhc2U2NDogYmNzLnN0cmluZygpLFxuICAgIGFkZHJlc3NTZWVkOiBiY3Muc3RyaW5nKClcbiAgfSksXG4gIG1heEVwb2NoOiBiY3MudTY0KCksXG4gIHVzZXJTaWduYXR1cmU6IGJjcy52ZWN0b3IoYmNzLnU4KCkpXG59KTtcbmV4cG9ydCB7XG4gIHprTG9naW5TaWduYXR1cmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iY3MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/bcs.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/jwt-utils.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/zklogin/jwt-utils.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractClaimValue: () => (/* binding */ extractClaimValue)\n/* harmony export */ });\nfunction base64UrlCharTo6Bits(base64UrlChar) {\n  if (base64UrlChar.length !== 1) {\n    throw new Error(\"Invalid base64Url character: \" + base64UrlChar);\n  }\n  const base64UrlCharacterSet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n  const index = base64UrlCharacterSet.indexOf(base64UrlChar);\n  if (index === -1) {\n    throw new Error(\"Invalid base64Url character: \" + base64UrlChar);\n  }\n  const binaryString = index.toString(2).padStart(6, \"0\");\n  const bits = Array.from(binaryString).map(Number);\n  return bits;\n}\nfunction base64UrlStringToBitVector(base64UrlString) {\n  let bitVector = [];\n  for (let i = 0; i < base64UrlString.length; i++) {\n    const base64UrlChar = base64UrlString.charAt(i);\n    const bits = base64UrlCharTo6Bits(base64UrlChar);\n    bitVector = bitVector.concat(bits);\n  }\n  return bitVector;\n}\nfunction decodeBase64URL(s, i) {\n  if (s.length < 2) {\n    throw new Error(`Input (s = ${s}) is not tightly packed because s.length < 2`);\n  }\n  let bits = base64UrlStringToBitVector(s);\n  const firstCharOffset = i % 4;\n  if (firstCharOffset === 0) {\n  } else if (firstCharOffset === 1) {\n    bits = bits.slice(2);\n  } else if (firstCharOffset === 2) {\n    bits = bits.slice(4);\n  } else {\n    throw new Error(`Input (s = ${s}) is not tightly packed because i%4 = 3 (i = ${i}))`);\n  }\n  const lastCharOffset = (i + s.length - 1) % 4;\n  if (lastCharOffset === 3) {\n  } else if (lastCharOffset === 2) {\n    bits = bits.slice(0, bits.length - 2);\n  } else if (lastCharOffset === 1) {\n    bits = bits.slice(0, bits.length - 4);\n  } else {\n    throw new Error(\n      `Input (s = ${s}) is not tightly packed because (i + s.length - 1)%4 = 0 (i = ${i}))`\n    );\n  }\n  if (bits.length % 8 !== 0) {\n    throw new Error(`We should never reach here...`);\n  }\n  const bytes = new Uint8Array(Math.floor(bits.length / 8));\n  let currentByteIndex = 0;\n  for (let i2 = 0; i2 < bits.length; i2 += 8) {\n    const bitChunk = bits.slice(i2, i2 + 8);\n    const byte = parseInt(bitChunk.join(\"\"), 2);\n    bytes[currentByteIndex++] = byte;\n  }\n  return new TextDecoder().decode(bytes);\n}\nfunction verifyExtendedClaim(claim) {\n  if (!(claim.slice(-1) === \"}\" || claim.slice(-1) === \",\")) {\n    throw new Error(\"Invalid claim\");\n  }\n  const json = JSON.parse(\"{\" + claim.slice(0, -1) + \"}\");\n  if (Object.keys(json).length !== 1) {\n    throw new Error(\"Invalid claim\");\n  }\n  const key = Object.keys(json)[0];\n  return [key, json[key]];\n}\nfunction extractClaimValue(claim, claimName) {\n  const extendedClaim = decodeBase64URL(claim.value, claim.indexMod4);\n  const [name, value] = verifyExtendedClaim(extendedClaim);\n  if (name !== claimName) {\n    throw new Error(`Invalid field name: found ${name} expected ${claimName}`);\n  }\n  return value;\n}\n\n//# sourceMappingURL=jwt-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3prbG9naW4vand0LXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNEJBQTRCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsRUFBRTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSixrQ0FBa0MsRUFBRSwrQ0FBK0MsRUFBRTtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxvQkFBb0IsRUFBRSxnRUFBZ0UsRUFBRTtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBLDRCQUE0QiwyQkFBMkI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsTUFBTSxXQUFXLFVBQVU7QUFDNUU7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL0B2aW5kZXgvd2FsbGV0LWFwcC8uLi8uLi9ub2RlX21vZHVsZXMvQG15c3Rlbi9zdWkuanMvZGlzdC9lc20vemtsb2dpbi9qd3QtdXRpbHMuanM/YmU5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBiYXNlNjRVcmxDaGFyVG82Qml0cyhiYXNlNjRVcmxDaGFyKSB7XG4gIGlmIChiYXNlNjRVcmxDaGFyLmxlbmd0aCAhPT0gMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYmFzZTY0VXJsIGNoYXJhY3RlcjogXCIgKyBiYXNlNjRVcmxDaGFyKTtcbiAgfVxuICBjb25zdCBiYXNlNjRVcmxDaGFyYWN0ZXJTZXQgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5LV9cIjtcbiAgY29uc3QgaW5kZXggPSBiYXNlNjRVcmxDaGFyYWN0ZXJTZXQuaW5kZXhPZihiYXNlNjRVcmxDaGFyKTtcbiAgaWYgKGluZGV4ID09PSAtMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYmFzZTY0VXJsIGNoYXJhY3RlcjogXCIgKyBiYXNlNjRVcmxDaGFyKTtcbiAgfVxuICBjb25zdCBiaW5hcnlTdHJpbmcgPSBpbmRleC50b1N0cmluZygyKS5wYWRTdGFydCg2LCBcIjBcIik7XG4gIGNvbnN0IGJpdHMgPSBBcnJheS5mcm9tKGJpbmFyeVN0cmluZykubWFwKE51bWJlcik7XG4gIHJldHVybiBiaXRzO1xufVxuZnVuY3Rpb24gYmFzZTY0VXJsU3RyaW5nVG9CaXRWZWN0b3IoYmFzZTY0VXJsU3RyaW5nKSB7XG4gIGxldCBiaXRWZWN0b3IgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBiYXNlNjRVcmxTdHJpbmcubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBiYXNlNjRVcmxDaGFyID0gYmFzZTY0VXJsU3RyaW5nLmNoYXJBdChpKTtcbiAgICBjb25zdCBiaXRzID0gYmFzZTY0VXJsQ2hhclRvNkJpdHMoYmFzZTY0VXJsQ2hhcik7XG4gICAgYml0VmVjdG9yID0gYml0VmVjdG9yLmNvbmNhdChiaXRzKTtcbiAgfVxuICByZXR1cm4gYml0VmVjdG9yO1xufVxuZnVuY3Rpb24gZGVjb2RlQmFzZTY0VVJMKHMsIGkpIHtcbiAgaWYgKHMubGVuZ3RoIDwgMikge1xuICAgIHRocm93IG5ldyBFcnJvcihgSW5wdXQgKHMgPSAke3N9KSBpcyBub3QgdGlnaHRseSBwYWNrZWQgYmVjYXVzZSBzLmxlbmd0aCA8IDJgKTtcbiAgfVxuICBsZXQgYml0cyA9IGJhc2U2NFVybFN0cmluZ1RvQml0VmVjdG9yKHMpO1xuICBjb25zdCBmaXJzdENoYXJPZmZzZXQgPSBpICUgNDtcbiAgaWYgKGZpcnN0Q2hhck9mZnNldCA9PT0gMCkge1xuICB9IGVsc2UgaWYgKGZpcnN0Q2hhck9mZnNldCA9PT0gMSkge1xuICAgIGJpdHMgPSBiaXRzLnNsaWNlKDIpO1xuICB9IGVsc2UgaWYgKGZpcnN0Q2hhck9mZnNldCA9PT0gMikge1xuICAgIGJpdHMgPSBiaXRzLnNsaWNlKDQpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihgSW5wdXQgKHMgPSAke3N9KSBpcyBub3QgdGlnaHRseSBwYWNrZWQgYmVjYXVzZSBpJTQgPSAzIChpID0gJHtpfSkpYCk7XG4gIH1cbiAgY29uc3QgbGFzdENoYXJPZmZzZXQgPSAoaSArIHMubGVuZ3RoIC0gMSkgJSA0O1xuICBpZiAobGFzdENoYXJPZmZzZXQgPT09IDMpIHtcbiAgfSBlbHNlIGlmIChsYXN0Q2hhck9mZnNldCA9PT0gMikge1xuICAgIGJpdHMgPSBiaXRzLnNsaWNlKDAsIGJpdHMubGVuZ3RoIC0gMik7XG4gIH0gZWxzZSBpZiAobGFzdENoYXJPZmZzZXQgPT09IDEpIHtcbiAgICBiaXRzID0gYml0cy5zbGljZSgwLCBiaXRzLmxlbmd0aCAtIDQpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnB1dCAocyA9ICR7c30pIGlzIG5vdCB0aWdodGx5IHBhY2tlZCBiZWNhdXNlIChpICsgcy5sZW5ndGggLSAxKSU0ID0gMCAoaSA9ICR7aX0pKWBcbiAgICApO1xuICB9XG4gIGlmIChiaXRzLmxlbmd0aCAlIDggIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFdlIHNob3VsZCBuZXZlciByZWFjaCBoZXJlLi4uYCk7XG4gIH1cbiAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShNYXRoLmZsb29yKGJpdHMubGVuZ3RoIC8gOCkpO1xuICBsZXQgY3VycmVudEJ5dGVJbmRleCA9IDA7XG4gIGZvciAobGV0IGkyID0gMDsgaTIgPCBiaXRzLmxlbmd0aDsgaTIgKz0gOCkge1xuICAgIGNvbnN0IGJpdENodW5rID0gYml0cy5zbGljZShpMiwgaTIgKyA4KTtcbiAgICBjb25zdCBieXRlID0gcGFyc2VJbnQoYml0Q2h1bmsuam9pbihcIlwiKSwgMik7XG4gICAgYnl0ZXNbY3VycmVudEJ5dGVJbmRleCsrXSA9IGJ5dGU7XG4gIH1cbiAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShieXRlcyk7XG59XG5mdW5jdGlvbiB2ZXJpZnlFeHRlbmRlZENsYWltKGNsYWltKSB7XG4gIGlmICghKGNsYWltLnNsaWNlKC0xKSA9PT0gXCJ9XCIgfHwgY2xhaW0uc2xpY2UoLTEpID09PSBcIixcIikpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGNsYWltXCIpO1xuICB9XG4gIGNvbnN0IGpzb24gPSBKU09OLnBhcnNlKFwie1wiICsgY2xhaW0uc2xpY2UoMCwgLTEpICsgXCJ9XCIpO1xuICBpZiAoT2JqZWN0LmtleXMoanNvbikubGVuZ3RoICE9PSAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBjbGFpbVwiKTtcbiAgfVxuICBjb25zdCBrZXkgPSBPYmplY3Qua2V5cyhqc29uKVswXTtcbiAgcmV0dXJuIFtrZXksIGpzb25ba2V5XV07XG59XG5mdW5jdGlvbiBleHRyYWN0Q2xhaW1WYWx1ZShjbGFpbSwgY2xhaW1OYW1lKSB7XG4gIGNvbnN0IGV4dGVuZGVkQ2xhaW0gPSBkZWNvZGVCYXNlNjRVUkwoY2xhaW0udmFsdWUsIGNsYWltLmluZGV4TW9kNCk7XG4gIGNvbnN0IFtuYW1lLCB2YWx1ZV0gPSB2ZXJpZnlFeHRlbmRlZENsYWltKGV4dGVuZGVkQ2xhaW0pO1xuICBpZiAobmFtZSAhPT0gY2xhaW1OYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIGZpZWxkIG5hbWU6IGZvdW5kICR7bmFtZX0gZXhwZWN0ZWQgJHtjbGFpbU5hbWV9YCk7XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuZXhwb3J0IHtcbiAgZXh0cmFjdENsYWltVmFsdWVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qd3QtdXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/jwt-utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/publickey.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/zklogin/publickey.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZkLoginPublicIdentifier: () => (/* binding */ ZkLoginPublicIdentifier),\n/* harmony export */   parseSerializedZkLoginSignature: () => (/* binding */ parseSerializedZkLoginSignature),\n/* harmony export */   toZkLoginPublicIdentifier: () => (/* binding */ toZkLoginPublicIdentifier)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _cryptography_publickey_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cryptography/publickey.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/publickey.js\");\n/* harmony import */ var _cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cryptography/signature-scheme.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js\");\n/* harmony import */ var _graphql_client_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../graphql/client.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/graphql/client.js\");\n/* harmony import */ var _graphql_schemas_2024_4_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graphql/schemas/2024.4/index.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/graphql/schemas/2024.4/index.js\");\n/* harmony import */ var _jwt_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./jwt-utils.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/jwt-utils.js\");\n/* harmony import */ var _signature_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./signature.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/signature.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/utils.js\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _data, _client;\n\n\n\n\n\n\n\n\nclass ZkLoginPublicIdentifier extends _cryptography_publickey_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey {\n  /**\n   * Create a new ZkLoginPublicIdentifier object\n   * @param value zkLogin public identifier as buffer or base-64 encoded string\n   */\n  constructor(value, { client } = {}) {\n    super();\n    __privateAdd(this, _data, void 0);\n    __privateAdd(this, _client, void 0);\n    __privateSet(this, _client, client);\n    if (typeof value === \"string\") {\n      __privateSet(this, _data, (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.fromB64)(value));\n    } else if (value instanceof Uint8Array) {\n      __privateSet(this, _data, value);\n    } else {\n      __privateSet(this, _data, Uint8Array.from(value));\n    }\n  }\n  /**\n   * Checks if two zkLogin public identifiers are equal\n   */\n  equals(publicKey) {\n    return super.equals(publicKey);\n  }\n  /**\n   * Return the byte array representation of the zkLogin public identifier\n   */\n  toRawBytes() {\n    return __privateGet(this, _data);\n  }\n  /**\n   * Return the Sui address associated with this ZkLogin public identifier\n   */\n  flag() {\n    return _cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_2__.SIGNATURE_SCHEME_TO_FLAG[\"ZkLogin\"];\n  }\n  /**\n   * Verifies that the signature is valid for for the provided message\n   */\n  async verify(_message, _signature) {\n    throw Error(\"does not support\");\n  }\n  /**\n   * Verifies that the signature is valid for for the provided PersonalMessage\n   */\n  verifyPersonalMessage(message, signature) {\n    const parsedSignature = parseSerializedZkLoginSignature(signature);\n    return graphqlVerifyZkLoginSignature({\n      address: parsedSignature.zkLogin.address,\n      bytes: (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.toB64)(message),\n      signature: parsedSignature.serializedSignature,\n      intentScope: \"PERSONAL_MESSAGE\",\n      client: __privateGet(this, _client)\n    });\n  }\n  /**\n   * Verifies that the signature is valid for for the provided TransactionBlock\n   */\n  verifyTransactionBlock(transactionBlock, signature) {\n    const parsedSignature = parseSerializedZkLoginSignature(signature);\n    return graphqlVerifyZkLoginSignature({\n      address: parsedSignature.zkLogin.address,\n      bytes: (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.toB64)(transactionBlock),\n      signature: parsedSignature.serializedSignature,\n      intentScope: \"TRANSACTION_DATA\",\n      client: __privateGet(this, _client)\n    });\n  }\n}\n_data = new WeakMap();\n_client = new WeakMap();\nfunction toZkLoginPublicIdentifier(addressSeed, iss, options) {\n  const addressSeedBytesBigEndian = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.toPaddedBigEndianBytes)(addressSeed, 32);\n  const issBytes = new TextEncoder().encode(iss);\n  const tmp = new Uint8Array(1 + issBytes.length + addressSeedBytesBigEndian.length);\n  tmp.set([issBytes.length], 0);\n  tmp.set(issBytes, 1);\n  tmp.set(addressSeedBytesBigEndian, 1 + issBytes.length);\n  return new ZkLoginPublicIdentifier(tmp, options);\n}\nconst VerifyZkLoginSignatureQuery = (0,_graphql_schemas_2024_4_index_js__WEBPACK_IMPORTED_MODULE_4__.graphql)(`\n\tquery Zklogin(\n\t\t$bytes: Base64!\n\t\t$signature: Base64!\n\t\t$intentScope: ZkLoginIntentScope!\n\t\t$author: SuiAddress!\n\t) {\n\t\tverifyZkloginSignature(\n\t\t\tbytes: $bytes\n\t\t\tsignature: $signature\n\t\t\tintentScope: $intentScope\n\t\t\tauthor: $author\n\t\t) {\n\t\t\tsuccess\n\t\t\terrors\n\t\t}\n\t}\n`);\nasync function graphqlVerifyZkLoginSignature({\n  address,\n  bytes,\n  signature,\n  intentScope,\n  client = new _graphql_client_js__WEBPACK_IMPORTED_MODULE_5__.SuiGraphQLClient({\n    url: \"https://sui-mainnet.mystenlabs.com/graphql\"\n  })\n}) {\n  const resp = await client.query({\n    query: VerifyZkLoginSignatureQuery,\n    variables: {\n      bytes,\n      signature,\n      intentScope,\n      author: address\n    }\n  });\n  return resp.data?.verifyZkloginSignature.success === true && resp.data?.verifyZkloginSignature.errors.length === 0;\n}\nfunction parseSerializedZkLoginSignature(signature) {\n  const bytes = typeof signature === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.fromB64)(signature) : signature;\n  if (bytes[0] !== _cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_2__.SIGNATURE_SCHEME_TO_FLAG.ZkLogin) {\n    throw new Error(\"Invalid signature scheme\");\n  }\n  const signatureBytes = bytes.slice(1);\n  const { inputs, maxEpoch, userSignature } = (0,_signature_js__WEBPACK_IMPORTED_MODULE_6__.parseZkLoginSignature)(signatureBytes);\n  const { issBase64Details, addressSeed } = inputs;\n  const iss = (0,_jwt_utils_js__WEBPACK_IMPORTED_MODULE_7__.extractClaimValue)(issBase64Details, \"iss\");\n  const publicIdentifer = toZkLoginPublicIdentifier(BigInt(addressSeed), iss);\n  const address = publicIdentifer.toSuiAddress();\n  return {\n    serializedSignature: (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.toB64)(bytes),\n    signatureScheme: \"ZkLogin\",\n    zkLogin: {\n      inputs,\n      maxEpoch,\n      userSignature,\n      iss,\n      address,\n      addressSeed: BigInt(addressSeed)\n    },\n    signature: bytes,\n    publicKey: publicIdentifer.toRawBytes()\n  };\n}\n\n//# sourceMappingURL=publickey.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/publickey.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/signature.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/zklogin/signature.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getZkLoginSignature: () => (/* binding */ getZkLoginSignature),\n/* harmony export */   parseZkLoginSignature: () => (/* binding */ parseZkLoginSignature)\n/* harmony export */ });\n/* harmony import */ var _mysten_bcs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @mysten/bcs */ \"(ssr)/../../node_modules/@mysten/bcs/dist/esm/b64.js\");\n/* harmony import */ var _cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cryptography/signature-scheme.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/cryptography/signature-scheme.js\");\n/* harmony import */ var _bcs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bcs.js */ \"(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/bcs.js\");\n\n\n\nfunction getZkLoginSignatureBytes({ inputs, maxEpoch, userSignature }) {\n  return _bcs_js__WEBPACK_IMPORTED_MODULE_0__.zkLoginSignature.serialize(\n    {\n      inputs,\n      maxEpoch,\n      userSignature: typeof userSignature === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.fromB64)(userSignature) : userSignature\n    },\n    { maxSize: 2048 }\n  ).toBytes();\n}\nfunction getZkLoginSignature({ inputs, maxEpoch, userSignature }) {\n  const bytes = getZkLoginSignatureBytes({ inputs, maxEpoch, userSignature });\n  const signatureBytes = new Uint8Array(bytes.length + 1);\n  signatureBytes.set([_cryptography_signature_scheme_js__WEBPACK_IMPORTED_MODULE_2__.SIGNATURE_SCHEME_TO_FLAG.ZkLogin]);\n  signatureBytes.set(bytes, 1);\n  return (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.toB64)(signatureBytes);\n}\nfunction parseZkLoginSignature(signature) {\n  return _bcs_js__WEBPACK_IMPORTED_MODULE_0__.zkLoginSignature.parse(typeof signature === \"string\" ? (0,_mysten_bcs__WEBPACK_IMPORTED_MODULE_1__.fromB64)(signature) : signature);\n}\n\n//# sourceMappingURL=signature.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3prbG9naW4vc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTZDO0FBQ2tDO0FBQ25DO0FBQzVDLG9DQUFvQyxpQ0FBaUM7QUFDckUsU0FBUyxxREFBZ0I7QUFDekI7QUFDQTtBQUNBO0FBQ0EseURBQXlELG9EQUFPO0FBQ2hFLEtBQUs7QUFDTCxNQUFNO0FBQ047QUFDQTtBQUNBLCtCQUErQixpQ0FBaUM7QUFDaEUsMkNBQTJDLGlDQUFpQztBQUM1RTtBQUNBLHNCQUFzQix1RkFBd0I7QUFDOUM7QUFDQSxTQUFTLGtEQUFLO0FBQ2Q7QUFDQTtBQUNBLFNBQVMscURBQWdCLHVDQUF1QyxvREFBTztBQUN2RTtBQUlFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AdmluZGV4L3dhbGxldC1hcHAvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3prbG9naW4vc2lnbmF0dXJlLmpzPzM5YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUI2NCwgdG9CNjQgfSBmcm9tIFwiQG15c3Rlbi9iY3NcIjtcbmltcG9ydCB7IFNJR05BVFVSRV9TQ0hFTUVfVE9fRkxBRyB9IGZyb20gXCIuLi9jcnlwdG9ncmFwaHkvc2lnbmF0dXJlLXNjaGVtZS5qc1wiO1xuaW1wb3J0IHsgemtMb2dpblNpZ25hdHVyZSB9IGZyb20gXCIuL2Jjcy5qc1wiO1xuZnVuY3Rpb24gZ2V0WmtMb2dpblNpZ25hdHVyZUJ5dGVzKHsgaW5wdXRzLCBtYXhFcG9jaCwgdXNlclNpZ25hdHVyZSB9KSB7XG4gIHJldHVybiB6a0xvZ2luU2lnbmF0dXJlLnNlcmlhbGl6ZShcbiAgICB7XG4gICAgICBpbnB1dHMsXG4gICAgICBtYXhFcG9jaCxcbiAgICAgIHVzZXJTaWduYXR1cmU6IHR5cGVvZiB1c2VyU2lnbmF0dXJlID09PSBcInN0cmluZ1wiID8gZnJvbUI2NCh1c2VyU2lnbmF0dXJlKSA6IHVzZXJTaWduYXR1cmVcbiAgICB9LFxuICAgIHsgbWF4U2l6ZTogMjA0OCB9XG4gICkudG9CeXRlcygpO1xufVxuZnVuY3Rpb24gZ2V0WmtMb2dpblNpZ25hdHVyZSh7IGlucHV0cywgbWF4RXBvY2gsIHVzZXJTaWduYXR1cmUgfSkge1xuICBjb25zdCBieXRlcyA9IGdldFprTG9naW5TaWduYXR1cmVCeXRlcyh7IGlucHV0cywgbWF4RXBvY2gsIHVzZXJTaWduYXR1cmUgfSk7XG4gIGNvbnN0IHNpZ25hdHVyZUJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoYnl0ZXMubGVuZ3RoICsgMSk7XG4gIHNpZ25hdHVyZUJ5dGVzLnNldChbU0lHTkFUVVJFX1NDSEVNRV9UT19GTEFHLlprTG9naW5dKTtcbiAgc2lnbmF0dXJlQnl0ZXMuc2V0KGJ5dGVzLCAxKTtcbiAgcmV0dXJuIHRvQjY0KHNpZ25hdHVyZUJ5dGVzKTtcbn1cbmZ1bmN0aW9uIHBhcnNlWmtMb2dpblNpZ25hdHVyZShzaWduYXR1cmUpIHtcbiAgcmV0dXJuIHprTG9naW5TaWduYXR1cmUucGFyc2UodHlwZW9mIHNpZ25hdHVyZSA9PT0gXCJzdHJpbmdcIiA/IGZyb21CNjQoc2lnbmF0dXJlKSA6IHNpZ25hdHVyZSk7XG59XG5leHBvcnQge1xuICBnZXRaa0xvZ2luU2lnbmF0dXJlLFxuICBwYXJzZVprTG9naW5TaWduYXR1cmVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduYXR1cmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/signature.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/utils.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@mysten/sui.js/dist/esm/zklogin/utils.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toBigEndianBytes: () => (/* binding */ toBigEndianBytes),\n/* harmony export */   toPaddedBigEndianBytes: () => (/* binding */ toPaddedBigEndianBytes)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/utils */ \"(ssr)/../../node_modules/@noble/hashes/esm/utils.js\");\n\nfunction findFirstNonZeroIndex(bytes) {\n  for (let i = 0; i < bytes.length; i++) {\n    if (bytes[i] !== 0) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction toPaddedBigEndianBytes(num, width) {\n  const hex = num.toString(16);\n  return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.hexToBytes)(hex.padStart(width * 2, \"0\").slice(-width * 2));\n}\nfunction toBigEndianBytes(num, width) {\n  const bytes = toPaddedBigEndianBytes(num, width);\n  const firstNonZeroIndex = findFirstNonZeroIndex(bytes);\n  if (firstNonZeroIndex === -1) {\n    return new Uint8Array([0]);\n  }\n  return bytes.slice(firstNonZeroIndex);\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BteXN0ZW4vc3VpLmpzL2Rpc3QvZXNtL3prbG9naW4vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ2pEO0FBQ0Esa0JBQWtCLGtCQUFrQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywrREFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHZpbmRleC93YWxsZXQtYXBwLy4uLy4uL25vZGVfbW9kdWxlcy9AbXlzdGVuL3N1aS5qcy9kaXN0L2VzbS96a2xvZ2luL3V0aWxzLmpzPzg4NDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGV4VG9CeXRlcyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG5mdW5jdGlvbiBmaW5kRmlyc3ROb25aZXJvSW5kZXgoYnl0ZXMpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChieXRlc1tpXSAhPT0gMCkge1xuICAgICAgcmV0dXJuIGk7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cbmZ1bmN0aW9uIHRvUGFkZGVkQmlnRW5kaWFuQnl0ZXMobnVtLCB3aWR0aCkge1xuICBjb25zdCBoZXggPSBudW0udG9TdHJpbmcoMTYpO1xuICByZXR1cm4gaGV4VG9CeXRlcyhoZXgucGFkU3RhcnQod2lkdGggKiAyLCBcIjBcIikuc2xpY2UoLXdpZHRoICogMikpO1xufVxuZnVuY3Rpb24gdG9CaWdFbmRpYW5CeXRlcyhudW0sIHdpZHRoKSB7XG4gIGNvbnN0IGJ5dGVzID0gdG9QYWRkZWRCaWdFbmRpYW5CeXRlcyhudW0sIHdpZHRoKTtcbiAgY29uc3QgZmlyc3ROb25aZXJvSW5kZXggPSBmaW5kRmlyc3ROb25aZXJvSW5kZXgoYnl0ZXMpO1xuICBpZiAoZmlyc3ROb25aZXJvSW5kZXggPT09IC0xKSB7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFswXSk7XG4gIH1cbiAgcmV0dXJuIGJ5dGVzLnNsaWNlKGZpcnN0Tm9uWmVyb0luZGV4KTtcbn1cbmV4cG9ydCB7XG4gIHRvQmlnRW5kaWFuQnl0ZXMsXG4gIHRvUGFkZGVkQmlnRW5kaWFuQnl0ZXNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@mysten/sui.js/dist/esm/zklogin/utils.js\n");

/***/ })

};
;